use std::{sync::{Arc, RwLock}, fs::File, io::Write};

use eframe::{App, Theme};
use egui::*;
use generators::generate::generate;
use manager::{MazeThread};

use crate::tools::{options::{MazeData, AnimOptions}, consts::MazeOptions};
mod generators;
mod manager;
mod point;
mod solve;
mod tools;

fn main() -> anyhow::Result<()> {
    let mut out = "iteration;val\n".to_string();
    let mut old = 0;
    for i in (10..100).step_by(2) {

        let data = MazeData::new(
            &Context::default(),
            &Arc::new(RwLock::new(Vec::new())),
            &MazeOptions::new(i, rand::random()),
            &AnimOptions::new(false, false, 1.0)
        );
        let maze = generate(&data)?;

        print!("{},{}\n", i, maze.0 - old);
        out += &format!("{};{}\n", i, maze.0);
        old = maze.0;
    }


    let mut file = File::create("target/out.csv")?;
    file.write_all(out.as_bytes())?;
    Ok(())
}