<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="565.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="2267"><g><title>LLVMRustCreateTargetMachine (1 samples, 0.04%)</title><rect x="0.0000%" y="501" width="0.0441%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>llvm::RegisterTargetMachine&lt;llvm::X86TargetMachine&gt;::Allocator (1 samples, 0.04%)</title><rect x="0.0000%" y="485" width="0.0441%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.04%)</title><rect x="0.0000%" y="469" width="0.0441%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::invalidate (1 samples, 0.04%)</title><rect x="0.0441%" y="469" width="0.0441%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2941%" y="479.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::CGProfilePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.04%)</title><rect x="0.0882%" y="469" width="0.0441%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3382%" y="479.50"></text></g><g><title>llvm::CGProfilePass::run (1 samples, 0.04%)</title><rect x="0.0882%" y="453" width="0.0441%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3382%" y="463.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="0.0882%" y="437" width="0.0441%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3382%" y="447.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="0.0882%" y="421" width="0.0441%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3382%" y="431.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="0.0882%" y="405" width="0.0441%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3382%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="0.0882%" y="389" width="0.0441%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.3382%" y="399.50"></text></g><g><title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.04%)</title><rect x="0.0882%" y="373" width="0.0441%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.3382%" y="383.50"></text></g><g><title>llvm::BranchProbabilityInfo::SccInfo::SccInfo (1 samples, 0.04%)</title><rect x="0.0882%" y="357" width="0.0441%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.3382%" y="367.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::CalledValuePropagationPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (5 samples, 0.22%)</title><rect x="0.1323%" y="469" width="0.2206%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="5"/><text x="0.3823%" y="479.50"></text></g><g><title>runCVP (5 samples, 0.22%)</title><rect x="0.1323%" y="453" width="0.2206%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="5"/><text x="0.3823%" y="463.50"></text></g><g><title>llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt; &gt;::visitInst (5 samples, 0.22%)</title><rect x="0.1323%" y="437" width="0.2206%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="5"/><text x="0.3823%" y="447.50"></text></g><g><title>std::local_Rb_tree_decrement (1 samples, 0.04%)</title><rect x="0.3088%" y="421" width="0.0441%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="0.5588%" y="431.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::DeadArgumentEliminationPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.04%)</title><rect x="0.3529%" y="469" width="0.0441%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="0.6029%" y="479.50"></text></g><g><title>llvm::DeadArgumentEliminationPass::run (1 samples, 0.04%)</title><rect x="0.3529%" y="453" width="0.0441%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="0.6029%" y="463.50"></text></g><g><title>llvm::DeadArgumentEliminationPass::removeDeadArgumentsFromCallers (1 samples, 0.04%)</title><rect x="0.3529%" y="437" width="0.0441%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="0.6029%" y="447.50"></text></g><g><title>llvm::GlobalValue::isInterposable (1 samples, 0.04%)</title><rect x="0.3529%" y="421" width="0.0441%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="0.6029%" y="431.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::GlobalOptPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.04%)</title><rect x="0.3970%" y="469" width="0.0441%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="1"/><text x="0.6470%" y="479.50"></text></g><g><title>llvm::GlobalOptPass::run (1 samples, 0.04%)</title><rect x="0.3970%" y="453" width="0.0441%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="1"/><text x="0.6470%" y="463.50"></text></g><g><title>optimizeGlobalsInModule (1 samples, 0.04%)</title><rect x="0.3970%" y="437" width="0.0441%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="1"/><text x="0.6470%" y="447.50"></text></g><g><title>llvm::removeUnreachableBlocks (1 samples, 0.04%)</title><rect x="0.3970%" y="421" width="0.0441%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="1"/><text x="0.6470%" y="431.50"></text></g><g><title>llvm::SCCPInstVisitor::handleCallResult (1 samples, 0.04%)</title><rect x="0.5293%" y="405" width="0.0441%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="1"/><text x="0.7793%" y="415.50"></text></g><g><title>llvm::SCCPInstVisitor::solve (4 samples, 0.18%)</title><rect x="0.4852%" y="421" width="0.1764%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="4"/><text x="0.7352%" y="431.50"></text></g><g><title>llvm::SCCPInstVisitor::visitGetElementPtrInst (2 samples, 0.09%)</title><rect x="0.5734%" y="405" width="0.0882%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="2"/><text x="0.8234%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="0.6617%" y="405" width="0.0882%" height="15" fill="rgb(238,160,17)" fg:x="15" fg:w="2"/><text x="0.9117%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (2 samples, 0.09%)</title><rect x="0.6617%" y="389" width="0.0882%" height="15" fill="rgb(214,148,48)" fg:x="15" fg:w="2"/><text x="0.9117%" y="399.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (2 samples, 0.09%)</title><rect x="0.6617%" y="373" width="0.0882%" height="15" fill="rgb(232,36,49)" fg:x="15" fg:w="2"/><text x="0.9117%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::IPSCCPPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (10 samples, 0.44%)</title><rect x="0.4411%" y="469" width="0.4411%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="10"/><text x="0.6911%" y="479.50"></text></g><g><title>llvm::IPSCCPPass::run (10 samples, 0.44%)</title><rect x="0.4411%" y="453" width="0.4411%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="10"/><text x="0.6911%" y="463.50"></text></g><g><title>llvm::runIPSCCP (10 samples, 0.44%)</title><rect x="0.4411%" y="437" width="0.4411%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="10"/><text x="0.6911%" y="447.50"></text></g><g><title>llvm::function_ref&lt;llvm::AnalysisResultsForFn (llvm::Function&amp;)&gt;::callback_fn&lt;llvm::IPSCCPPass::run(llvm::Module&amp;, llvm::AnalysisManager&lt;llvm::Module&gt;&amp;)::$_1&gt; (5 samples, 0.22%)</title><rect x="0.6617%" y="421" width="0.2206%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="5"/><text x="0.9117%" y="431.50"></text></g><g><title>llvm::PredicateInfoBuilder::buildPredicateInfo (3 samples, 0.13%)</title><rect x="0.7499%" y="405" width="0.1323%" height="15" fill="rgb(241,83,37)" fg:x="17" fg:w="3"/><text x="0.9999%" y="415.50"></text></g><g><title>llvm::PredicateInfoBuilder::renameUses (2 samples, 0.09%)</title><rect x="0.7940%" y="389" width="0.0882%" height="15" fill="rgb(233,36,39)" fg:x="18" fg:w="2"/><text x="1.0440%" y="399.50"></text></g><g><title>std::__stable_sort_adaptive&lt;llvm::ValueDFS*, llvm::ValueDFS*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::ValueDFS_Compare&gt; &gt; (1 samples, 0.04%)</title><rect x="0.8381%" y="373" width="0.0441%" height="15" fill="rgb(226,3,54)" fg:x="19" fg:w="1"/><text x="1.0881%" y="383.50"></text></g><g><title>std::__merge_adaptive&lt;llvm::ValueDFS*, long, llvm::ValueDFS*, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::ValueDFS_Compare&gt; &gt; (1 samples, 0.04%)</title><rect x="0.8381%" y="357" width="0.0441%" height="15" fill="rgb(245,192,40)" fg:x="19" fg:w="1"/><text x="1.0881%" y="367.50"></text></g><g><title>llvm::FunctionComparator::compare (1 samples, 0.04%)</title><rect x="0.8822%" y="437" width="0.0441%" height="15" fill="rgb(238,167,29)" fg:x="20" fg:w="1"/><text x="1.1322%" y="447.50"></text></g><g><title>llvm::FunctionComparator::cmpBasicBlocks (1 samples, 0.04%)</title><rect x="0.8822%" y="421" width="0.0441%" height="15" fill="rgb(232,182,51)" fg:x="20" fg:w="1"/><text x="1.1322%" y="431.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::MergeFunctionsPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (2 samples, 0.09%)</title><rect x="0.8822%" y="469" width="0.0882%" height="15" fill="rgb(231,60,39)" fg:x="20" fg:w="2"/><text x="1.1322%" y="479.50"></text></g><g><title>llvm::MergeFunctionsPass::run (2 samples, 0.09%)</title><rect x="0.8822%" y="453" width="0.0882%" height="15" fill="rgb(208,69,12)" fg:x="20" fg:w="2"/><text x="1.1322%" y="463.50"></text></g><g><title>llvm::FunctionComparator::functionHash (1 samples, 0.04%)</title><rect x="0.9263%" y="437" width="0.0441%" height="15" fill="rgb(235,93,37)" fg:x="21" fg:w="1"/><text x="1.1763%" y="447.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.04%)</title><rect x="0.9704%" y="421" width="0.0441%" height="15" fill="rgb(213,116,39)" fg:x="22" fg:w="1"/><text x="1.2204%" y="431.50"></text></g><g><title>llvm::ModuleToFunctionPassAdaptor::run (1 samples, 0.04%)</title><rect x="0.9704%" y="405" width="0.0441%" height="15" fill="rgb(222,207,29)" fg:x="22" fg:w="1"/><text x="1.2204%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (1 samples, 0.04%)</title><rect x="0.9704%" y="389" width="0.0441%" height="15" fill="rgb(206,96,30)" fg:x="22" fg:w="1"/><text x="1.2204%" y="399.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="0.9704%" y="373" width="0.0441%" height="15" fill="rgb(218,138,4)" fg:x="22" fg:w="1"/><text x="1.2204%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="1.0146%" y="389" width="0.0441%" height="15" fill="rgb(250,191,14)" fg:x="23" fg:w="1"/><text x="1.2646%" y="399.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::invalidate (1 samples, 0.04%)</title><rect x="1.0587%" y="389" width="0.0441%" height="15" fill="rgb(239,60,40)" fg:x="24" fg:w="1"/><text x="1.3087%" y="399.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::LazyCallGraph::SCC, llvm::FunctionAnalysisManagerCGSCCProxy, llvm::FunctionAnalysisManagerCGSCCProxy::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="1.0587%" y="373" width="0.0441%" height="15" fill="rgb(206,27,48)" fg:x="24" fg:w="1"/><text x="1.3087%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (1 samples, 0.04%)</title><rect x="1.0587%" y="357" width="0.0441%" height="15" fill="rgb(225,35,8)" fg:x="24" fg:w="1"/><text x="1.3087%" y="367.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="1.1028%" y="325" width="0.0441%" height="15" fill="rgb(250,213,24)" fg:x="25" fg:w="1"/><text x="1.3528%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="1.3233%" y="309" width="0.0441%" height="15" fill="rgb(247,123,22)" fg:x="30" fg:w="1"/><text x="1.5733%" y="319.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::ADCEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="1.3674%" y="309" width="0.0441%" height="15" fill="rgb(231,138,38)" fg:x="31" fg:w="1"/><text x="1.6174%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="1.5439%" y="277" width="0.0441%" height="15" fill="rgb(231,145,46)" fg:x="35" fg:w="1"/><text x="1.7939%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="1.5439%" y="261" width="0.0441%" height="15" fill="rgb(251,118,11)" fg:x="35" fg:w="1"/><text x="1.7939%" y="271.50"></text></g><g><title>llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt; (1 samples, 0.04%)</title><rect x="1.5439%" y="245" width="0.0441%" height="15" fill="rgb(217,147,25)" fg:x="35" fg:w="1"/><text x="1.7939%" y="255.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::FindRoots (1 samples, 0.04%)</title><rect x="1.5439%" y="229" width="0.0441%" height="15" fill="rgb(247,81,37)" fg:x="35" fg:w="1"/><text x="1.7939%" y="239.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::ADCEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (5 samples, 0.22%)</title><rect x="1.4116%" y="309" width="0.2206%" height="15" fill="rgb(209,12,38)" fg:x="32" fg:w="5"/><text x="1.6616%" y="319.50"></text></g><g><title>llvm::ADCEPass::run (5 samples, 0.22%)</title><rect x="1.4116%" y="293" width="0.2206%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="5"/><text x="1.6616%" y="303.50"></text></g><g><title>llvm::MapVector&lt;llvm::BasicBlock*, (anonymous namespace)::BlockInfoType, llvm::DenseMap&lt;llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, unsigned int&gt; &gt;, std::vector&lt;std::pair&lt;llvm::BasicBlock*, (anonymous namespace)::BlockInfoType&gt;, std::allocator&lt;std::pair&lt;llvm::BasicBlock*, (anonymous namespace)::BlockInfoType&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1.5880%" y="277" width="0.0441%" height="15" fill="rgb(248,47,43)" fg:x="36" fg:w="1"/><text x="1.8380%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::BDCEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (4 samples, 0.18%)</title><rect x="1.6321%" y="309" width="0.1764%" height="15" fill="rgb(221,10,30)" fg:x="37" fg:w="4"/><text x="1.8821%" y="319.50"></text></g><g><title>bitTrackingDCE (4 samples, 0.18%)</title><rect x="1.6321%" y="293" width="0.1764%" height="15" fill="rgb(210,229,1)" fg:x="37" fg:w="4"/><text x="1.8821%" y="303.50"></text></g><g><title>llvm::DemandedBits::isInstructionDead (4 samples, 0.18%)</title><rect x="1.6321%" y="277" width="0.1764%" height="15" fill="rgb(222,148,37)" fg:x="37" fg:w="4"/><text x="1.8821%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::CorrelatedValuePropagationPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (5 samples, 0.22%)</title><rect x="1.8086%" y="309" width="0.2206%" height="15" fill="rgb(234,67,33)" fg:x="41" fg:w="5"/><text x="2.0586%" y="319.50"></text></g><g><title>llvm::CorrelatedValuePropagationPass::run (5 samples, 0.22%)</title><rect x="1.8086%" y="293" width="0.2206%" height="15" fill="rgb(247,98,35)" fg:x="41" fg:w="5"/><text x="2.0586%" y="303.50"></text></g><g><title>runImpl (5 samples, 0.22%)</title><rect x="1.8086%" y="277" width="0.2206%" height="15" fill="rgb(247,138,52)" fg:x="41" fg:w="5"/><text x="2.0586%" y="287.50"></text></g><g><title>llvm::LazyValueInfo::getConstant (5 samples, 0.22%)</title><rect x="1.8086%" y="261" width="0.2206%" height="15" fill="rgb(213,79,30)" fg:x="41" fg:w="5"/><text x="2.0586%" y="271.50"></text></g><g><title>llvm::BasicAAResult::aliasCheck (1 samples, 0.04%)</title><rect x="2.0291%" y="293" width="0.0441%" height="15" fill="rgb(246,177,23)" fg:x="46" fg:w="1"/><text x="2.2791%" y="303.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, bool, llvm::DenseMapInfo&lt;llvm::Value const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value const*, bool&gt; &gt;, llvm::Value const*, bool, llvm::DenseMapInfo&lt;llvm::Value const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value const*, bool&gt; &gt;::InsertIntoBucketImpl&lt;llvm::Value const*&gt; (1 samples, 0.04%)</title><rect x="2.0732%" y="293" width="0.0441%" height="15" fill="rgb(230,62,27)" fg:x="47" fg:w="1"/><text x="2.3232%" y="303.50"></text></g><g><title>llvm::MemoryLocation::getForDest (1 samples, 0.04%)</title><rect x="2.1173%" y="293" width="0.0441%" height="15" fill="rgb(216,154,8)" fg:x="48" fg:w="1"/><text x="2.3673%" y="303.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::DSEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (5 samples, 0.22%)</title><rect x="2.0291%" y="309" width="0.2206%" height="15" fill="rgb(244,35,45)" fg:x="46" fg:w="5"/><text x="2.2791%" y="319.50"></text></g><g><title>llvm::MemorySSA::ensureOptimizedUses (2 samples, 0.09%)</title><rect x="2.1614%" y="293" width="0.0882%" height="15" fill="rgb(251,115,12)" fg:x="49" fg:w="2"/><text x="2.4114%" y="303.50"></text></g><g><title>llvm::MemorySSA::OptimizeUses::optimizeUses (2 samples, 0.09%)</title><rect x="2.1614%" y="277" width="0.0882%" height="15" fill="rgb(240,54,50)" fg:x="49" fg:w="2"/><text x="2.4114%" y="287.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="2.2938%" y="293" width="0.0882%" height="15" fill="rgb(233,84,52)" fg:x="52" fg:w="2"/><text x="2.5438%" y="303.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::MemorySSAAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (2 samples, 0.09%)</title><rect x="2.2938%" y="277" width="0.0882%" height="15" fill="rgb(207,117,47)" fg:x="52" fg:w="2"/><text x="2.5438%" y="287.50"></text></g><g><title>llvm::MemorySSA::buildMemorySSA (2 samples, 0.09%)</title><rect x="2.2938%" y="261" width="0.0882%" height="15" fill="rgb(249,43,39)" fg:x="52" fg:w="2"/><text x="2.5438%" y="271.50"></text></g><g><title>llvm::ScopedHashTable&lt;(anonymous namespace)::SimpleValue, llvm::Value*, llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue, void&gt;, llvm::RecyclingAllocator&lt;llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul, 128ul&gt;, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;, 32ul, 8ul&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="2.3820%" y="293" width="0.0441%" height="15" fill="rgb(209,38,44)" fg:x="54" fg:w="1"/><text x="2.6320%" y="303.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::EarlyCSEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (6 samples, 0.26%)</title><rect x="2.2497%" y="309" width="0.2647%" height="15" fill="rgb(236,212,23)" fg:x="51" fg:w="6"/><text x="2.4997%" y="319.50"></text></g><g><title>llvm::simplifyInstruction (2 samples, 0.09%)</title><rect x="2.4261%" y="293" width="0.0882%" height="15" fill="rgb(242,79,21)" fg:x="55" fg:w="2"/><text x="2.6761%" y="303.50"></text></g><g><title>simplifyICmpInst (1 samples, 0.04%)</title><rect x="2.4702%" y="277" width="0.0441%" height="15" fill="rgb(211,96,35)" fg:x="56" fg:w="1"/><text x="2.7202%" y="287.50"></text></g><g><title>isKnownNonZero (1 samples, 0.04%)</title><rect x="2.4702%" y="261" width="0.0441%" height="15" fill="rgb(253,215,40)" fg:x="56" fg:w="1"/><text x="2.7202%" y="271.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (2 samples, 0.09%)</title><rect x="2.5143%" y="277" width="0.0882%" height="15" fill="rgb(211,81,21)" fg:x="57" fg:w="2"/><text x="2.7643%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LoopSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="2.5584%" y="261" width="0.0441%" height="15" fill="rgb(208,190,38)" fg:x="58" fg:w="1"/><text x="2.8084%" y="271.50"></text></g><g><title>llvm::simplifyLoop (1 samples, 0.04%)</title><rect x="2.5584%" y="245" width="0.0441%" height="15" fill="rgb(235,213,38)" fg:x="58" fg:w="1"/><text x="2.8084%" y="255.50"></text></g><g><title>llvm::SCEVExpander::replaceCongruentIVs (1 samples, 0.04%)</title><rect x="2.6467%" y="229" width="0.0441%" height="15" fill="rgb(237,122,38)" fg:x="60" fg:w="1"/><text x="2.8967%" y="239.50"></text></g><g><title>llvm::DenseMap&lt;llvm::SCEV const*, llvm::PHINode*, llvm::DenseMapInfo&lt;llvm::SCEV const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::SCEV const*, llvm::PHINode*&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="2.6467%" y="213" width="0.0441%" height="15" fill="rgb(244,218,35)" fg:x="60" fg:w="1"/><text x="2.8967%" y="223.50"></text></g><g><title>llvm::ValueHandleBase::AddToUseList (1 samples, 0.04%)</title><rect x="2.6908%" y="229" width="0.0441%" height="15" fill="rgb(240,68,47)" fg:x="61" fg:w="1"/><text x="2.9408%" y="239.50"></text></g><g><title>llvm::ScalarEvolution::evaluatePredicateAt (1 samples, 0.04%)</title><rect x="2.7349%" y="213" width="0.0441%" height="15" fill="rgb(210,16,53)" fg:x="62" fg:w="1"/><text x="2.9849%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::isKnownPredicate (1 samples, 0.04%)</title><rect x="2.7349%" y="197" width="0.0441%" height="15" fill="rgb(235,124,12)" fg:x="62" fg:w="1"/><text x="2.9849%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaInduction (1 samples, 0.04%)</title><rect x="2.7349%" y="181" width="0.0441%" height="15" fill="rgb(224,169,11)" fg:x="62" fg:w="1"/><text x="2.9849%" y="191.50"></text></g><g><title>llvm::SCEVRewriteVisitor&lt;(anonymous namespace)::SCEVInitRewriter&gt;::visit (1 samples, 0.04%)</title><rect x="2.7349%" y="165" width="0.0441%" height="15" fill="rgb(250,166,2)" fg:x="62" fg:w="1"/><text x="2.9849%" y="175.50"></text></g><g><title>llvm::SCEVRewriteVisitor&lt;(anonymous namespace)::SCEVInitRewriter&gt;::visit (1 samples, 0.04%)</title><rect x="2.7349%" y="149" width="0.0441%" height="15" fill="rgb(242,216,29)" fg:x="62" fg:w="1"/><text x="2.9849%" y="159.50"></text></g><g><title>llvm::SCEVRewriteVisitor&lt;(anonymous namespace)::SCEVInitRewriter&gt;::visit (1 samples, 0.04%)</title><rect x="2.7349%" y="133" width="0.0441%" height="15" fill="rgb(230,116,27)" fg:x="62" fg:w="1"/><text x="2.9849%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::proveNoSignedWrapViaInduction (1 samples, 0.04%)</title><rect x="2.7790%" y="165" width="0.0441%" height="15" fill="rgb(228,99,48)" fg:x="63" fg:w="1"/><text x="3.0290%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::isBasicBlockEntryGuardedByCond (1 samples, 0.04%)</title><rect x="2.7790%" y="149" width="0.0441%" height="15" fill="rgb(253,11,6)" fg:x="63" fg:w="1"/><text x="3.0290%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaNonRecursiveReasoning (1 samples, 0.04%)</title><rect x="2.7790%" y="133" width="0.0441%" height="15" fill="rgb(247,143,39)" fg:x="63" fg:w="1"/><text x="3.0290%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::getMinusSCEV (1 samples, 0.04%)</title><rect x="2.7790%" y="117" width="0.0441%" height="15" fill="rgb(236,97,10)" fg:x="63" fg:w="1"/><text x="3.0290%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="2.7790%" y="101" width="0.0441%" height="15" fill="rgb(233,208,19)" fg:x="63" fg:w="1"/><text x="3.0290%" y="111.50"></text></g><g><title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="2.7790%" y="85" width="0.0441%" height="15" fill="rgb(216,164,2)" fg:x="63" fg:w="1"/><text x="3.0290%" y="95.50"></text></g><g><title>llvm::ScalarEvolution::getSignExtendExpr (2 samples, 0.09%)</title><rect x="2.7790%" y="181" width="0.0882%" height="15" fill="rgb(220,129,5)" fg:x="63" fg:w="2"/><text x="3.0290%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::proveNoWrapViaConstantRanges (1 samples, 0.04%)</title><rect x="2.8231%" y="165" width="0.0441%" height="15" fill="rgb(242,17,10)" fg:x="64" fg:w="1"/><text x="3.0731%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="2.8231%" y="149" width="0.0441%" height="15" fill="rgb(242,107,0)" fg:x="64" fg:w="1"/><text x="3.0731%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::getConstant (1 samples, 0.04%)</title><rect x="2.8672%" y="165" width="0.0441%" height="15" fill="rgb(251,28,31)" fg:x="65" fg:w="1"/><text x="3.1172%" y="175.50"></text></g><g><title>llvm::ConstantInt::get (1 samples, 0.04%)</title><rect x="2.8672%" y="149" width="0.0441%" height="15" fill="rgb(233,223,10)" fg:x="65" fg:w="1"/><text x="3.1172%" y="159.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::IndVarSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (8 samples, 0.35%)</title><rect x="2.6026%" y="261" width="0.3529%" height="15" fill="rgb(215,21,27)" fg:x="59" fg:w="8"/><text x="2.8526%" y="271.50"></text></g><g><title>llvm::IndVarSimplifyPass::run (8 samples, 0.35%)</title><rect x="2.6026%" y="245" width="0.3529%" height="15" fill="rgb(232,23,21)" fg:x="59" fg:w="8"/><text x="2.8526%" y="255.50"></text></g><g><title>llvm::simplifyUsersOfIV (5 samples, 0.22%)</title><rect x="2.7349%" y="229" width="0.2206%" height="15" fill="rgb(244,5,23)" fg:x="62" fg:w="5"/><text x="2.9849%" y="239.50"></text></g><g><title>llvm::ScalarEvolution::getStrengthenedNoWrapFlagsFromBinOp (4 samples, 0.18%)</title><rect x="2.7790%" y="213" width="0.1764%" height="15" fill="rgb(226,81,46)" fg:x="63" fg:w="4"/><text x="3.0290%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::willNotOverflow (4 samples, 0.18%)</title><rect x="2.7790%" y="197" width="0.1764%" height="15" fill="rgb(247,70,30)" fg:x="63" fg:w="4"/><text x="3.0290%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::getZeroExtendExpr (2 samples, 0.09%)</title><rect x="2.8672%" y="181" width="0.0882%" height="15" fill="rgb(212,68,19)" fg:x="65" fg:w="2"/><text x="3.1172%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="2.9113%" y="165" width="0.0441%" height="15" fill="rgb(240,187,13)" fg:x="66" fg:w="1"/><text x="3.1613%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="2.9113%" y="149" width="0.0441%" height="15" fill="rgb(223,113,26)" fg:x="66" fg:w="1"/><text x="3.1613%" y="159.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LICMPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (2 samples, 0.09%)</title><rect x="2.9554%" y="261" width="0.0882%" height="15" fill="rgb(206,192,2)" fg:x="67" fg:w="2"/><text x="3.2054%" y="271.50"></text></g><g><title>llvm::LoopBase&lt;llvm::BasicBlock, llvm::Loop&gt;::getUniqueExitBlocks (1 samples, 0.04%)</title><rect x="2.9996%" y="245" width="0.0441%" height="15" fill="rgb(241,108,4)" fg:x="68" fg:w="1"/><text x="3.2496%" y="255.50"></text></g><g><title>llvm::ScalarEvolution::computeExitLimitFromICmp (1 samples, 0.04%)</title><rect x="3.0437%" y="149" width="0.0441%" height="15" fill="rgb(247,173,49)" fg:x="69" fg:w="1"/><text x="3.2937%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::computeSCEVAtScope (1 samples, 0.04%)</title><rect x="3.0437%" y="133" width="0.0441%" height="15" fill="rgb(224,114,35)" fg:x="69" fg:w="1"/><text x="3.2937%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (1 samples, 0.04%)</title><rect x="3.0437%" y="117" width="0.0441%" height="15" fill="rgb(245,159,27)" fg:x="69" fg:w="1"/><text x="3.2937%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (1 samples, 0.04%)</title><rect x="3.1319%" y="101" width="0.0441%" height="15" fill="rgb(245,172,44)" fg:x="71" fg:w="1"/><text x="3.3819%" y="111.50"></text></g><g><title>llvm::DenseMap&lt;llvm::SCEV const*, llvm::SmallSetVector&lt;llvm::Value*, 4u&gt;, llvm::DenseMapInfo&lt;llvm::SCEV const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::SCEV const*, llvm::SmallSetVector&lt;llvm::Value*, 4u&gt; &gt; &gt;::grow (1 samples, 0.04%)</title><rect x="3.1319%" y="85" width="0.0441%" height="15" fill="rgb(236,23,11)" fg:x="71" fg:w="1"/><text x="3.3819%" y="95.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopIdiomRecognizePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (5 samples, 0.22%)</title><rect x="3.0437%" y="261" width="0.2206%" height="15" fill="rgb(205,117,38)" fg:x="69" fg:w="5"/><text x="3.2937%" y="271.50"></text></g><g><title>llvm::LoopIdiomRecognizePass::run (5 samples, 0.22%)</title><rect x="3.0437%" y="245" width="0.2206%" height="15" fill="rgb(237,72,25)" fg:x="69" fg:w="5"/><text x="3.2937%" y="255.50"></text></g><g><title>llvm::ScalarEvolution::hasLoopInvariantBackedgeTakenCount (5 samples, 0.22%)</title><rect x="3.0437%" y="229" width="0.2206%" height="15" fill="rgb(244,70,9)" fg:x="69" fg:w="5"/><text x="3.2937%" y="239.50"></text></g><g><title>llvm::ScalarEvolution::getBackedgeTakenInfo (5 samples, 0.22%)</title><rect x="3.0437%" y="213" width="0.2206%" height="15" fill="rgb(217,125,39)" fg:x="69" fg:w="5"/><text x="3.2937%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::computeBackedgeTakenCount (5 samples, 0.22%)</title><rect x="3.0437%" y="197" width="0.2206%" height="15" fill="rgb(235,36,10)" fg:x="69" fg:w="5"/><text x="3.2937%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::computeExitLimitFromCondCached (5 samples, 0.22%)</title><rect x="3.0437%" y="181" width="0.2206%" height="15" fill="rgb(251,123,47)" fg:x="69" fg:w="5"/><text x="3.2937%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::computeExitLimitFromCondImpl (5 samples, 0.22%)</title><rect x="3.0437%" y="165" width="0.2206%" height="15" fill="rgb(221,13,13)" fg:x="69" fg:w="5"/><text x="3.2937%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (4 samples, 0.18%)</title><rect x="3.0878%" y="149" width="0.1764%" height="15" fill="rgb(238,131,9)" fg:x="70" fg:w="4"/><text x="3.3378%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::createSCEV (4 samples, 0.18%)</title><rect x="3.0878%" y="133" width="0.1764%" height="15" fill="rgb(211,50,8)" fg:x="70" fg:w="4"/><text x="3.3378%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::createAddRecFromPHI (3 samples, 0.13%)</title><rect x="3.1319%" y="117" width="0.1323%" height="15" fill="rgb(245,182,24)" fg:x="71" fg:w="3"/><text x="3.3819%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::getAddExpr (2 samples, 0.09%)</title><rect x="3.1760%" y="101" width="0.0882%" height="15" fill="rgb(242,14,37)" fg:x="72" fg:w="2"/><text x="3.4260%" y="111.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="3.2201%" y="85" width="0.0441%" height="15" fill="rgb(246,228,12)" fg:x="73" fg:w="1"/><text x="3.4701%" y="95.50"></text></g><g><title>llvm::ScalarEvolution::getRangeForUnknownRecurrence (1 samples, 0.04%)</title><rect x="3.2201%" y="69" width="0.0441%" height="15" fill="rgb(213,55,15)" fg:x="73" fg:w="1"/><text x="3.4701%" y="79.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopInstSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (1 samples, 0.04%)</title><rect x="3.2642%" y="261" width="0.0441%" height="15" fill="rgb(209,9,3)" fg:x="74" fg:w="1"/><text x="3.5142%" y="271.50"></text></g><g><title>llvm::LoopInstSimplifyPass::run (1 samples, 0.04%)</title><rect x="3.2642%" y="245" width="0.0441%" height="15" fill="rgb(230,59,30)" fg:x="74" fg:w="1"/><text x="3.5142%" y="255.50"></text></g><g><title>simplifyLoopInst (1 samples, 0.04%)</title><rect x="3.2642%" y="229" width="0.0441%" height="15" fill="rgb(209,121,21)" fg:x="74" fg:w="1"/><text x="3.5142%" y="239.50"></text></g><g><title>llvm::simplifyInstruction (1 samples, 0.04%)</title><rect x="3.2642%" y="213" width="0.0441%" height="15" fill="rgb(220,109,13)" fg:x="74" fg:w="1"/><text x="3.5142%" y="223.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (19 samples, 0.84%)</title><rect x="2.5143%" y="309" width="0.8381%" height="15" fill="rgb(232,18,1)" fg:x="57" fg:w="19"/><text x="2.7643%" y="319.50"></text></g><g><title>llvm::FunctionToLoopPassAdaptor::run (19 samples, 0.84%)</title><rect x="2.5143%" y="293" width="0.8381%" height="15" fill="rgb(215,41,42)" fg:x="57" fg:w="19"/><text x="2.7643%" y="303.50"></text></g><g><title>llvm::PassManager&lt;llvm::Loop, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::runWithoutLoopNestPasses (17 samples, 0.75%)</title><rect x="2.6026%" y="277" width="0.7499%" height="15" fill="rgb(224,123,36)" fg:x="59" fg:w="17"/><text x="2.8526%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopRotatePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (1 samples, 0.04%)</title><rect x="3.3083%" y="261" width="0.0441%" height="15" fill="rgb(240,125,3)" fg:x="75" fg:w="1"/><text x="3.5583%" y="271.50"></text></g><g><title>llvm::LoopRotatePass::run (1 samples, 0.04%)</title><rect x="3.3083%" y="245" width="0.0441%" height="15" fill="rgb(205,98,50)" fg:x="75" fg:w="1"/><text x="3.5583%" y="255.50"></text></g><g><title>llvm::LoopRotation (1 samples, 0.04%)</title><rect x="3.3083%" y="229" width="0.0441%" height="15" fill="rgb(205,185,37)" fg:x="75" fg:w="1"/><text x="3.5583%" y="239.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="3.3524%" y="277" width="0.0441%" height="15" fill="rgb(238,207,15)" fg:x="76" fg:w="1"/><text x="3.6024%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::MemoryDependenceAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="3.3524%" y="261" width="0.0441%" height="15" fill="rgb(213,199,42)" fg:x="76" fg:w="1"/><text x="3.6024%" y="271.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="3.3524%" y="245" width="0.0441%" height="15" fill="rgb(235,201,11)" fg:x="76" fg:w="1"/><text x="3.6024%" y="255.50"></text></g><g><title>llvm::GVNPass::processAssumeIntrinsic (1 samples, 0.04%)</title><rect x="3.4407%" y="245" width="0.0441%" height="15" fill="rgb(207,46,11)" fg:x="78" fg:w="1"/><text x="3.6907%" y="255.50"></text></g><g><title>llvm::GVNPass::propagateEquality (1 samples, 0.04%)</title><rect x="3.4407%" y="229" width="0.0441%" height="15" fill="rgb(241,35,35)" fg:x="78" fg:w="1"/><text x="3.6907%" y="239.50"></text></g><g><title>llvm::replaceDominatedUsesWith (1 samples, 0.04%)</title><rect x="3.4407%" y="213" width="0.0441%" height="15" fill="rgb(243,32,47)" fg:x="78" fg:w="1"/><text x="3.6907%" y="223.50"></text></g><g><title>llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::properlyDominates (1 samples, 0.04%)</title><rect x="3.4407%" y="197" width="0.0441%" height="15" fill="rgb(247,202,23)" fg:x="78" fg:w="1"/><text x="3.6907%" y="207.50"></text></g><g><title>llvm::GVNPass::PerformLoadPRE (1 samples, 0.04%)</title><rect x="3.4848%" y="229" width="0.0441%" height="15" fill="rgb(219,102,11)" fg:x="79" fg:w="1"/><text x="3.7348%" y="239.50"></text></g><g><title>llvm::MapVector&lt;llvm::BasicBlock*, llvm::Value*, llvm::DenseMap&lt;llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, unsigned int&gt; &gt;, std::vector&lt;std::pair&lt;llvm::BasicBlock*, llvm::Value*&gt;, std::allocator&lt;std::pair&lt;llvm::BasicBlock*, llvm::Value*&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="3.4848%" y="213" width="0.0441%" height="15" fill="rgb(243,110,44)" fg:x="79" fg:w="1"/><text x="3.7348%" y="223.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, unsigned int&gt; &gt;, llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, unsigned int&gt; &gt;::try_emplace&lt;unsigned int const&amp;&gt; (1 samples, 0.04%)</title><rect x="3.4848%" y="197" width="0.0441%" height="15" fill="rgb(222,74,54)" fg:x="79" fg:w="1"/><text x="3.7348%" y="207.50"></text></g><g><title>llvm::GVNPass::processNonLocalLoad (2 samples, 0.09%)</title><rect x="3.4848%" y="245" width="0.0882%" height="15" fill="rgb(216,99,12)" fg:x="79" fg:w="2"/><text x="3.7348%" y="255.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (1 samples, 0.04%)</title><rect x="3.5289%" y="229" width="0.0441%" height="15" fill="rgb(226,22,26)" fg:x="80" fg:w="1"/><text x="3.7789%" y="239.50"></text></g><g><title>llvm::GVNPass::propagateEquality (1 samples, 0.04%)</title><rect x="3.5730%" y="245" width="0.0441%" height="15" fill="rgb(217,163,10)" fg:x="81" fg:w="1"/><text x="3.8230%" y="255.50"></text></g><g><title>llvm::GVNPass::processBlock (6 samples, 0.26%)</title><rect x="3.3966%" y="261" width="0.2647%" height="15" fill="rgb(213,25,53)" fg:x="77" fg:w="6"/><text x="3.6466%" y="271.50"></text></g><g><title>llvm::simplifyInstruction (1 samples, 0.04%)</title><rect x="3.6171%" y="245" width="0.0441%" height="15" fill="rgb(252,105,26)" fg:x="82" fg:w="1"/><text x="3.8671%" y="255.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::GVNPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (8 samples, 0.35%)</title><rect x="3.3524%" y="309" width="0.3529%" height="15" fill="rgb(220,39,43)" fg:x="76" fg:w="8"/><text x="3.6024%" y="319.50"></text></g><g><title>llvm::GVNPass::run (8 samples, 0.35%)</title><rect x="3.3524%" y="293" width="0.3529%" height="15" fill="rgb(229,68,48)" fg:x="76" fg:w="8"/><text x="3.6024%" y="303.50"></text></g><g><title>llvm::GVNPass::runImpl (7 samples, 0.31%)</title><rect x="3.3966%" y="277" width="0.3088%" height="15" fill="rgb(252,8,32)" fg:x="77" fg:w="7"/><text x="3.6466%" y="287.50"></text></g><g><title>llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTraits&lt;llvm::Function*&gt; &gt;::Initialize (1 samples, 0.04%)</title><rect x="3.6612%" y="261" width="0.0441%" height="15" fill="rgb(223,20,43)" fg:x="83" fg:w="1"/><text x="3.9112%" y="271.50"></text></g><g><title>std::__copy_move_a2&lt;false, llvm::po_iterator&lt;llvm::Function*, llvm::SmallPtrSet&lt;llvm::BasicBlock*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::Function*&gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock*, std::allocator&lt;llvm::BasicBlock*&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="3.6612%" y="245" width="0.0441%" height="15" fill="rgb(229,81,49)" fg:x="83" fg:w="1"/><text x="3.9112%" y="255.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="3.8818%" y="277" width="0.0441%" height="15" fill="rgb(236,28,36)" fg:x="88" fg:w="1"/><text x="4.1318%" y="287.50"></text></g><g><title>llvm::ConstantInt::get (1 samples, 0.04%)</title><rect x="4.1906%" y="261" width="0.0441%" height="15" fill="rgb(249,185,26)" fg:x="95" fg:w="1"/><text x="4.4406%" y="271.50"></text></g><g><title>llvm::InstCombinerImpl::visitAdd (1 samples, 0.04%)</title><rect x="4.2347%" y="261" width="0.0441%" height="15" fill="rgb(249,174,33)" fg:x="96" fg:w="1"/><text x="4.4847%" y="271.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="4.2347%" y="245" width="0.0441%" height="15" fill="rgb(233,201,37)" fg:x="96" fg:w="1"/><text x="4.4847%" y="255.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="4.2347%" y="229" width="0.0441%" height="15" fill="rgb(221,78,26)" fg:x="96" fg:w="1"/><text x="4.4847%" y="239.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="4.2347%" y="213" width="0.0441%" height="15" fill="rgb(250,127,30)" fg:x="96" fg:w="1"/><text x="4.4847%" y="223.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="4.2347%" y="197" width="0.0441%" height="15" fill="rgb(230,49,44)" fg:x="96" fg:w="1"/><text x="4.4847%" y="207.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="4.2347%" y="181" width="0.0441%" height="15" fill="rgb(229,67,23)" fg:x="96" fg:w="1"/><text x="4.4847%" y="191.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="4.2347%" y="165" width="0.0441%" height="15" fill="rgb(249,83,47)" fg:x="96" fg:w="1"/><text x="4.4847%" y="175.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="4.2347%" y="149" width="0.0441%" height="15" fill="rgb(215,43,3)" fg:x="96" fg:w="1"/><text x="4.4847%" y="159.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="4.2347%" y="133" width="0.0441%" height="15" fill="rgb(238,154,13)" fg:x="96" fg:w="1"/><text x="4.4847%" y="143.50"></text></g><g><title>llvm::InstCombinerImpl::visitCallInst (1 samples, 0.04%)</title><rect x="4.2788%" y="261" width="0.0441%" height="15" fill="rgb(219,56,2)" fg:x="97" fg:w="1"/><text x="4.5288%" y="271.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="4.2788%" y="245" width="0.0441%" height="15" fill="rgb(233,0,4)" fg:x="97" fg:w="1"/><text x="4.5288%" y="255.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="4.2788%" y="229" width="0.0441%" height="15" fill="rgb(235,30,7)" fg:x="97" fg:w="1"/><text x="4.5288%" y="239.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (15 samples, 0.66%)</title><rect x="3.7053%" y="309" width="0.6617%" height="15" fill="rgb(250,79,13)" fg:x="84" fg:w="15"/><text x="3.9553%" y="319.50"></text></g><g><title>llvm::InstCombinePass::run (15 samples, 0.66%)</title><rect x="3.7053%" y="293" width="0.6617%" height="15" fill="rgb(211,146,34)" fg:x="84" fg:w="15"/><text x="3.9553%" y="303.50"></text></g><g><title>llvm::InstCombinerImpl::run (10 samples, 0.44%)</title><rect x="3.9259%" y="277" width="0.4411%" height="15" fill="rgb(228,22,38)" fg:x="89" fg:w="10"/><text x="4.1759%" y="287.50"></text></g><g><title>llvm::InstCombinerImpl::visitXor (1 samples, 0.04%)</title><rect x="4.3229%" y="261" width="0.0441%" height="15" fill="rgb(235,168,5)" fg:x="98" fg:w="1"/><text x="4.5729%" y="271.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="4.3670%" y="277" width="0.0441%" height="15" fill="rgb(221,155,16)" fg:x="99" fg:w="1"/><text x="4.6170%" y="287.50"></text></g><g><title>llvm::JumpThreadingPass::processThreadableEdges (1 samples, 0.04%)</title><rect x="4.4111%" y="261" width="0.0441%" height="15" fill="rgb(215,215,53)" fg:x="100" fg:w="1"/><text x="4.6611%" y="271.50"></text></g><g><title>llvm::JumpThreadingPass::computeValueKnownInPredecessorsImpl (1 samples, 0.04%)</title><rect x="4.4111%" y="245" width="0.0441%" height="15" fill="rgb(223,4,10)" fg:x="100" fg:w="1"/><text x="4.6611%" y="255.50"></text></g><g><title>llvm::JumpThreadingPass::computeValueKnownInPredecessorsImpl (1 samples, 0.04%)</title><rect x="4.4111%" y="229" width="0.0441%" height="15" fill="rgb(234,103,6)" fg:x="100" fg:w="1"/><text x="4.6611%" y="239.50"></text></g><g><title>llvm::JumpThreadingPass::computeValueKnownInPredecessorsImpl (1 samples, 0.04%)</title><rect x="4.4111%" y="213" width="0.0441%" height="15" fill="rgb(227,97,0)" fg:x="100" fg:w="1"/><text x="4.6611%" y="223.50"></text></g><g><title>llvm::JumpThreadingPass::computeValueKnownInPredecessorsImpl (1 samples, 0.04%)</title><rect x="4.4111%" y="197" width="0.0441%" height="15" fill="rgb(234,150,53)" fg:x="100" fg:w="1"/><text x="4.6611%" y="207.50"></text></g><g><title>llvm::LazyValueInfo::getConstant (1 samples, 0.04%)</title><rect x="4.4111%" y="181" width="0.0441%" height="15" fill="rgb(228,201,54)" fg:x="100" fg:w="1"/><text x="4.6611%" y="191.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::JumpThreadingPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (3 samples, 0.13%)</title><rect x="4.3670%" y="309" width="0.1323%" height="15" fill="rgb(222,22,37)" fg:x="99" fg:w="3"/><text x="4.6170%" y="319.50"></text></g><g><title>llvm::JumpThreadingPass::run (3 samples, 0.13%)</title><rect x="4.3670%" y="293" width="0.1323%" height="15" fill="rgb(237,53,32)" fg:x="99" fg:w="3"/><text x="4.6170%" y="303.50"></text></g><g><title>llvm::JumpThreadingPass::runImpl (2 samples, 0.09%)</title><rect x="4.4111%" y="277" width="0.0882%" height="15" fill="rgb(233,25,53)" fg:x="100" fg:w="2"/><text x="4.6611%" y="287.50"></text></g><g><title>llvm::LazyValueInfo::getPredicateAt (1 samples, 0.04%)</title><rect x="4.4552%" y="261" width="0.0441%" height="15" fill="rgb(210,40,34)" fg:x="101" fg:w="1"/><text x="4.7052%" y="271.50"></text></g><g><title>llvm::LazyValueInfo::getPredicateOnEdge (1 samples, 0.04%)</title><rect x="4.4552%" y="245" width="0.0441%" height="15" fill="rgb(241,220,44)" fg:x="101" fg:w="1"/><text x="4.7052%" y="255.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::MemCpyOptPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="4.4993%" y="309" width="0.0441%" height="15" fill="rgb(235,28,35)" fg:x="102" fg:w="1"/><text x="4.7493%" y="319.50"></text></g><g><title>llvm::MemCpyOptPass::run (1 samples, 0.04%)</title><rect x="4.4993%" y="293" width="0.0441%" height="15" fill="rgb(210,56,17)" fg:x="102" fg:w="1"/><text x="4.7493%" y="303.50"></text></g><g><title>llvm::MemCpyOptPass::iterateOnFunction (1 samples, 0.04%)</title><rect x="4.4993%" y="277" width="0.0441%" height="15" fill="rgb(224,130,29)" fg:x="102" fg:w="1"/><text x="4.7493%" y="287.50"></text></g><g><title>llvm::MemCpyOptPass::processMemCpy (1 samples, 0.04%)</title><rect x="4.4993%" y="261" width="0.0441%" height="15" fill="rgb(235,212,8)" fg:x="102" fg:w="1"/><text x="4.7493%" y="271.50"></text></g><g><title>llvm::AAResults::getModRefInfo (1 samples, 0.04%)</title><rect x="4.4993%" y="245" width="0.0441%" height="15" fill="rgb(223,33,50)" fg:x="102" fg:w="1"/><text x="4.7493%" y="255.50"></text></g><g><title>llvm::BasicAAResult::getModRefInfo (1 samples, 0.04%)</title><rect x="4.4993%" y="229" width="0.0441%" height="15" fill="rgb(219,149,13)" fg:x="102" fg:w="1"/><text x="4.7493%" y="239.50"></text></g><g><title>llvm::BasicAAResult::aliasCheck (1 samples, 0.04%)</title><rect x="4.4993%" y="213" width="0.0441%" height="15" fill="rgb(250,156,29)" fg:x="102" fg:w="1"/><text x="4.7493%" y="223.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::ReassociatePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="4.5434%" y="309" width="0.0441%" height="15" fill="rgb(216,193,19)" fg:x="103" fg:w="1"/><text x="4.7934%" y="319.50"></text></g><g><title>llvm::ReassociatePass::BuildRankMap (1 samples, 0.04%)</title><rect x="4.6317%" y="277" width="0.0441%" height="15" fill="rgb(216,135,14)" fg:x="105" fg:w="1"/><text x="4.8817%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::ReassociatePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (3 samples, 0.13%)</title><rect x="4.5876%" y="309" width="0.1323%" height="15" fill="rgb(241,47,5)" fg:x="104" fg:w="3"/><text x="4.8376%" y="319.50"></text></g><g><title>llvm::ReassociatePass::run (3 samples, 0.13%)</title><rect x="4.5876%" y="293" width="0.1323%" height="15" fill="rgb(233,42,35)" fg:x="104" fg:w="3"/><text x="4.8376%" y="303.50"></text></g><g><title>llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTraits&lt;llvm::Function*&gt; &gt;::Initialize (1 samples, 0.04%)</title><rect x="4.6758%" y="277" width="0.0441%" height="15" fill="rgb(231,13,6)" fg:x="106" fg:w="1"/><text x="4.9258%" y="287.50"></text></g><g><title>std::__copy_move_a2&lt;false, llvm::po_iterator&lt;llvm::Function*, llvm::SmallPtrSet&lt;llvm::BasicBlock*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::Function*&gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock*, std::allocator&lt;llvm::BasicBlock*&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="4.6758%" y="261" width="0.0441%" height="15" fill="rgb(207,181,40)" fg:x="106" fg:w="1"/><text x="4.9258%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::RequireAnalysisPass&lt;llvm::OptimizationRemarkEmitterAnalysis, llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="4.7199%" y="309" width="0.0441%" height="15" fill="rgb(254,173,49)" fg:x="107" fg:w="1"/><text x="4.9699%" y="319.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SCCPPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="4.7640%" y="309" width="0.0441%" height="15" fill="rgb(221,1,38)" fg:x="108" fg:w="1"/><text x="5.0140%" y="319.50"></text></g><g><title>runSCCP (1 samples, 0.04%)</title><rect x="4.7640%" y="293" width="0.0441%" height="15" fill="rgb(206,124,46)" fg:x="108" fg:w="1"/><text x="5.0140%" y="303.50"></text></g><g><title>llvm::SCCPInstVisitor::solve (1 samples, 0.04%)</title><rect x="4.7640%" y="277" width="0.0441%" height="15" fill="rgb(249,21,11)" fg:x="108" fg:w="1"/><text x="5.0140%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SimplifyCFGPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (4 samples, 0.18%)</title><rect x="4.8081%" y="309" width="0.1764%" height="15" fill="rgb(222,201,40)" fg:x="109" fg:w="4"/><text x="5.0581%" y="319.50"></text></g><g><title>simplifyFunctionCFG (4 samples, 0.18%)</title><rect x="4.8081%" y="293" width="0.1764%" height="15" fill="rgb(235,61,29)" fg:x="109" fg:w="4"/><text x="5.0581%" y="303.50"></text></g><g><title>llvm::removeUnreachableBlocks (2 samples, 0.09%)</title><rect x="4.8963%" y="277" width="0.0882%" height="15" fill="rgb(219,207,3)" fg:x="111" fg:w="2"/><text x="5.1463%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::CGSCCToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (89 samples, 3.93%)</title><rect x="1.1028%" y="357" width="3.9259%" height="15" fill="rgb(222,56,46)" fg:x="25" fg:w="89"/><text x="1.3528%" y="367.50">llvm..</text></g><g><title>llvm::CGSCCToFunctionPassAdaptor::run (89 samples, 3.93%)</title><rect x="1.1028%" y="341" width="3.9259%" height="15" fill="rgb(239,76,54)" fg:x="25" fg:w="89"/><text x="1.3528%" y="351.50">llvm..</text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (88 samples, 3.88%)</title><rect x="1.1469%" y="325" width="3.8818%" height="15" fill="rgb(231,124,27)" fg:x="26" fg:w="88"/><text x="1.3969%" y="335.50">llvm..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SpeculativeExecutionPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="4.9846%" y="309" width="0.0441%" height="15" fill="rgb(249,195,6)" fg:x="113" fg:w="1"/><text x="5.2346%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="4.9846%" y="293" width="0.0441%" height="15" fill="rgb(237,174,47)" fg:x="113" fg:w="1"/><text x="5.2346%" y="303.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::clear (1 samples, 0.04%)</title><rect x="5.0728%" y="325" width="0.0441%" height="15" fill="rgb(206,201,31)" fg:x="115" fg:w="1"/><text x="5.3228%" y="335.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::BlockFrequencyInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="5.0728%" y="309" width="0.0441%" height="15" fill="rgb(231,57,52)" fg:x="115" fg:w="1"/><text x="5.3228%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (1 samples, 0.04%)</title><rect x="5.1169%" y="325" width="0.0441%" height="15" fill="rgb(248,177,22)" fg:x="116" fg:w="1"/><text x="5.3669%" y="335.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::BlockFrequencyInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="5.1169%" y="309" width="0.0441%" height="15" fill="rgb(215,211,37)" fg:x="116" fg:w="1"/><text x="5.3669%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::clear (1 samples, 0.04%)</title><rect x="5.1610%" y="325" width="0.0441%" height="15" fill="rgb(241,128,51)" fg:x="117" fg:w="1"/><text x="5.4110%" y="335.50"></text></g><g><title>llvm::Function::dropAllReferences (1 samples, 0.04%)</title><rect x="5.2051%" y="325" width="0.0441%" height="15" fill="rgb(227,165,31)" fg:x="118" fg:w="1"/><text x="5.4551%" y="335.50"></text></g><g><title>llvm::BasicBlock::~BasicBlock (1 samples, 0.04%)</title><rect x="5.2051%" y="309" width="0.0441%" height="15" fill="rgb(228,167,24)" fg:x="118" fg:w="1"/><text x="5.4551%" y="319.50"></text></g><g><title>llvm::CloneAndPruneIntoFromInst (3 samples, 0.13%)</title><rect x="5.2933%" y="309" width="0.1323%" height="15" fill="rgb(228,143,12)" fg:x="120" fg:w="3"/><text x="5.5433%" y="319.50"></text></g><g><title>llvm::Instruction::clone (1 samples, 0.04%)</title><rect x="5.3816%" y="293" width="0.0441%" height="15" fill="rgb(249,149,8)" fg:x="122" fg:w="1"/><text x="5.6316%" y="303.50"></text></g><g><title>llvm::MetadataTracking::track (1 samples, 0.04%)</title><rect x="5.3816%" y="277" width="0.0441%" height="15" fill="rgb(243,35,44)" fg:x="122" fg:w="1"/><text x="5.6316%" y="287.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="5.4257%" y="309" width="0.0441%" height="15" fill="rgb(246,89,9)" fg:x="123" fg:w="1"/><text x="5.6757%" y="319.50"></text></g><g><title>llvm::InlineFunction (6 samples, 0.26%)</title><rect x="5.2492%" y="325" width="0.2647%" height="15" fill="rgb(233,213,13)" fg:x="119" fg:w="6"/><text x="5.4992%" y="335.50"></text></g><g><title>llvm::ValueHandleBase::AddToUseList (1 samples, 0.04%)</title><rect x="5.4698%" y="309" width="0.0441%" height="15" fill="rgb(233,141,41)" fg:x="124" fg:w="1"/><text x="5.7198%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="5.6021%" y="277" width="0.0882%" height="15" fill="rgb(239,167,4)" fg:x="127" fg:w="2"/><text x="5.8521%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="5.6462%" y="261" width="0.0441%" height="15" fill="rgb(209,217,16)" fg:x="128" fg:w="1"/><text x="5.8962%" y="271.50"></text></g><g><title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.04%)</title><rect x="5.6462%" y="245" width="0.0441%" height="15" fill="rgb(219,88,35)" fg:x="128" fg:w="1"/><text x="5.8962%" y="255.50"></text></g><g><title>llvm::BranchProbabilityInfo::calcEstimatedHeuristics (1 samples, 0.04%)</title><rect x="5.6462%" y="229" width="0.0441%" height="15" fill="rgb(220,193,23)" fg:x="128" fg:w="1"/><text x="5.8962%" y="239.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="5.6462%" y="213" width="0.0441%" height="15" fill="rgb(230,90,52)" fg:x="128" fg:w="1"/><text x="5.8962%" y="223.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="5.6021%" y="309" width="0.1323%" height="15" fill="rgb(252,106,19)" fg:x="127" fg:w="3"/><text x="5.8521%" y="319.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="5.6021%" y="293" width="0.1323%" height="15" fill="rgb(206,74,20)" fg:x="127" fg:w="3"/><text x="5.8521%" y="303.50"></text></g><g><title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::initializeRPOT (1 samples, 0.04%)</title><rect x="5.6903%" y="277" width="0.0441%" height="15" fill="rgb(230,138,44)" fg:x="129" fg:w="1"/><text x="5.9403%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::InlinerPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (17 samples, 0.75%)</title><rect x="5.0287%" y="357" width="0.7499%" height="15" fill="rgb(235,182,43)" fg:x="114" fg:w="17"/><text x="5.2787%" y="367.50"></text></g><g><title>llvm::InlinerPass::run (17 samples, 0.75%)</title><rect x="5.0287%" y="341" width="0.7499%" height="15" fill="rgb(242,16,51)" fg:x="114" fg:w="17"/><text x="5.2787%" y="351.50"></text></g><g><title>llvm::shouldInline (6 samples, 0.26%)</title><rect x="5.5139%" y="325" width="0.2647%" height="15" fill="rgb(248,9,4)" fg:x="125" fg:w="6"/><text x="5.7639%" y="335.50"></text></g><g><title>llvm::function_ref&lt;llvm::BlockFrequencyInfo&amp; (llvm::Function&amp;)&gt;::callback_fn&lt;llvm::GlobalOptPass::run(llvm::Module&amp;, llvm::AnalysisManager&lt;llvm::Module&gt;&amp;)::$_3&gt; (1 samples, 0.04%)</title><rect x="5.7345%" y="309" width="0.0441%" height="15" fill="rgb(210,31,22)" fg:x="130" fg:w="1"/><text x="5.9845%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="5.7345%" y="293" width="0.0441%" height="15" fill="rgb(239,54,39)" fg:x="130" fg:w="1"/><text x="5.9845%" y="303.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="5.7345%" y="277" width="0.0441%" height="15" fill="rgb(230,99,41)" fg:x="130" fg:w="1"/><text x="5.9845%" y="287.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="5.7345%" y="261" width="0.0441%" height="15" fill="rgb(253,106,12)" fg:x="130" fg:w="1"/><text x="5.9845%" y="271.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="5.7345%" y="245" width="0.0441%" height="15" fill="rgb(213,46,41)" fg:x="130" fg:w="1"/><text x="5.9845%" y="255.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="5.7345%" y="229" width="0.0441%" height="15" fill="rgb(215,133,35)" fg:x="130" fg:w="1"/><text x="5.9845%" y="239.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::LoopAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="5.7345%" y="213" width="0.0441%" height="15" fill="rgb(213,28,5)" fg:x="130" fg:w="1"/><text x="5.9845%" y="223.50"></text></g><g><title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (1 samples, 0.04%)</title><rect x="5.7345%" y="197" width="0.0441%" height="15" fill="rgb(215,77,49)" fg:x="130" fg:w="1"/><text x="5.9845%" y="207.50"></text></g><g><title>addArgumentAttrs (1 samples, 0.04%)</title><rect x="5.8227%" y="325" width="0.0441%" height="15" fill="rgb(248,100,22)" fg:x="132" fg:w="1"/><text x="6.0727%" y="335.50"></text></g><g><title>addNoReturnAttrs (2 samples, 0.09%)</title><rect x="5.8668%" y="325" width="0.0882%" height="15" fill="rgb(208,67,9)" fg:x="133" fg:w="2"/><text x="6.1168%" y="335.50"></text></g><g><title>llvm::DevirtSCCRepeatedPass::run (111 samples, 4.90%)</title><rect x="1.1028%" y="389" width="4.8963%" height="15" fill="rgb(219,133,21)" fg:x="25" fg:w="111"/><text x="1.3528%" y="399.50">llvm::..</text></g><g><title>llvm::PassManager&lt;llvm::LazyCallGraph::SCC, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (111 samples, 4.90%)</title><rect x="1.1028%" y="373" width="4.8963%" height="15" fill="rgb(246,46,29)" fg:x="25" fg:w="111"/><text x="1.3528%" y="383.50">llvm::..</text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::PostOrderFunctionAttrsPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (5 samples, 0.22%)</title><rect x="5.7786%" y="357" width="0.2206%" height="15" fill="rgb(246,185,52)" fg:x="131" fg:w="5"/><text x="6.0286%" y="367.50"></text></g><g><title>llvm::PostOrderFunctionAttrsPass::run (5 samples, 0.22%)</title><rect x="5.7786%" y="341" width="0.2206%" height="15" fill="rgb(252,136,11)" fg:x="131" fg:w="5"/><text x="6.0286%" y="351.50"></text></g><g><title>checkFunctionMemoryAccess (1 samples, 0.04%)</title><rect x="5.9550%" y="325" width="0.0441%" height="15" fill="rgb(219,138,53)" fg:x="135" fg:w="1"/><text x="6.2050%" y="335.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToPostOrderCGSCCPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (114 samples, 5.03%)</title><rect x="1.0146%" y="421" width="5.0287%" height="15" fill="rgb(211,51,23)" fg:x="23" fg:w="114"/><text x="1.2646%" y="431.50">llvm::..</text></g><g><title>llvm::ModuleToPostOrderCGSCCPassAdaptor::run (114 samples, 5.03%)</title><rect x="1.0146%" y="405" width="5.0287%" height="15" fill="rgb(247,221,28)" fg:x="23" fg:w="114"/><text x="1.2646%" y="415.50">llvm::..</text></g><g><title>llvm::LazyCallGraph::buildRefSCCs (1 samples, 0.04%)</title><rect x="5.9991%" y="389" width="0.0441%" height="15" fill="rgb(251,222,45)" fg:x="136" fg:w="1"/><text x="6.2491%" y="399.50"></text></g><g><title>llvm::LazyCallGraph::Node::populateSlow (1 samples, 0.04%)</title><rect x="5.9991%" y="373" width="0.0441%" height="15" fill="rgb(217,162,53)" fg:x="136" fg:w="1"/><text x="6.2491%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleInlinerWrapperPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (116 samples, 5.12%)</title><rect x="0.9704%" y="469" width="5.1169%" height="15" fill="rgb(229,93,14)" fg:x="22" fg:w="116"/><text x="1.2204%" y="479.50">llvm::..</text></g><g><title>llvm::ModuleInlinerWrapperPass::run (116 samples, 5.12%)</title><rect x="0.9704%" y="453" width="5.1169%" height="15" fill="rgb(209,67,49)" fg:x="22" fg:w="116"/><text x="1.2204%" y="463.50">llvm::..</text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (116 samples, 5.12%)</title><rect x="0.9704%" y="437" width="5.1169%" height="15" fill="rgb(213,87,29)" fg:x="22" fg:w="116"/><text x="1.2204%" y="447.50">llvm::..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::RequireAnalysisPass&lt;llvm::GlobalsAA, llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.04%)</title><rect x="6.0432%" y="421" width="0.0441%" height="15" fill="rgb(205,151,52)" fg:x="137" fg:w="1"/><text x="6.2932%" y="431.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.0432%" y="405" width="0.0441%" height="15" fill="rgb(253,215,39)" fg:x="137" fg:w="1"/><text x="6.2932%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Module, llvm::GlobalsAA, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="6.0432%" y="389" width="0.0441%" height="15" fill="rgb(221,220,41)" fg:x="137" fg:w="1"/><text x="6.2932%" y="399.50"></text></g><g><title>llvm::GlobalsAA::run (1 samples, 0.04%)</title><rect x="6.0432%" y="373" width="0.0441%" height="15" fill="rgb(218,133,21)" fg:x="137" fg:w="1"/><text x="6.2932%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.0432%" y="357" width="0.0441%" height="15" fill="rgb(221,193,43)" fg:x="137" fg:w="1"/><text x="6.2932%" y="367.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Module, llvm::CallGraphAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="6.0432%" y="341" width="0.0441%" height="15" fill="rgb(240,128,52)" fg:x="137" fg:w="1"/><text x="6.2932%" y="351.50"></text></g><g><title>llvm::CallGraph::populateCallGraphNode (1 samples, 0.04%)</title><rect x="6.0432%" y="325" width="0.0441%" height="15" fill="rgb(253,114,12)" fg:x="137" fg:w="1"/><text x="6.2932%" y="335.50"></text></g><g><title>llvm::ValueHandleBase::AddToUseList (1 samples, 0.04%)</title><rect x="6.0432%" y="309" width="0.0441%" height="15" fill="rgb(215,223,47)" fg:x="137" fg:w="1"/><text x="6.2932%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (1 samples, 0.04%)</title><rect x="6.0873%" y="437" width="0.0441%" height="15" fill="rgb(248,225,23)" fg:x="138" fg:w="1"/><text x="6.3373%" y="447.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::DominatorTree, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="6.0873%" y="421" width="0.0441%" height="15" fill="rgb(250,108,0)" fg:x="138" fg:w="1"/><text x="6.3373%" y="431.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.1315%" y="405" width="0.0441%" height="15" fill="rgb(228,208,7)" fg:x="139" fg:w="1"/><text x="6.3815%" y="415.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="6.2197%" y="373" width="0.0441%" height="15" fill="rgb(244,45,10)" fg:x="141" fg:w="1"/><text x="6.4697%" y="383.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="6.2197%" y="357" width="0.0441%" height="15" fill="rgb(207,125,25)" fg:x="141" fg:w="1"/><text x="6.4697%" y="367.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="6.2197%" y="341" width="0.0441%" height="15" fill="rgb(210,195,18)" fg:x="141" fg:w="1"/><text x="6.4697%" y="351.50"></text></g><g><title>computeKnownBitsFromAssume (1 samples, 0.04%)</title><rect x="6.2197%" y="325" width="0.0441%" height="15" fill="rgb(249,80,12)" fg:x="141" fg:w="1"/><text x="6.4697%" y="335.50"></text></g><g><title>isKnownNonZero (1 samples, 0.04%)</title><rect x="6.2638%" y="373" width="0.0441%" height="15" fill="rgb(221,65,9)" fg:x="142" fg:w="1"/><text x="6.5138%" y="383.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="6.2638%" y="357" width="0.0441%" height="15" fill="rgb(235,49,36)" fg:x="142" fg:w="1"/><text x="6.5138%" y="367.50"></text></g><g><title>computeKnownBitsFromAssume (1 samples, 0.04%)</title><rect x="6.2638%" y="341" width="0.0441%" height="15" fill="rgb(225,32,20)" fg:x="142" fg:w="1"/><text x="6.5138%" y="351.50"></text></g><g><title>llvm::Type::getPrimitiveSizeInBits (1 samples, 0.04%)</title><rect x="6.2638%" y="325" width="0.0441%" height="15" fill="rgb(215,141,46)" fg:x="142" fg:w="1"/><text x="6.5138%" y="335.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::EarlyCSEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (5 samples, 0.22%)</title><rect x="6.1315%" y="421" width="0.2206%" height="15" fill="rgb(250,160,47)" fg:x="139" fg:w="5"/><text x="6.3815%" y="431.50"></text></g><g><title>llvm::simplifyInstruction (4 samples, 0.18%)</title><rect x="6.1756%" y="405" width="0.1764%" height="15" fill="rgb(216,222,40)" fg:x="140" fg:w="4"/><text x="6.4256%" y="415.50"></text></g><g><title>simplifyICmpInst (3 samples, 0.13%)</title><rect x="6.2197%" y="389" width="0.1323%" height="15" fill="rgb(234,217,39)" fg:x="141" fg:w="3"/><text x="6.4697%" y="399.50"></text></g><g><title>llvm::isImpliedCondition (1 samples, 0.04%)</title><rect x="6.3079%" y="373" width="0.0441%" height="15" fill="rgb(207,178,40)" fg:x="143" fg:w="1"/><text x="6.5579%" y="383.50"></text></g><g><title>llvm::ConstantRange::intersectWith (1 samples, 0.04%)</title><rect x="6.3079%" y="357" width="0.0441%" height="15" fill="rgb(221,136,13)" fg:x="143" fg:w="1"/><text x="6.5579%" y="367.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::Float2IntPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="6.3520%" y="421" width="0.0441%" height="15" fill="rgb(249,199,10)" fg:x="144" fg:w="1"/><text x="6.6020%" y="431.50"></text></g><g><title>llvm::Float2IntPass::runImpl (1 samples, 0.04%)</title><rect x="6.3520%" y="405" width="0.0441%" height="15" fill="rgb(249,222,13)" fg:x="144" fg:w="1"/><text x="6.6020%" y="415.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction*, unsigned int, llvm::DenseMapInfo&lt;llvm::Instruction*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Instruction*, unsigned int&gt; &gt;, llvm::Instruction*, unsigned int, llvm::DenseMapInfo&lt;llvm::Instruction*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Instruction*, unsigned int&gt; &gt;::clear (1 samples, 0.04%)</title><rect x="6.3520%" y="389" width="0.0441%" height="15" fill="rgb(244,185,38)" fg:x="144" fg:w="1"/><text x="6.6020%" y="399.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LoopSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="6.3961%" y="373" width="0.0441%" height="15" fill="rgb(236,202,9)" fg:x="145" fg:w="1"/><text x="6.6461%" y="383.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (2 samples, 0.09%)</title><rect x="6.3961%" y="389" width="0.0882%" height="15" fill="rgb(250,229,37)" fg:x="145" fg:w="2"/><text x="6.6461%" y="399.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LoopSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="6.4402%" y="373" width="0.0441%" height="15" fill="rgb(206,174,23)" fg:x="146" fg:w="1"/><text x="6.6902%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.4402%" y="357" width="0.0441%" height="15" fill="rgb(211,33,43)" fg:x="146" fg:w="1"/><text x="6.6902%" y="367.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (3 samples, 0.13%)</title><rect x="6.3961%" y="421" width="0.1323%" height="15" fill="rgb(245,58,50)" fg:x="145" fg:w="3"/><text x="6.6461%" y="431.50"></text></g><g><title>llvm::FunctionToLoopPassAdaptor::run (3 samples, 0.13%)</title><rect x="6.3961%" y="405" width="0.1323%" height="15" fill="rgb(244,68,36)" fg:x="145" fg:w="3"/><text x="6.6461%" y="415.50"></text></g><g><title>llvm::PassManager&lt;llvm::Loop, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::runWithoutLoopNestPasses (1 samples, 0.04%)</title><rect x="6.4843%" y="389" width="0.0441%" height="15" fill="rgb(232,229,15)" fg:x="147" fg:w="1"/><text x="6.7343%" y="399.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopDeletionPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (1 samples, 0.04%)</title><rect x="6.4843%" y="373" width="0.0441%" height="15" fill="rgb(254,30,23)" fg:x="147" fg:w="1"/><text x="6.7343%" y="383.50"></text></g><g><title>llvm::LoopDeletionPass::run (1 samples, 0.04%)</title><rect x="6.4843%" y="357" width="0.0441%" height="15" fill="rgb(235,160,14)" fg:x="147" fg:w="1"/><text x="6.7343%" y="367.50"></text></g><g><title>breakBackedgeIfNotTaken (1 samples, 0.04%)</title><rect x="6.4843%" y="341" width="0.0441%" height="15" fill="rgb(212,155,44)" fg:x="147" fg:w="1"/><text x="6.7343%" y="351.50"></text></g><g><title>llvm::ScalarEvolution::getBackedgeTakenCount (1 samples, 0.04%)</title><rect x="6.4843%" y="325" width="0.0441%" height="15" fill="rgb(226,2,50)" fg:x="147" fg:w="1"/><text x="6.7343%" y="335.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.6167%" y="389" width="0.0441%" height="15" fill="rgb(234,177,6)" fg:x="150" fg:w="1"/><text x="6.8667%" y="399.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (9 samples, 0.40%)</title><rect x="6.5285%" y="421" width="0.3970%" height="15" fill="rgb(217,24,9)" fg:x="148" fg:w="9"/><text x="6.7785%" y="431.50"></text></g><g><title>llvm::InstCombinePass::run (9 samples, 0.40%)</title><rect x="6.5285%" y="405" width="0.3970%" height="15" fill="rgb(220,13,46)" fg:x="148" fg:w="9"/><text x="6.7785%" y="415.50"></text></g><g><title>llvm::InstCombinerImpl::run (6 samples, 0.26%)</title><rect x="6.6608%" y="389" width="0.2647%" height="15" fill="rgb(239,221,27)" fg:x="151" fg:w="6"/><text x="6.9108%" y="399.50"></text></g><g><title>llvm::ConstantFoldInstruction (1 samples, 0.04%)</title><rect x="6.8813%" y="373" width="0.0441%" height="15" fill="rgb(222,198,25)" fg:x="156" fg:w="1"/><text x="7.1313%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LoopSinkPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="6.9255%" y="421" width="0.0441%" height="15" fill="rgb(211,99,13)" fg:x="157" fg:w="1"/><text x="7.1755%" y="431.50"></text></g><g><title>llvm::LoopSinkPass::run (1 samples, 0.04%)</title><rect x="6.9255%" y="405" width="0.0441%" height="15" fill="rgb(232,111,31)" fg:x="157" fg:w="1"/><text x="7.1755%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.9255%" y="389" width="0.0441%" height="15" fill="rgb(245,82,37)" fg:x="157" fg:w="1"/><text x="7.1755%" y="399.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="6.9255%" y="373" width="0.0441%" height="15" fill="rgb(227,149,46)" fg:x="157" fg:w="1"/><text x="7.1755%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.9255%" y="357" width="0.0441%" height="15" fill="rgb(218,36,50)" fg:x="157" fg:w="1"/><text x="7.1755%" y="367.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="6.9255%" y="341" width="0.0441%" height="15" fill="rgb(226,80,48)" fg:x="157" fg:w="1"/><text x="7.1755%" y="351.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="6.9255%" y="325" width="0.0441%" height="15" fill="rgb(238,224,15)" fg:x="157" fg:w="1"/><text x="7.1755%" y="335.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="6.9255%" y="309" width="0.0441%" height="15" fill="rgb(241,136,10)" fg:x="157" fg:w="1"/><text x="7.1755%" y="319.50"></text></g><g><title>llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt; (1 samples, 0.04%)</title><rect x="6.9255%" y="293" width="0.0441%" height="15" fill="rgb(208,32,45)" fg:x="157" fg:w="1"/><text x="7.1755%" y="303.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LoopUnrollPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="6.9696%" y="421" width="0.0441%" height="15" fill="rgb(207,135,9)" fg:x="158" fg:w="1"/><text x="7.2196%" y="431.50"></text></g><g><title>llvm::LoopUnrollPass::run (1 samples, 0.04%)</title><rect x="6.9696%" y="405" width="0.0441%" height="15" fill="rgb(206,86,44)" fg:x="158" fg:w="1"/><text x="7.2196%" y="415.50"></text></g><g><title>tryToUnrollLoop (1 samples, 0.04%)</title><rect x="6.9696%" y="389" width="0.0441%" height="15" fill="rgb(245,177,15)" fg:x="158" fg:w="1"/><text x="7.2196%" y="399.50"></text></g><g><title>llvm::getOptionalIntLoopAttribute (1 samples, 0.04%)</title><rect x="6.9696%" y="373" width="0.0441%" height="15" fill="rgb(206,64,50)" fg:x="158" fg:w="1"/><text x="7.2196%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LowerExpectIntrinsicPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="7.0137%" y="421" width="0.0441%" height="15" fill="rgb(234,36,40)" fg:x="159" fg:w="1"/><text x="7.2637%" y="431.50"></text></g><g><title>lowerExpectIntrinsic (1 samples, 0.04%)</title><rect x="7.0137%" y="405" width="0.0441%" height="15" fill="rgb(213,64,8)" fg:x="159" fg:w="1"/><text x="7.2637%" y="415.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SLPVectorizerPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (3 samples, 0.13%)</title><rect x="7.0578%" y="421" width="0.1323%" height="15" fill="rgb(210,75,36)" fg:x="160" fg:w="3"/><text x="7.3078%" y="431.50"></text></g><g><title>llvm::SLPVectorizerPass::run (3 samples, 0.13%)</title><rect x="7.0578%" y="405" width="0.1323%" height="15" fill="rgb(229,88,21)" fg:x="160" fg:w="3"/><text x="7.3078%" y="415.50"></text></g><g><title>llvm::SLPVectorizerPass::runImpl (3 samples, 0.13%)</title><rect x="7.0578%" y="389" width="0.1323%" height="15" fill="rgb(252,204,47)" fg:x="160" fg:w="3"/><text x="7.3078%" y="399.50"></text></g><g><title>llvm::SLPVectorizerPass::vectorizeChainsInBlock (2 samples, 0.09%)</title><rect x="7.1019%" y="373" width="0.0882%" height="15" fill="rgb(208,77,27)" fg:x="161" fg:w="2"/><text x="7.3519%" y="383.50"></text></g><g><title>llvm::SLPVectorizerPass::tryToVectorizeList (1 samples, 0.04%)</title><rect x="7.1460%" y="357" width="0.0441%" height="15" fill="rgb(221,76,26)" fg:x="162" fg:w="1"/><text x="7.3960%" y="367.50"></text></g><g><title>llvm::TargetTransformInfo::Model&lt;llvm::X86TTIImpl&gt;::getNumberOfParts (1 samples, 0.04%)</title><rect x="7.1460%" y="341" width="0.0441%" height="15" fill="rgb(225,139,18)" fg:x="162" fg:w="1"/><text x="7.3960%" y="351.50"></text></g><g><title>llvm::TargetLoweringBase::getTypeLegalizationCost (1 samples, 0.04%)</title><rect x="7.1460%" y="325" width="0.0441%" height="15" fill="rgb(230,137,11)" fg:x="162" fg:w="1"/><text x="7.3960%" y="335.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SimplifyCFGPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (4 samples, 0.18%)</title><rect x="7.1901%" y="421" width="0.1764%" height="15" fill="rgb(212,28,1)" fg:x="163" fg:w="4"/><text x="7.4401%" y="431.50"></text></g><g><title>simplifyFunctionCFG (4 samples, 0.18%)</title><rect x="7.1901%" y="405" width="0.1764%" height="15" fill="rgb(248,164,17)" fg:x="163" fg:w="4"/><text x="7.4401%" y="415.50"></text></g><g><title>llvm::removeUnreachableBlocks (2 samples, 0.09%)</title><rect x="7.2783%" y="389" width="0.0882%" height="15" fill="rgb(222,171,42)" fg:x="165" fg:w="2"/><text x="7.5283%" y="399.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="7.3225%" y="373" width="0.0441%" height="15" fill="rgb(243,84,45)" fg:x="166" fg:w="1"/><text x="7.5725%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (30 samples, 1.32%)</title><rect x="6.0873%" y="469" width="1.3233%" height="15" fill="rgb(252,49,23)" fg:x="138" fg:w="30"/><text x="6.3373%" y="479.50"></text></g><g><title>llvm::ModuleToFunctionPassAdaptor::run (30 samples, 1.32%)</title><rect x="6.0873%" y="453" width="1.3233%" height="15" fill="rgb(215,19,7)" fg:x="138" fg:w="30"/><text x="6.3373%" y="463.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (29 samples, 1.28%)</title><rect x="6.1315%" y="437" width="1.2792%" height="15" fill="rgb(238,81,41)" fg:x="139" fg:w="29"/><text x="6.3815%" y="447.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::TailCallElimPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="7.3666%" y="421" width="0.0441%" height="15" fill="rgb(210,199,37)" fg:x="167" fg:w="1"/><text x="7.6166%" y="431.50"></text></g><g><title>llvm::TailCallElimPass::run (1 samples, 0.04%)</title><rect x="7.3666%" y="405" width="0.0441%" height="15" fill="rgb(244,192,49)" fg:x="167" fg:w="1"/><text x="7.6166%" y="415.50"></text></g><g><title>llvm::MD5::final (1 samples, 0.04%)</title><rect x="7.4107%" y="421" width="0.0441%" height="15" fill="rgb(226,211,11)" fg:x="168" fg:w="1"/><text x="7.6607%" y="431.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="7.4107%" y="405" width="0.0441%" height="15" fill="rgb(236,162,54)" fg:x="168" fg:w="1"/><text x="7.6607%" y="415.50"></text></g><g><title>LLVMRustOptimize (170 samples, 7.50%)</title><rect x="0.0441%" y="501" width="7.4989%" height="15" fill="rgb(220,229,9)" fg:x="1" fg:w="170"/><text x="0.2941%" y="511.50">LLVMRustOp..</text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (170 samples, 7.50%)</title><rect x="0.0441%" y="485" width="7.4989%" height="15" fill="rgb(250,87,22)" fg:x="1" fg:w="170"/><text x="0.2941%" y="495.50">llvm::Pass..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::PGOIndirectCallPromotion, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (3 samples, 0.13%)</title><rect x="7.4107%" y="469" width="0.1323%" height="15" fill="rgb(239,43,17)" fg:x="168" fg:w="3"/><text x="7.6607%" y="479.50"></text></g><g><title>llvm::PGOIndirectCallPromotion::run (3 samples, 0.13%)</title><rect x="7.4107%" y="453" width="0.1323%" height="15" fill="rgb(231,177,25)" fg:x="168" fg:w="3"/><text x="7.6607%" y="463.50"></text></g><g><title>llvm::InstrProfSymtab::create (3 samples, 0.13%)</title><rect x="7.4107%" y="437" width="0.1323%" height="15" fill="rgb(219,179,1)" fg:x="168" fg:w="3"/><text x="7.6607%" y="447.50"></text></g><g><title>llvm::MD5::update (2 samples, 0.09%)</title><rect x="7.4548%" y="421" width="0.0882%" height="15" fill="rgb(238,219,53)" fg:x="169" fg:w="2"/><text x="7.7048%" y="431.50"></text></g><g><title>llvm::BitcodeReaderValueList::getValueFwdRef (1 samples, 0.04%)</title><rect x="7.5871%" y="453" width="0.0441%" height="15" fill="rgb(232,167,36)" fg:x="172" fg:w="1"/><text x="7.8371%" y="463.50"></text></g><g><title>std::_Function_handler&lt;llvm::Expected&lt;llvm::Value*&gt; (unsigned int, llvm::BasicBlock*), (anonymous namespace)::BitcodeReader::BitcodeReader(llvm::BitstreamCursor, llvm::StringRef, llvm::StringRef, llvm::LLVMContext&amp;)::$_2&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="7.5871%" y="437" width="0.0441%" height="15" fill="rgb(244,19,51)" fg:x="172" fg:w="1"/><text x="7.8371%" y="447.50"></text></g><g><title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="7.6312%" y="453" width="0.0441%" height="15" fill="rgb(224,6,22)" fg:x="173" fg:w="1"/><text x="7.8812%" y="463.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Function*, unsigned int, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, unsigned int&gt; &gt;, llvm::Function*, unsigned int, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, unsigned int&gt; &gt;::FindAndConstruct (1 samples, 0.04%)</title><rect x="7.6753%" y="453" width="0.0441%" height="15" fill="rgb(224,145,5)" fg:x="174" fg:w="1"/><text x="7.9253%" y="463.50"></text></g><g><title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="7.7195%" y="437" width="0.0441%" height="15" fill="rgb(234,130,49)" fg:x="175" fg:w="1"/><text x="7.9695%" y="447.50"></text></g><g><title>llvm::DISubprogram::getImpl (1 samples, 0.04%)</title><rect x="7.7636%" y="421" width="0.0441%" height="15" fill="rgb(254,6,2)" fg:x="176" fg:w="1"/><text x="8.0136%" y="431.50"></text></g><g><title>llvm::DISubprogram::DISubprogram (1 samples, 0.04%)</title><rect x="7.7636%" y="405" width="0.0441%" height="15" fill="rgb(208,96,46)" fg:x="176" fg:w="1"/><text x="8.0136%" y="415.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseMetadata (4 samples, 0.18%)</title><rect x="7.7195%" y="453" width="0.1764%" height="15" fill="rgb(239,3,39)" fg:x="175" fg:w="4"/><text x="7.9695%" y="463.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseOneMetadata (3 samples, 0.13%)</title><rect x="7.7636%" y="437" width="0.1323%" height="15" fill="rgb(233,210,1)" fg:x="176" fg:w="3"/><text x="8.0136%" y="447.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseMetadataStrings (2 samples, 0.09%)</title><rect x="7.8077%" y="421" width="0.0882%" height="15" fill="rgb(244,137,37)" fg:x="177" fg:w="2"/><text x="8.0577%" y="431.50"></text></g><g><title>llvm::MDString::get (2 samples, 0.09%)</title><rect x="7.8077%" y="405" width="0.0882%" height="15" fill="rgb(240,136,2)" fg:x="177" fg:w="2"/><text x="8.0577%" y="415.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="8.1165%" y="437" width="0.0441%" height="15" fill="rgb(239,18,37)" fg:x="184" fg:w="1"/><text x="8.3665%" y="447.50"></text></g><g><title>llvm::UpgradeDebugInfo (7 samples, 0.31%)</title><rect x="7.8959%" y="453" width="0.3088%" height="15" fill="rgb(218,185,22)" fg:x="179" fg:w="7"/><text x="8.1459%" y="463.50"></text></g><g><title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="8.1606%" y="437" width="0.0441%" height="15" fill="rgb(225,218,4)" fg:x="185" fg:w="1"/><text x="8.4106%" y="447.50"></text></g><g><title>llvm::FoldingSet&lt;llvm::AttributeListImpl&gt;::NodeEquals (1 samples, 0.04%)</title><rect x="8.1606%" y="421" width="0.0441%" height="15" fill="rgb(230,182,32)" fg:x="185" fg:w="1"/><text x="8.4106%" y="431.50"></text></g><g><title>llvm::BitcodeModule::getModuleImpl (17 samples, 0.75%)</title><rect x="7.5430%" y="469" width="0.7499%" height="15" fill="rgb(242,56,43)" fg:x="171" fg:w="17"/><text x="7.7930%" y="479.50"></text></g><g><title>llvm::UpgradeIntrinsicFunction (2 samples, 0.09%)</title><rect x="8.2047%" y="453" width="0.0882%" height="15" fill="rgb(233,99,24)" fg:x="186" fg:w="2"/><text x="8.4547%" y="463.50"></text></g><g><title>llvm::Regex::match (2 samples, 0.09%)</title><rect x="8.2047%" y="437" width="0.0882%" height="15" fill="rgb(234,209,42)" fg:x="186" fg:w="2"/><text x="8.4547%" y="447.50"></text></g><g><title>llvm_regexec (2 samples, 0.09%)</title><rect x="8.2047%" y="421" width="0.0882%" height="15" fill="rgb(227,7,12)" fg:x="186" fg:w="2"/><text x="8.4547%" y="431.50"></text></g><g><title>LLVMRustParseBitcodeForLTO (18 samples, 0.79%)</title><rect x="7.5430%" y="501" width="0.7940%" height="15" fill="rgb(245,203,43)" fg:x="171" fg:w="18"/><text x="7.7930%" y="511.50"></text></g><g><title>llvm::parseBitcodeFile (18 samples, 0.79%)</title><rect x="7.5430%" y="485" width="0.7940%" height="15" fill="rgb(238,205,33)" fg:x="171" fg:w="18"/><text x="7.7930%" y="495.50"></text></g><g><title>llvm::getBitcodeFileContents (1 samples, 0.04%)</title><rect x="8.2929%" y="469" width="0.0441%" height="15" fill="rgb(231,56,7)" fg:x="188" fg:w="1"/><text x="8.5429%" y="479.50"></text></g><g><title>readBlobInRecord (1 samples, 0.04%)</title><rect x="8.2929%" y="453" width="0.0441%" height="15" fill="rgb(244,186,29)" fg:x="188" fg:w="1"/><text x="8.5429%" y="463.50"></text></g><g><title>llvm::BitstreamCursor::advance (1 samples, 0.04%)</title><rect x="8.2929%" y="437" width="0.0441%" height="15" fill="rgb(234,111,31)" fg:x="188" fg:w="1"/><text x="8.5429%" y="447.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="8.5135%" y="469" width="0.0441%" height="15" fill="rgb(241,149,10)" fg:x="193" fg:w="1"/><text x="8.7635%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="8.5576%" y="469" width="0.0441%" height="15" fill="rgb(249,206,44)" fg:x="194" fg:w="1"/><text x="8.8076%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="8.5576%" y="453" width="0.0441%" height="15" fill="rgb(251,153,30)" fg:x="194" fg:w="1"/><text x="8.8076%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="8.5576%" y="437" width="0.0441%" height="15" fill="rgb(239,152,38)" fg:x="194" fg:w="1"/><text x="8.8076%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="8.5576%" y="421" width="0.0441%" height="15" fill="rgb(249,139,47)" fg:x="194" fg:w="1"/><text x="8.8076%" y="431.50"></text></g><g><title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="8.6017%" y="469" width="0.0441%" height="15" fill="rgb(244,64,35)" fg:x="195" fg:w="1"/><text x="8.8517%" y="479.50"></text></g><g><title>llvm::DILocation::getImpl (1 samples, 0.04%)</title><rect x="8.6458%" y="469" width="0.0441%" height="15" fill="rgb(216,46,15)" fg:x="196" fg:w="1"/><text x="8.8958%" y="479.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Function*, unsigned int, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, unsigned int&gt; &gt;, llvm::Function*, unsigned int, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, unsigned int&gt; &gt;::FindAndConstruct (1 samples, 0.04%)</title><rect x="8.6899%" y="469" width="0.0441%" height="15" fill="rgb(250,74,19)" fg:x="197" fg:w="1"/><text x="8.9399%" y="479.50"></text></g><g><title>llvm::FunctionImportGlobalProcessing::processGlobalsForThinLTO (1 samples, 0.04%)</title><rect x="8.7340%" y="469" width="0.0441%" height="15" fill="rgb(249,42,33)" fg:x="198" fg:w="1"/><text x="8.9840%" y="479.50"></text></g><g><title>llvm::IRMover::IRMover (2 samples, 0.09%)</title><rect x="8.7781%" y="469" width="0.0882%" height="15" fill="rgb(242,149,17)" fg:x="199" fg:w="2"/><text x="9.0281%" y="479.50"></text></g><g><title>llvm::TypeFinder::run (1 samples, 0.04%)</title><rect x="8.8222%" y="453" width="0.0441%" height="15" fill="rgb(244,29,21)" fg:x="200" fg:w="1"/><text x="9.0722%" y="463.50"></text></g><g><title>llvm::Triple::Triple (1 samples, 0.04%)</title><rect x="8.8663%" y="453" width="0.0441%" height="15" fill="rgb(220,130,37)" fg:x="201" fg:w="1"/><text x="9.1163%" y="463.50"></text></g><g><title>parseSubArch (1 samples, 0.04%)</title><rect x="8.8663%" y="437" width="0.0441%" height="15" fill="rgb(211,67,2)" fg:x="201" fg:w="1"/><text x="9.1163%" y="447.50"></text></g><g><title>llvm::AttributeList::addAttributesAtIndex (1 samples, 0.04%)</title><rect x="9.1751%" y="437" width="0.0441%" height="15" fill="rgb(235,68,52)" fg:x="208" fg:w="1"/><text x="9.4251%" y="447.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Metadata const*, llvm::TrackingMDRef, llvm::DenseMapInfo&lt;llvm::Metadata const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Metadata const*, llvm::TrackingMDRef&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="9.2192%" y="437" width="0.0441%" height="15" fill="rgb(246,142,3)" fg:x="209" fg:w="1"/><text x="9.4692%" y="447.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Metadata const*, llvm::TrackingMDRef, llvm::DenseMapInfo&lt;llvm::Metadata const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Metadata const*, llvm::TrackingMDRef&gt; &gt;, llvm::Metadata const*, llvm::TrackingMDRef, llvm::DenseMapInfo&lt;llvm::Metadata const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Metadata const*, llvm::TrackingMDRef&gt; &gt;::moveFromOldBuckets (1 samples, 0.04%)</title><rect x="9.2192%" y="421" width="0.0441%" height="15" fill="rgb(241,25,7)" fg:x="209" fg:w="1"/><text x="9.4692%" y="431.50"></text></g><g><title>llvm::IRMover::move (10 samples, 0.44%)</title><rect x="8.8663%" y="469" width="0.4411%" height="15" fill="rgb(242,119,39)" fg:x="201" fg:w="10"/><text x="9.1163%" y="479.50"></text></g><g><title>llvm::ValueMapper::mapValue (9 samples, 0.40%)</title><rect x="8.9105%" y="453" width="0.3970%" height="15" fill="rgb(241,98,45)" fg:x="202" fg:w="9"/><text x="9.1605%" y="463.50"></text></g><g><title>llvm::Function::Function (1 samples, 0.04%)</title><rect x="9.2633%" y="437" width="0.0441%" height="15" fill="rgb(254,28,30)" fg:x="210" fg:w="1"/><text x="9.5133%" y="447.50"></text></g><g><title>llvm::BitstreamCursor::readRecord (2 samples, 0.09%)</title><rect x="9.3516%" y="453" width="0.0882%" height="15" fill="rgb(241,142,54)" fg:x="212" fg:w="2"/><text x="9.6016%" y="463.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseMetadata (5 samples, 0.22%)</title><rect x="9.3075%" y="469" width="0.2206%" height="15" fill="rgb(222,85,15)" fg:x="211" fg:w="5"/><text x="9.5575%" y="479.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseOneMetadata (2 samples, 0.09%)</title><rect x="9.4398%" y="453" width="0.0882%" height="15" fill="rgb(210,85,47)" fg:x="214" fg:w="2"/><text x="9.6898%" y="463.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseMetadataStrings (2 samples, 0.09%)</title><rect x="9.4398%" y="437" width="0.0882%" height="15" fill="rgb(224,206,25)" fg:x="214" fg:w="2"/><text x="9.6898%" y="447.50"></text></g><g><title>llvm::MDString::get (2 samples, 0.09%)</title><rect x="9.4398%" y="421" width="0.0882%" height="15" fill="rgb(243,201,19)" fg:x="214" fg:w="2"/><text x="9.6898%" y="431.50"></text></g><g><title>llvm::AttributeSet::hasParentContext (1 samples, 0.04%)</title><rect x="9.6603%" y="453" width="0.0441%" height="15" fill="rgb(236,59,4)" fg:x="219" fg:w="1"/><text x="9.9103%" y="463.50"></text></g><g><title>LLVMRustPrepareThinLTOImport (32 samples, 1.41%)</title><rect x="8.3370%" y="501" width="1.4116%" height="15" fill="rgb(254,179,45)" fg:x="189" fg:w="32"/><text x="8.5870%" y="511.50"></text></g><g><title>llvm::FunctionImporter::importFunctions (32 samples, 1.41%)</title><rect x="8.3370%" y="485" width="1.4116%" height="15" fill="rgb(226,14,10)" fg:x="189" fg:w="32"/><text x="8.5870%" y="495.50"></text></g><g><title>llvm::UpgradeDebugInfo (5 samples, 0.22%)</title><rect x="9.5280%" y="469" width="0.2206%" height="15" fill="rgb(244,27,41)" fg:x="216" fg:w="5"/><text x="9.7780%" y="479.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="9.7045%" y="453" width="0.0441%" height="15" fill="rgb(235,35,32)" fg:x="220" fg:w="1"/><text x="9.9545%" y="463.50"></text></g><g><title>LLVMRustPrepareThinLTOResolveWeak (1 samples, 0.04%)</title><rect x="9.7486%" y="501" width="0.0441%" height="15" fill="rgb(218,68,31)" fg:x="221" fg:w="1"/><text x="9.9986%" y="511.50"></text></g><g><title>llvm::thinLTOFinalizeInModule (1 samples, 0.04%)</title><rect x="9.7486%" y="485" width="0.0441%" height="15" fill="rgb(207,120,37)" fg:x="221" fg:w="1"/><text x="9.9986%" y="495.50"></text></g><g><title>llvm::thinLTOFinalizeInModule (1 samples, 0.04%)</title><rect x="9.7486%" y="469" width="0.0441%" height="15" fill="rgb(227,98,0)" fg:x="221" fg:w="1"/><text x="9.9986%" y="479.50"></text></g><g><title>llvm::MD5::update (1 samples, 0.04%)</title><rect x="9.7486%" y="453" width="0.0441%" height="15" fill="rgb(207,7,3)" fg:x="221" fg:w="1"/><text x="9.9986%" y="463.50"></text></g><g><title>llvm::DebugInfoFinder::processScope (1 samples, 0.04%)</title><rect x="9.7927%" y="469" width="0.0441%" height="15" fill="rgb(206,98,19)" fg:x="222" fg:w="1"/><text x="10.0427%" y="479.50"></text></g><g><title>llvm::SmallPtrSetImplBase::insert_imp_big (1 samples, 0.04%)</title><rect x="9.7927%" y="453" width="0.0441%" height="15" fill="rgb(217,5,26)" fg:x="222" fg:w="1"/><text x="10.0427%" y="463.50"></text></g><g><title>llvm::Function::getSubprogram (1 samples, 0.04%)</title><rect x="9.8368%" y="469" width="0.0441%" height="15" fill="rgb(235,190,38)" fg:x="223" fg:w="1"/><text x="10.0868%" y="479.50"></text></g><g><title>LLVMRustThinLTOPatchDICompileUnit (3 samples, 0.13%)</title><rect x="9.7927%" y="501" width="0.1323%" height="15" fill="rgb(247,86,24)" fg:x="222" fg:w="3"/><text x="10.0427%" y="511.50"></text></g><g><title>llvm::DebugInfoFinder::processModule (3 samples, 0.13%)</title><rect x="9.7927%" y="485" width="0.1323%" height="15" fill="rgb(205,101,16)" fg:x="222" fg:w="3"/><text x="10.0427%" y="495.50"></text></g><g><title>llvm::MetadataTracking::track (1 samples, 0.04%)</title><rect x="9.8809%" y="469" width="0.0441%" height="15" fill="rgb(246,168,33)" fg:x="224" fg:w="1"/><text x="10.1309%" y="479.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.04%)</title><rect x="9.9250%" y="469" width="0.0441%" height="15" fill="rgb(231,114,1)" fg:x="225" fg:w="1"/><text x="10.1750%" y="479.50"></text></g><g><title>llvm::TargetPassConfig::addOptimizedRegAlloc (1 samples, 0.04%)</title><rect x="9.9250%" y="453" width="0.0441%" height="15" fill="rgb(207,184,53)" fg:x="225" fg:w="1"/><text x="10.1750%" y="463.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.04%)</title><rect x="9.9250%" y="437" width="0.0441%" height="15" fill="rgb(224,95,51)" fg:x="225" fg:w="1"/><text x="10.1750%" y="447.50"></text></g><g><title>llvm::callDefaultCtor&lt;(anonymous namespace)::VirtRegRewriter&gt; (1 samples, 0.04%)</title><rect x="9.9250%" y="421" width="0.0441%" height="15" fill="rgb(212,188,45)" fg:x="225" fg:w="1"/><text x="10.1750%" y="431.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (2 samples, 0.09%)</title><rect x="9.9250%" y="485" width="0.0882%" height="15" fill="rgb(223,154,38)" fg:x="225" fg:w="2"/><text x="10.1750%" y="495.50"></text></g><g><title>llvm::X86TargetMachine::createPassConfig (1 samples, 0.04%)</title><rect x="9.9691%" y="469" width="0.0441%" height="15" fill="rgb(251,22,52)" fg:x="226" fg:w="1"/><text x="10.2191%" y="479.50"></text></g><g><title>llvm::TargetPassConfig::TargetPassConfig (1 samples, 0.04%)</title><rect x="9.9691%" y="453" width="0.0441%" height="15" fill="rgb(229,209,22)" fg:x="226" fg:w="1"/><text x="10.2191%" y="463.50"></text></g><g><title>llvm::initializeCodeGen (1 samples, 0.04%)</title><rect x="9.9691%" y="437" width="0.0441%" height="15" fill="rgb(234,138,34)" fg:x="226" fg:w="1"/><text x="10.2191%" y="447.50"></text></g><g><title>__GI___pthread_once (1 samples, 0.04%)</title><rect x="9.9691%" y="421" width="0.0441%" height="15" fill="rgb(212,95,11)" fg:x="226" fg:w="1"/><text x="10.2191%" y="431.50"></text></g><g><title>llvm::BranchFolder::OptimizeFunction (1 samples, 0.04%)</title><rect x="10.8072%" y="437" width="0.0441%" height="15" fill="rgb(240,179,47)" fg:x="245" fg:w="1"/><text x="11.0572%" y="447.50"></text></g><g><title>addRegAndItsAliases&lt;llvm::SmallSet&lt;llvm::Register, 4u, std::less&lt;llvm::Register&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="10.8072%" y="421" width="0.0441%" height="15" fill="rgb(240,163,11)" fg:x="245" fg:w="1"/><text x="11.0572%" y="431.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (2 samples, 0.09%)</title><rect x="10.8513%" y="437" width="0.0882%" height="15" fill="rgb(236,37,12)" fg:x="246" fg:w="2"/><text x="11.1013%" y="447.50"></text></g><g><title>llvm::LLVMTargetMachine::usesPhysRegsForValues (1 samples, 0.04%)</title><rect x="10.9396%" y="437" width="0.0441%" height="15" fill="rgb(232,164,16)" fg:x="248" fg:w="1"/><text x="11.1896%" y="447.50"></text></g><g><title>llvm::LPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="10.9837%" y="437" width="0.0441%" height="15" fill="rgb(244,205,15)" fg:x="249" fg:w="1"/><text x="11.2337%" y="447.50"></text></g><g><title>llvm::InductionDescriptor::isInductionPHI (1 samples, 0.04%)</title><rect x="10.9837%" y="421" width="0.0441%" height="15" fill="rgb(223,117,47)" fg:x="249" fg:w="1"/><text x="11.2337%" y="431.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (1 samples, 0.04%)</title><rect x="10.9837%" y="405" width="0.0441%" height="15" fill="rgb(244,107,35)" fg:x="249" fg:w="1"/><text x="11.2337%" y="415.50"></text></g><g><title>llvm::LivePhysRegs::stepBackward (1 samples, 0.04%)</title><rect x="11.0278%" y="437" width="0.0441%" height="15" fill="rgb(205,140,8)" fg:x="250" fg:w="1"/><text x="11.2778%" y="447.50"></text></g><g><title>llvm::LoopBase&lt;llvm::MachineBasicBlock, llvm::MachineLoop&gt;::getExitBlocks (1 samples, 0.04%)</title><rect x="11.0719%" y="437" width="0.0441%" height="15" fill="rgb(228,84,46)" fg:x="251" fg:w="1"/><text x="11.3219%" y="447.50"></text></g><g><title>llvm::MachineBlockFrequencyInfo::runOnMachineFunction (1 samples, 0.04%)</title><rect x="11.1160%" y="437" width="0.0441%" height="15" fill="rgb(254,188,9)" fg:x="252" fg:w="1"/><text x="11.3660%" y="447.50"></text></g><g><title>llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::tryToComputeMassInFunction (1 samples, 0.04%)</title><rect x="11.1160%" y="421" width="0.0441%" height="15" fill="rgb(206,112,54)" fg:x="252" fg:w="1"/><text x="11.3660%" y="431.50"></text></g><g><title>llvm::MachineLoopInfo::runOnMachineFunction (2 samples, 0.09%)</title><rect x="11.1601%" y="437" width="0.0882%" height="15" fill="rgb(216,84,49)" fg:x="253" fg:w="2"/><text x="11.4101%" y="447.50"></text></g><g><title>llvm::LoopInfoBase&lt;llvm::MachineBasicBlock, llvm::MachineLoop&gt;::analyze (2 samples, 0.09%)</title><rect x="11.1601%" y="421" width="0.0882%" height="15" fill="rgb(214,194,35)" fg:x="253" fg:w="2"/><text x="11.4101%" y="431.50"></text></g><g><title>llvm::RAGreedy::runOnMachineFunction (1 samples, 0.04%)</title><rect x="11.2483%" y="437" width="0.0441%" height="15" fill="rgb(249,28,3)" fg:x="255" fg:w="1"/><text x="11.4983%" y="447.50"></text></g><g><title>llvm::RegAllocBase::allocatePhysRegs (1 samples, 0.04%)</title><rect x="11.2483%" y="421" width="0.0441%" height="15" fill="rgb(222,56,52)" fg:x="255" fg:w="1"/><text x="11.4983%" y="431.50"></text></g><g><title>non-virtual thunk to llvm::RAGreedy::selectOrSplit (1 samples, 0.04%)</title><rect x="11.2483%" y="405" width="0.0441%" height="15" fill="rgb(245,217,50)" fg:x="255" fg:w="1"/><text x="11.4983%" y="415.50"></text></g><g><title>llvm::RAGreedy::trySplit (1 samples, 0.04%)</title><rect x="11.2483%" y="389" width="0.0441%" height="15" fill="rgb(213,201,24)" fg:x="255" fg:w="1"/><text x="11.4983%" y="399.50"></text></g><g><title>llvm::RAGreedy::tryRegionSplit (1 samples, 0.04%)</title><rect x="11.2483%" y="373" width="0.0441%" height="15" fill="rgb(248,116,28)" fg:x="255" fg:w="1"/><text x="11.4983%" y="383.50"></text></g><g><title>llvm::RAGreedy::calculateRegionSplitCost (1 samples, 0.04%)</title><rect x="11.2483%" y="357" width="0.0441%" height="15" fill="rgb(219,72,43)" fg:x="255" fg:w="1"/><text x="11.4983%" y="367.50"></text></g><g><title>llvm::RAGreedy::growRegion (1 samples, 0.04%)</title><rect x="11.2483%" y="341" width="0.0441%" height="15" fill="rgb(209,138,14)" fg:x="255" fg:w="1"/><text x="11.4983%" y="351.50"></text></g><g><title>llvm::InterferenceCache::Entry::update (1 samples, 0.04%)</title><rect x="11.2483%" y="325" width="0.0441%" height="15" fill="rgb(222,18,33)" fg:x="255" fg:w="1"/><text x="11.4983%" y="335.50"></text></g><g><title>llvm::RecursivelyDeleteTriviallyDeadInstructions (1 samples, 0.04%)</title><rect x="11.2925%" y="437" width="0.0441%" height="15" fill="rgb(213,199,7)" fg:x="256" fg:w="1"/><text x="11.5425%" y="447.50"></text></g><g><title>llvm::RecursivelyDeleteTriviallyDeadInstructions (1 samples, 0.04%)</title><rect x="11.2925%" y="421" width="0.0441%" height="15" fill="rgb(250,110,10)" fg:x="256" fg:w="1"/><text x="11.5425%" y="431.50"></text></g><g><title>std::_Function_handler&lt;void (llvm::Value*), (anonymous namespace)::CodeGenPrepare::optimizeMemoryInst(llvm::Instruction*, llvm::Value*, llvm::Type*, unsigned int)::$_8::operator()() const::{lambda(llvm::Value*)#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="11.2925%" y="405" width="0.0441%" height="15" fill="rgb(248,123,6)" fg:x="256" fg:w="1"/><text x="11.5425%" y="415.50"></text></g><g><title>llvm::ScalarEvolutionWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="11.3366%" y="437" width="0.0441%" height="15" fill="rgb(206,91,31)" fg:x="257" fg:w="1"/><text x="11.5866%" y="447.50"></text></g><g><title>llvm::ScalarEvolution::~ScalarEvolution (1 samples, 0.04%)</title><rect x="11.3366%" y="421" width="0.0441%" height="15" fill="rgb(211,154,13)" fg:x="257" fg:w="1"/><text x="11.5866%" y="431.50"></text></g><g><title>llvm::ScheduleDAGMILive::schedule (2 samples, 0.09%)</title><rect x="11.3807%" y="437" width="0.0882%" height="15" fill="rgb(225,148,7)" fg:x="258" fg:w="2"/><text x="11.6307%" y="447.50"></text></g><g><title>llvm::ScheduleDAGInstrs::buildSchedGraph (2 samples, 0.09%)</title><rect x="11.3807%" y="421" width="0.0882%" height="15" fill="rgb(220,160,43)" fg:x="258" fg:w="2"/><text x="11.6307%" y="431.50"></text></g><g><title>llvm::ScheduleDAGInstrs::addPhysRegDeps (1 samples, 0.04%)</title><rect x="11.4248%" y="405" width="0.0441%" height="15" fill="rgb(213,52,39)" fg:x="259" fg:w="1"/><text x="11.6748%" y="415.50"></text></g><g><title>llvm::SelectionDAGBuilder::visitBr (1 samples, 0.04%)</title><rect x="11.4689%" y="405" width="0.0441%" height="15" fill="rgb(243,137,7)" fg:x="260" fg:w="1"/><text x="11.7189%" y="415.50"></text></g><g><title>llvm::SelectionDAGBuilder::visitSwitchCase (1 samples, 0.04%)</title><rect x="11.4689%" y="389" width="0.0441%" height="15" fill="rgb(230,79,13)" fg:x="260" fg:w="1"/><text x="11.7189%" y="399.50"></text></g><g><title>llvm::SelectionDAGBuilder::visitCall (1 samples, 0.04%)</title><rect x="11.5130%" y="405" width="0.0441%" height="15" fill="rgb(247,105,23)" fg:x="261" fg:w="1"/><text x="11.7630%" y="415.50"></text></g><g><title>llvm::SelectionDAGBuilder::LowerCallTo (1 samples, 0.04%)</title><rect x="11.5130%" y="389" width="0.0441%" height="15" fill="rgb(223,179,41)" fg:x="261" fg:w="1"/><text x="11.7630%" y="399.50"></text></g><g><title>llvm::SelectionDAGBuilder::lowerInvokable (1 samples, 0.04%)</title><rect x="11.5130%" y="373" width="0.0441%" height="15" fill="rgb(218,9,34)" fg:x="261" fg:w="1"/><text x="11.7630%" y="383.50"></text></g><g><title>llvm::TargetLowering::LowerCallTo (1 samples, 0.04%)</title><rect x="11.5130%" y="357" width="0.0441%" height="15" fill="rgb(222,106,8)" fg:x="261" fg:w="1"/><text x="11.7630%" y="367.50"></text></g><g><title>llvm::X86TargetLowering::LowerCall (1 samples, 0.04%)</title><rect x="11.5130%" y="341" width="0.0441%" height="15" fill="rgb(211,220,0)" fg:x="261" fg:w="1"/><text x="11.7630%" y="351.50"></text></g><g><title>llvm::SelectionDAG::getNode (1 samples, 0.04%)</title><rect x="11.5130%" y="325" width="0.0441%" height="15" fill="rgb(229,52,16)" fg:x="261" fg:w="1"/><text x="11.7630%" y="335.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::BuildSchedGraph (2 samples, 0.09%)</title><rect x="11.6012%" y="389" width="0.0882%" height="15" fill="rgb(212,155,18)" fg:x="263" fg:w="2"/><text x="11.8512%" y="399.50"></text></g><g><title>llvm::InstrEmitter::EmitMachineNode (2 samples, 0.09%)</title><rect x="11.6895%" y="373" width="0.0882%" height="15" fill="rgb(242,21,14)" fg:x="265" fg:w="2"/><text x="11.9395%" y="383.50"></text></g><g><title>llvm::ScheduleDAGSDNodes::EmitSchedule (4 samples, 0.18%)</title><rect x="11.6895%" y="389" width="0.1764%" height="15" fill="rgb(222,19,48)" fg:x="265" fg:w="4"/><text x="11.9395%" y="399.50"></text></g><g><title>llvm::InstrEmitter::EmitSpecialNode (2 samples, 0.09%)</title><rect x="11.7777%" y="373" width="0.0882%" height="15" fill="rgb(232,45,27)" fg:x="267" fg:w="2"/><text x="12.0277%" y="383.50"></text></g><g><title>llvm::SelectionDAG::computeKnownBits (1 samples, 0.04%)</title><rect x="11.9982%" y="373" width="0.0441%" height="15" fill="rgb(249,103,42)" fg:x="272" fg:w="1"/><text x="12.2482%" y="383.50"></text></g><g><title>llvm::SelectionDAG::ComputeNumSignBits (1 samples, 0.04%)</title><rect x="12.0423%" y="357" width="0.0441%" height="15" fill="rgb(246,81,33)" fg:x="273" fg:w="1"/><text x="12.2923%" y="367.50"></text></g><g><title>llvm::TargetLowering::SimplifyDemandedBits (2 samples, 0.09%)</title><rect x="12.0423%" y="373" width="0.0882%" height="15" fill="rgb(252,33,42)" fg:x="273" fg:w="2"/><text x="12.2923%" y="383.50"></text></g><g><title>llvm::TargetLowering::SimplifyDemandedBits (1 samples, 0.04%)</title><rect x="12.0865%" y="357" width="0.0441%" height="15" fill="rgb(209,212,41)" fg:x="274" fg:w="1"/><text x="12.3365%" y="367.50"></text></g><g><title>llvm::TargetLowering::SimplifyDemandedBits (1 samples, 0.04%)</title><rect x="12.0865%" y="341" width="0.0441%" height="15" fill="rgb(207,154,6)" fg:x="274" fg:w="1"/><text x="12.3365%" y="351.50"></text></g><g><title>llvm::TargetLowering::SimplifyDemandedBits (1 samples, 0.04%)</title><rect x="12.0865%" y="325" width="0.0441%" height="15" fill="rgb(223,64,47)" fg:x="274" fg:w="1"/><text x="12.3365%" y="335.50"></text></g><g><title>llvm::SelectionDAG::Combine (7 samples, 0.31%)</title><rect x="11.8659%" y="389" width="0.3088%" height="15" fill="rgb(211,161,38)" fg:x="269" fg:w="7"/><text x="12.1159%" y="399.50"></text></g><g><title>llvm::X86TargetLowering::PerformDAGCombine (1 samples, 0.04%)</title><rect x="12.1306%" y="373" width="0.0441%" height="15" fill="rgb(219,138,40)" fg:x="275" fg:w="1"/><text x="12.3806%" y="383.50"></text></g><g><title>llvm::MetadataTracking::track (1 samples, 0.04%)</title><rect x="12.1306%" y="357" width="0.0441%" height="15" fill="rgb(241,228,46)" fg:x="275" fg:w="1"/><text x="12.3806%" y="367.50"></text></g><g><title>llvm::SelectionDAG::Legalize (1 samples, 0.04%)</title><rect x="12.1747%" y="389" width="0.0441%" height="15" fill="rgb(223,209,38)" fg:x="276" fg:w="1"/><text x="12.4247%" y="399.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (20 samples, 0.88%)</title><rect x="11.4689%" y="437" width="0.8822%" height="15" fill="rgb(236,164,45)" fg:x="260" fg:w="20"/><text x="11.7189%" y="447.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (20 samples, 0.88%)</title><rect x="11.4689%" y="421" width="0.8822%" height="15" fill="rgb(231,15,5)" fg:x="260" fg:w="20"/><text x="11.7189%" y="431.50"></text></g><g><title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (18 samples, 0.79%)</title><rect x="11.5571%" y="405" width="0.7940%" height="15" fill="rgb(252,35,15)" fg:x="262" fg:w="18"/><text x="11.8071%" y="415.50"></text></g><g><title>llvm::SelectionDAGISel::SelectCodeCommon (3 samples, 0.13%)</title><rect x="12.2188%" y="389" width="0.1323%" height="15" fill="rgb(248,181,18)" fg:x="277" fg:w="3"/><text x="12.4688%" y="399.50"></text></g><g><title>llvm::DebugHandlerBase::endFunction (1 samples, 0.04%)</title><rect x="12.3511%" y="405" width="0.0441%" height="15" fill="rgb(233,39,42)" fg:x="280" fg:w="1"/><text x="12.6011%" y="415.50"></text></g><g><title>llvm::DwarfDebug::endFunctionImpl (1 samples, 0.04%)</title><rect x="12.3511%" y="389" width="0.0441%" height="15" fill="rgb(238,110,33)" fg:x="280" fg:w="1"/><text x="12.6011%" y="399.50"></text></g><g><title>llvm::DwarfCompileUnit::constructAbstractSubprogramScopeDIE (1 samples, 0.04%)</title><rect x="12.3511%" y="373" width="0.0441%" height="15" fill="rgb(233,195,10)" fg:x="280" fg:w="1"/><text x="12.6011%" y="383.50"></text></g><g><title>llvm::DwarfCompileUnit::applySubprogramAttributesToDefinition (1 samples, 0.04%)</title><rect x="12.3511%" y="357" width="0.0441%" height="15" fill="rgb(254,105,3)" fg:x="280" fg:w="1"/><text x="12.6011%" y="367.50"></text></g><g><title>llvm::DwarfUnit::applySubprogramAttributes (1 samples, 0.04%)</title><rect x="12.3511%" y="341" width="0.0441%" height="15" fill="rgb(221,225,9)" fg:x="280" fg:w="1"/><text x="12.6011%" y="351.50"></text></g><g><title>llvm::DwarfUnit::applySubprogramDefinitionAttributes (1 samples, 0.04%)</title><rect x="12.3511%" y="325" width="0.0441%" height="15" fill="rgb(224,227,45)" fg:x="280" fg:w="1"/><text x="12.6011%" y="335.50"></text></g><g><title>llvm::DwarfUnit::addString (1 samples, 0.04%)</title><rect x="12.3511%" y="309" width="0.0441%" height="15" fill="rgb(229,198,43)" fg:x="280" fg:w="1"/><text x="12.6011%" y="319.50"></text></g><g><title>llvm::DwarfStringPool::getEntry (1 samples, 0.04%)</title><rect x="12.3511%" y="293" width="0.0441%" height="15" fill="rgb(206,209,35)" fg:x="280" fg:w="1"/><text x="12.6011%" y="303.50"></text></g><g><title>llvm::X86AsmPrinter::runOnMachineFunction (2 samples, 0.09%)</title><rect x="12.3511%" y="437" width="0.0882%" height="15" fill="rgb(245,195,53)" fg:x="280" fg:w="2"/><text x="12.6011%" y="447.50"></text></g><g><title>llvm::AsmPrinter::emitFunctionBody (2 samples, 0.09%)</title><rect x="12.3511%" y="421" width="0.0882%" height="15" fill="rgb(240,92,26)" fg:x="280" fg:w="2"/><text x="12.6011%" y="431.50"></text></g><g><title>llvm::DwarfDebug::beginInstruction (1 samples, 0.04%)</title><rect x="12.3952%" y="405" width="0.0441%" height="15" fill="rgb(207,40,23)" fg:x="281" fg:w="1"/><text x="12.6452%" y="415.50"></text></g><g><title>llvm::MCDwarfLineTableHeader::tryGetFile (1 samples, 0.04%)</title><rect x="12.3952%" y="389" width="0.0441%" height="15" fill="rgb(223,111,35)" fg:x="281" fg:w="1"/><text x="12.6452%" y="399.50"></text></g><g><title>llvm::X86FrameLowering::determineCalleeSaves (1 samples, 0.04%)</title><rect x="12.4393%" y="437" width="0.0441%" height="15" fill="rgb(229,147,28)" fg:x="282" fg:w="1"/><text x="12.6893%" y="447.50"></text></g><g><title>llvm::TargetFrameLowering::determineCalleeSaves (1 samples, 0.04%)</title><rect x="12.4393%" y="421" width="0.0441%" height="15" fill="rgb(211,29,28)" fg:x="282" fg:w="1"/><text x="12.6893%" y="431.50"></text></g><g><title>llvm::X86InstrInfo::getOpcodeAfterMemoryUnfold (1 samples, 0.04%)</title><rect x="12.4835%" y="437" width="0.0441%" height="15" fill="rgb(228,72,33)" fg:x="283" fg:w="1"/><text x="12.7335%" y="447.50"></text></g><g><title>llvm::lookupUnfoldTable (1 samples, 0.04%)</title><rect x="12.4835%" y="421" width="0.0441%" height="15" fill="rgb(205,214,31)" fg:x="283" fg:w="1"/><text x="12.7335%" y="431.50"></text></g><g><title>qsort_r (1 samples, 0.04%)</title><rect x="12.4835%" y="405" width="0.0441%" height="15" fill="rgb(224,111,15)" fg:x="283" fg:w="1"/><text x="12.7335%" y="415.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="12.4835%" y="389" width="0.0441%" height="15" fill="rgb(253,21,26)" fg:x="283" fg:w="1"/><text x="12.7335%" y="399.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="12.4835%" y="373" width="0.0441%" height="15" fill="rgb(245,139,43)" fg:x="283" fg:w="1"/><text x="12.7335%" y="383.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="12.4835%" y="357" width="0.0441%" height="15" fill="rgb(252,170,7)" fg:x="283" fg:w="1"/><text x="12.7335%" y="367.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="12.4835%" y="341" width="0.0441%" height="15" fill="rgb(231,118,14)" fg:x="283" fg:w="1"/><text x="12.7335%" y="351.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="12.4835%" y="325" width="0.0441%" height="15" fill="rgb(238,83,0)" fg:x="283" fg:w="1"/><text x="12.7335%" y="335.50"></text></g><g><title>@plt (1 samples, 0.04%)</title><rect x="12.4835%" y="309" width="0.0441%" height="15" fill="rgb(221,39,39)" fg:x="283" fg:w="1"/><text x="12.7335%" y="319.50"></text></g><g><title>LLVMRustWriteOutputFile (60 samples, 2.65%)</title><rect x="9.9250%" y="501" width="2.6467%" height="15" fill="rgb(222,119,46)" fg:x="225" fg:w="60"/><text x="10.1750%" y="511.50">LL..</text></g><g><title>llvm::legacy::PassManagerImpl::run (58 samples, 2.56%)</title><rect x="10.0132%" y="485" width="2.5584%" height="15" fill="rgb(222,165,49)" fg:x="227" fg:w="58"/><text x="10.2632%" y="495.50">ll..</text></g><g><title>llvm::FPPassManager::runOnModule (58 samples, 2.56%)</title><rect x="10.0132%" y="469" width="2.5584%" height="15" fill="rgb(219,113,52)" fg:x="227" fg:w="58"/><text x="10.2632%" y="479.50">ll..</text></g><g><title>llvm::FPPassManager::runOnFunction (58 samples, 2.56%)</title><rect x="10.0132%" y="453" width="2.5584%" height="15" fill="rgb(214,7,15)" fg:x="227" fg:w="58"/><text x="10.2632%" y="463.50">ll..</text></g><g><title>llvm::createGenericSchedLive (1 samples, 0.04%)</title><rect x="12.5276%" y="437" width="0.0441%" height="15" fill="rgb(235,32,4)" fg:x="284" fg:w="1"/><text x="12.7776%" y="447.50"></text></g><g><title>llvm::ScheduleDAGMILive::ScheduleDAGMILive (1 samples, 0.04%)</title><rect x="12.5276%" y="421" width="0.0441%" height="15" fill="rgb(238,90,54)" fg:x="284" fg:w="1"/><text x="12.7776%" y="431.50"></text></g><g><title>llvm::ScheduleDAGInstrs::ScheduleDAGInstrs (1 samples, 0.04%)</title><rect x="12.5276%" y="405" width="0.0441%" height="15" fill="rgb(213,208,19)" fg:x="284" fg:w="1"/><text x="12.7776%" y="415.50"></text></g><g><title>[libLLVM-15-rust-1.68.2-stable.so] (1 samples, 0.04%)</title><rect x="12.5717%" y="501" width="0.0441%" height="15" fill="rgb(233,156,4)" fg:x="285" fg:w="1"/><text x="12.8217%" y="511.50"></text></g><g><title>LiveDebugValues::InstrRefBasedLDV::ExtendRanges (1 samples, 0.04%)</title><rect x="12.6158%" y="485" width="0.0441%" height="15" fill="rgb(207,194,5)" fg:x="286" fg:w="1"/><text x="12.8658%" y="495.50"></text></g><g><title>LiveDebugValues::InstrRefBasedLDV::produceMLocTransferFunction (1 samples, 0.04%)</title><rect x="12.6158%" y="469" width="0.0441%" height="15" fill="rgb(206,111,30)" fg:x="286" fg:w="1"/><text x="12.8658%" y="479.50"></text></g><g><title>llvm::ScalarEvolution::getMinusSCEV (1 samples, 0.04%)</title><rect x="12.6599%" y="469" width="0.0441%" height="15" fill="rgb(243,70,54)" fg:x="287" fg:w="1"/><text x="12.9099%" y="479.50"></text></g><g><title>ReduceLoopStrength (2 samples, 0.09%)</title><rect x="12.6599%" y="485" width="0.0882%" height="15" fill="rgb(242,28,8)" fg:x="287" fg:w="2"/><text x="12.9099%" y="495.50"></text></g><g><title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="12.7040%" y="469" width="0.0441%" height="15" fill="rgb(219,106,18)" fg:x="288" fg:w="1"/><text x="12.9540%" y="479.50"></text></g><g><title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="12.7040%" y="453" width="0.0441%" height="15" fill="rgb(244,222,10)" fg:x="288" fg:w="1"/><text x="12.9540%" y="463.50"></text></g><g><title>std::_Rb_tree&lt;llvm::VirtRegAuxInfo::weightCalcHelper(llvm::LiveInterval&amp;, llvm::SlotIndex*, llvm::SlotIndex*)::CopyHint, llvm::VirtRegAuxInfo::weightCalcHelper(llvm::LiveInterval&amp;, llvm::SlotIndex*, llvm::SlotIndex*)::CopyHint, std::_Identity&lt;llvm::VirtRegAuxInfo::weightCalcHelper(llvm::LiveInterval&amp;, llvm::SlotIndex*, llvm::SlotIndex*)::CopyHint&gt;, std::less&lt;llvm::VirtRegAuxInfo::weightCalcHelper(llvm::LiveInterval&amp;, llvm::SlotIndex*, llvm::SlotIndex*)::CopyHint&gt;, std::allocator&lt;llvm::VirtRegAuxInfo::weightCalcHelper(llvm::LiveInterval&amp;, llvm::SlotIndex*, llvm::SlotIndex*)::CopyHint&gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="12.7040%" y="437" width="0.0441%" height="15" fill="rgb(236,179,52)" fg:x="288" fg:w="1"/><text x="12.9540%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.04%)</title><rect x="12.7481%" y="485" width="0.0441%" height="15" fill="rgb(213,23,39)" fg:x="289" fg:w="1"/><text x="12.9981%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="12.7922%" y="485" width="0.0441%" height="15" fill="rgb(238,48,10)" fg:x="290" fg:w="1"/><text x="13.0422%" y="495.50"></text></g><g><title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="12.8363%" y="485" width="0.0441%" height="15" fill="rgb(251,196,23)" fg:x="291" fg:w="1"/><text x="13.0863%" y="495.50"></text></g><g><title>LiveDebugValues::InstrRefBasedLDV::ExtendRanges (1 samples, 0.04%)</title><rect x="12.8363%" y="469" width="0.0441%" height="15" fill="rgb(250,152,24)" fg:x="291" fg:w="1"/><text x="13.0863%" y="479.50"></text></g><g><title>LiveDebugValues::InstrRefBasedLDV::transferRegisterDef (1 samples, 0.04%)</title><rect x="12.8363%" y="453" width="0.0441%" height="15" fill="rgb(209,150,17)" fg:x="291" fg:w="1"/><text x="13.0863%" y="463.50"></text></g><g><title>LiveDebugValues::MLocTracker::writeRegMask (1 samples, 0.04%)</title><rect x="12.8363%" y="437" width="0.0441%" height="15" fill="rgb(234,202,34)" fg:x="291" fg:w="1"/><text x="13.0863%" y="447.50"></text></g><g><title>llvm::ModuleToPostOrderCGSCCPassAdaptor::run (2 samples, 0.09%)</title><rect x="12.8805%" y="485" width="0.0882%" height="15" fill="rgb(253,148,53)" fg:x="292" fg:w="2"/><text x="13.1305%" y="495.50"></text></g><g><title>llvm::DevirtSCCRepeatedPass::run (2 samples, 0.09%)</title><rect x="12.8805%" y="469" width="0.0882%" height="15" fill="rgb(218,129,16)" fg:x="292" fg:w="2"/><text x="13.1305%" y="479.50"></text></g><g><title>llvm::PassManager&lt;llvm::LazyCallGraph::SCC, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (2 samples, 0.09%)</title><rect x="12.8805%" y="453" width="0.0882%" height="15" fill="rgb(216,85,19)" fg:x="292" fg:w="2"/><text x="13.1305%" y="463.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::CGSCCToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (2 samples, 0.09%)</title><rect x="12.8805%" y="437" width="0.0882%" height="15" fill="rgb(235,228,7)" fg:x="292" fg:w="2"/><text x="13.1305%" y="447.50"></text></g><g><title>llvm::CGSCCToFunctionPassAdaptor::run (2 samples, 0.09%)</title><rect x="12.8805%" y="421" width="0.0882%" height="15" fill="rgb(245,175,0)" fg:x="292" fg:w="2"/><text x="13.1305%" y="431.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (2 samples, 0.09%)</title><rect x="12.8805%" y="405" width="0.0882%" height="15" fill="rgb(208,168,36)" fg:x="292" fg:w="2"/><text x="13.1305%" y="415.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::GVNPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (2 samples, 0.09%)</title><rect x="12.8805%" y="389" width="0.0882%" height="15" fill="rgb(246,171,24)" fg:x="292" fg:w="2"/><text x="13.1305%" y="399.50"></text></g><g><title>llvm::GVNPass::run (2 samples, 0.09%)</title><rect x="12.8805%" y="373" width="0.0882%" height="15" fill="rgb(215,142,24)" fg:x="292" fg:w="2"/><text x="13.1305%" y="383.50"></text></g><g><title>llvm::GVNPass::runImpl (2 samples, 0.09%)</title><rect x="12.8805%" y="357" width="0.0882%" height="15" fill="rgb(250,187,7)" fg:x="292" fg:w="2"/><text x="13.1305%" y="367.50"></text></g><g><title>llvm::GVNPass::processBlock (2 samples, 0.09%)</title><rect x="12.8805%" y="341" width="0.0882%" height="15" fill="rgb(228,66,33)" fg:x="292" fg:w="2"/><text x="13.1305%" y="351.50"></text></g><g><title>llvm::GVNPass::processNonLocalLoad (2 samples, 0.09%)</title><rect x="12.8805%" y="325" width="0.0882%" height="15" fill="rgb(234,215,21)" fg:x="292" fg:w="2"/><text x="13.1305%" y="335.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (2 samples, 0.09%)</title><rect x="12.8805%" y="309" width="0.0882%" height="15" fill="rgb(222,191,20)" fg:x="292" fg:w="2"/><text x="13.1305%" y="319.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (2 samples, 0.09%)</title><rect x="12.8805%" y="293" width="0.0882%" height="15" fill="rgb(245,79,54)" fg:x="292" fg:w="2"/><text x="13.1305%" y="303.50"></text></g><g><title>llvm::PHITransAddr::PHITranslateSubExpr (1 samples, 0.04%)</title><rect x="12.9246%" y="277" width="0.0441%" height="15" fill="rgb(240,10,37)" fg:x="293" fg:w="1"/><text x="13.1746%" y="287.50"></text></g><g><title>llvm::PHITransAddr::PHITranslateSubExpr (1 samples, 0.04%)</title><rect x="12.9246%" y="261" width="0.0441%" height="15" fill="rgb(214,192,32)" fg:x="293" fg:w="1"/><text x="13.1746%" y="271.50"></text></g><g><title>LiveDebugValues::MLocTracker::MLocTracker (1 samples, 0.04%)</title><rect x="12.9687%" y="421" width="0.0441%" height="15" fill="rgb(209,36,54)" fg:x="294" fg:w="1"/><text x="13.2187%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.44%)</title><rect x="12.6158%" y="501" width="0.4411%" height="15" fill="rgb(220,10,11)" fg:x="286" fg:w="10"/><text x="12.8658%" y="511.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (2 samples, 0.09%)</title><rect x="12.9687%" y="485" width="0.0882%" height="15" fill="rgb(221,106,17)" fg:x="294" fg:w="2"/><text x="13.2187%" y="495.50"></text></g><g><title>llvm::FPPassManager::runOnModule (2 samples, 0.09%)</title><rect x="12.9687%" y="469" width="0.0882%" height="15" fill="rgb(251,142,44)" fg:x="294" fg:w="2"/><text x="13.2187%" y="479.50"></text></g><g><title>llvm::FPPassManager::runOnFunction (2 samples, 0.09%)</title><rect x="12.9687%" y="453" width="0.0882%" height="15" fill="rgb(238,13,15)" fg:x="294" fg:w="2"/><text x="13.2187%" y="463.50"></text></g><g><title>LiveDebugValues::InstrRefBasedLDV::ExtendRanges (2 samples, 0.09%)</title><rect x="12.9687%" y="437" width="0.0882%" height="15" fill="rgb(208,107,27)" fg:x="294" fg:w="2"/><text x="13.2187%" y="447.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="13.0128%" y="421" width="0.0441%" height="15" fill="rgb(205,136,37)" fg:x="295" fg:w="1"/><text x="13.2628%" y="431.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;llvm::APInt const, llvm::SmallVector&lt;llvm::SCEV const*, 4u&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;llvm::APInt const, llvm::SmallVector&lt;llvm::SCEV const*, 4u&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="13.0569%" y="501" width="0.0441%" height="15" fill="rgb(250,205,27)" fg:x="296" fg:w="1"/><text x="13.3069%" y="511.50"></text></g><g><title>llvm::ScalarEvolution::isImpliedCondOperandsHelper (1 samples, 0.04%)</title><rect x="13.0569%" y="485" width="0.0441%" height="15" fill="rgb(210,80,43)" fg:x="296" fg:w="1"/><text x="13.3069%" y="495.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaNonRecursiveReasoning (1 samples, 0.04%)</title><rect x="13.0569%" y="469" width="0.0441%" height="15" fill="rgb(247,160,36)" fg:x="296" fg:w="1"/><text x="13.3069%" y="479.50"></text></g><g><title>llvm::ConstantRange::makeAllowedICmpRegion (1 samples, 0.04%)</title><rect x="13.0569%" y="453" width="0.0441%" height="15" fill="rgb(234,13,49)" fg:x="296" fg:w="1"/><text x="13.3069%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.13%)</title><rect x="13.1010%" y="501" width="0.1323%" height="15" fill="rgb(234,122,0)" fg:x="297" fg:w="3"/><text x="13.3510%" y="511.50"></text></g><g><title>__libc_malloc (5 samples, 0.22%)</title><rect x="13.2333%" y="501" width="0.2206%" height="15" fill="rgb(207,146,38)" fg:x="300" fg:w="5"/><text x="13.4833%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.22%)</title><rect x="13.4539%" y="501" width="0.2206%" height="15" fill="rgb(207,177,25)" fg:x="305" fg:w="5"/><text x="13.7039%" y="511.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.04%)</title><rect x="13.6745%" y="501" width="0.0441%" height="15" fill="rgb(211,178,42)" fg:x="310" fg:w="1"/><text x="13.9245%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.13%)</title><rect x="13.7186%" y="501" width="0.1323%" height="15" fill="rgb(230,69,54)" fg:x="311" fg:w="3"/><text x="13.9686%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitAllocaInst (1 samples, 0.04%)</title><rect x="13.8509%" y="501" width="0.0441%" height="15" fill="rgb(214,135,41)" fg:x="314" fg:w="1"/><text x="14.1009%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitICmpInst (4 samples, 0.18%)</title><rect x="13.8950%" y="501" width="0.1764%" height="15" fill="rgb(237,67,25)" fg:x="315" fg:w="4"/><text x="14.1450%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitLoadInst (1 samples, 0.04%)</title><rect x="14.0715%" y="501" width="0.0441%" height="15" fill="rgb(222,189,50)" fg:x="319" fg:w="1"/><text x="14.3215%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitPHINode (3 samples, 0.13%)</title><rect x="14.1156%" y="501" width="0.1323%" height="15" fill="rgb(245,148,34)" fg:x="320" fg:w="3"/><text x="14.3656%" y="511.50"></text></g><g><title>simplifyICmpInst (1 samples, 0.04%)</title><rect x="14.2038%" y="485" width="0.0441%" height="15" fill="rgb(222,29,6)" fg:x="322" fg:w="1"/><text x="14.4538%" y="495.50"></text></g><g><title>isKnownNonZero (1 samples, 0.04%)</title><rect x="14.2038%" y="469" width="0.0441%" height="15" fill="rgb(221,189,43)" fg:x="322" fg:w="1"/><text x="14.4538%" y="479.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="14.2038%" y="453" width="0.0441%" height="15" fill="rgb(207,36,27)" fg:x="322" fg:w="1"/><text x="14.4538%" y="463.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::pointsToConstantMemory (1 samples, 0.04%)</title><rect x="14.2479%" y="485" width="0.0441%" height="15" fill="rgb(217,90,24)" fg:x="323" fg:w="1"/><text x="14.4979%" y="495.50"></text></g><g><title>llvm::InstCombinerImpl::visitStoreInst (2 samples, 0.09%)</title><rect x="14.2479%" y="501" width="0.0882%" height="15" fill="rgb(224,66,35)" fg:x="323" fg:w="2"/><text x="14.4979%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitAllocSite (1 samples, 0.04%)</title><rect x="14.2920%" y="485" width="0.0441%" height="15" fill="rgb(221,13,50)" fg:x="324" fg:w="1"/><text x="14.5420%" y="495.50"></text></g><g><title>llvm::LiveRangeEdit::anyRematerializable (2 samples, 0.09%)</title><rect x="14.3361%" y="501" width="0.0882%" height="15" fill="rgb(236,68,49)" fg:x="325" fg:w="2"/><text x="14.5861%" y="511.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="14.3802%" y="485" width="0.0441%" height="15" fill="rgb(229,146,28)" fg:x="326" fg:w="1"/><text x="14.6302%" y="495.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="14.3802%" y="469" width="0.0441%" height="15" fill="rgb(225,31,38)" fg:x="326" fg:w="1"/><text x="14.6302%" y="479.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="14.3802%" y="453" width="0.0441%" height="15" fill="rgb(250,208,3)" fg:x="326" fg:w="1"/><text x="14.6302%" y="463.50"></text></g><g><title>llvm::IRBuilderBase::CreateLifetimeStart (1 samples, 0.04%)</title><rect x="14.4243%" y="485" width="0.0441%" height="15" fill="rgb(246,54,23)" fg:x="327" fg:w="1"/><text x="14.6743%" y="495.50"></text></g><g><title>llvm::Intrinsic::getDeclaration (1 samples, 0.04%)</title><rect x="14.4243%" y="469" width="0.0441%" height="15" fill="rgb(243,76,11)" fg:x="327" fg:w="1"/><text x="14.6743%" y="479.50"></text></g><g><title>DecodeIITType (1 samples, 0.04%)</title><rect x="14.4243%" y="453" width="0.0441%" height="15" fill="rgb(245,21,50)" fg:x="327" fg:w="1"/><text x="14.6743%" y="463.50"></text></g><g><title>llvm::SROAPass::rewritePartition (2 samples, 0.09%)</title><rect x="14.4243%" y="501" width="0.0882%" height="15" fill="rgb(228,9,43)" fg:x="327" fg:w="2"/><text x="14.6743%" y="511.50"></text></g><g><title>llvm::sroa::AllocaSliceRewriter::visitStoreInst (1 samples, 0.04%)</title><rect x="14.4685%" y="485" width="0.0441%" height="15" fill="rgb(208,100,47)" fg:x="328" fg:w="1"/><text x="14.7185%" y="495.50"></text></g><g><title>llvm::Instruction::copyMetadata (1 samples, 0.04%)</title><rect x="14.4685%" y="469" width="0.0441%" height="15" fill="rgb(232,26,8)" fg:x="328" fg:w="1"/><text x="14.7185%" y="479.50"></text></g><g><title>std::__stable_sort_adaptive&lt;std::pair&lt;unsigned int, llvm::MDNode*&gt;*, std::pair&lt;unsigned int, llvm::MDNode*&gt;*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::less_first&gt; &gt; (1 samples, 0.04%)</title><rect x="14.4685%" y="453" width="0.0441%" height="15" fill="rgb(216,166,38)" fg:x="328" fg:w="1"/><text x="14.7185%" y="463.50"></text></g><g><title>llvm::ScalarEvolution::isImpliedCondBalancedTypes (1 samples, 0.04%)</title><rect x="14.5126%" y="501" width="0.0441%" height="15" fill="rgb(251,202,51)" fg:x="329" fg:w="1"/><text x="14.7626%" y="511.50"></text></g><g><title>llvm::ScalarEvolution::isKnownPredicateViaSplitting (1 samples, 0.04%)</title><rect x="14.5567%" y="501" width="0.0441%" height="15" fill="rgb(254,216,34)" fg:x="330" fg:w="1"/><text x="14.8067%" y="511.50"></text></g><g><title>llvm::ScalarEvolution::isBasicBlockEntryGuardedByCond (1 samples, 0.04%)</title><rect x="14.5567%" y="485" width="0.0441%" height="15" fill="rgb(251,32,27)" fg:x="330" fg:w="1"/><text x="14.8067%" y="495.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.04%)</title><rect x="14.6008%" y="501" width="0.0441%" height="15" fill="rgb(208,127,28)" fg:x="331" fg:w="1"/><text x="14.8508%" y="511.50"></text></g><g><title>llvm::AAManager::run (2 samples, 0.09%)</title><rect x="14.6449%" y="485" width="0.0882%" height="15" fill="rgb(224,137,22)" fg:x="332" fg:w="2"/><text x="14.8949%" y="495.50"></text></g><g><title>llvm::AAManager::getFunctionAAResultImpl&lt;llvm::BasicAA&gt; (2 samples, 0.09%)</title><rect x="14.6449%" y="469" width="0.0882%" height="15" fill="rgb(254,70,32)" fg:x="332" fg:w="2"/><text x="14.8949%" y="479.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="14.6449%" y="453" width="0.0882%" height="15" fill="rgb(229,75,37)" fg:x="332" fg:w="2"/><text x="14.8949%" y="463.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BasicAA, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="14.6890%" y="437" width="0.0441%" height="15" fill="rgb(252,64,23)" fg:x="333" fg:w="1"/><text x="14.9390%" y="447.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="14.6890%" y="421" width="0.0441%" height="15" fill="rgb(232,162,48)" fg:x="333" fg:w="1"/><text x="14.9390%" y="431.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::AAManager, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="14.6449%" y="501" width="0.1323%" height="15" fill="rgb(246,160,12)" fg:x="332" fg:w="3"/><text x="14.8949%" y="511.50"></text></g><g><title>llvm::AAResults::~AAResults (1 samples, 0.04%)</title><rect x="14.7331%" y="485" width="0.0441%" height="15" fill="rgb(247,166,0)" fg:x="334" fg:w="1"/><text x="14.9831%" y="495.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.04%)</title><rect x="14.7772%" y="501" width="0.0441%" height="15" fill="rgb(249,219,21)" fg:x="335" fg:w="1"/><text x="15.0272%" y="511.50"></text></g><g><title>llvm::AttributeList::get (4 samples, 0.18%)</title><rect x="14.8655%" y="453" width="0.1764%" height="15" fill="rgb(205,209,3)" fg:x="337" fg:w="4"/><text x="15.1155%" y="463.50"></text></g><g><title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="15.0419%" y="453" width="0.0441%" height="15" fill="rgb(243,44,1)" fg:x="341" fg:w="1"/><text x="15.2919%" y="463.50"></text></g><g><title>llvm::Function::Function (1 samples, 0.04%)</title><rect x="15.0860%" y="453" width="0.0441%" height="15" fill="rgb(206,159,16)" fg:x="342" fg:w="1"/><text x="15.3360%" y="463.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseMetadataKinds (1 samples, 0.04%)</title><rect x="15.1301%" y="453" width="0.0441%" height="15" fill="rgb(244,77,30)" fg:x="343" fg:w="1"/><text x="15.3801%" y="463.50"></text></g><g><title>llvm::MetadataLoader::MetadataLoaderImpl::parseMetadataKindRecord (1 samples, 0.04%)</title><rect x="15.1301%" y="437" width="0.0441%" height="15" fill="rgb(218,69,12)" fg:x="343" fg:w="1"/><text x="15.3801%" y="447.50"></text></g><g><title>llvm::BitcodeModule::getModuleImpl (11 samples, 0.49%)</title><rect x="14.8213%" y="469" width="0.4852%" height="15" fill="rgb(212,87,7)" fg:x="336" fg:w="11"/><text x="15.0713%" y="479.50"></text></g><g><title>llvm::UpgradeIntrinsicFunction (3 samples, 0.13%)</title><rect x="15.1742%" y="453" width="0.1323%" height="15" fill="rgb(245,114,25)" fg:x="344" fg:w="3"/><text x="15.4242%" y="463.50"></text></g><g><title>llvm::Regex::match (2 samples, 0.09%)</title><rect x="15.2184%" y="437" width="0.0882%" height="15" fill="rgb(210,61,42)" fg:x="345" fg:w="2"/><text x="15.4684%" y="447.50"></text></g><g><title>llvm_regexec (2 samples, 0.09%)</title><rect x="15.2184%" y="421" width="0.0882%" height="15" fill="rgb(211,52,33)" fg:x="345" fg:w="2"/><text x="15.4684%" y="431.50"></text></g><g><title>std::_Function_handler&lt;llvm::Expected&lt;std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt; &gt; (llvm::StringRef), LLVMRustPrepareThinLTOImport::$_21&gt;::_M_invoke (12 samples, 0.53%)</title><rect x="14.8213%" y="501" width="0.5293%" height="15" fill="rgb(234,58,33)" fg:x="336" fg:w="12"/><text x="15.0713%" y="511.50"></text></g><g><title>llvm::getLazyBitcodeModule (12 samples, 0.53%)</title><rect x="14.8213%" y="485" width="0.5293%" height="15" fill="rgb(220,115,36)" fg:x="336" fg:w="12"/><text x="15.0713%" y="495.50"></text></g><g><title>llvm::getBitcodeFileContents (1 samples, 0.04%)</title><rect x="15.3066%" y="469" width="0.0441%" height="15" fill="rgb(243,153,54)" fg:x="347" fg:w="1"/><text x="15.5566%" y="479.50"></text></g><g><title>readBlobInRecord (1 samples, 0.04%)</title><rect x="15.3066%" y="453" width="0.0441%" height="15" fill="rgb(251,47,18)" fg:x="347" fg:w="1"/><text x="15.5566%" y="463.50"></text></g><g><title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="15.3066%" y="437" width="0.0441%" height="15" fill="rgb(242,102,42)" fg:x="347" fg:w="1"/><text x="15.5566%" y="447.50"></text></g><g><title>llvm::SimpleBitstreamCursor::ReadVBR (1 samples, 0.04%)</title><rect x="15.3066%" y="421" width="0.0441%" height="15" fill="rgb(234,31,38)" fg:x="347" fg:w="1"/><text x="15.5566%" y="431.50"></text></g><g><title>LTO_maze_solver (349 samples, 15.39%)</title><rect x="0.0000%" y="517" width="15.3948%" height="15" fill="rgb(221,117,51)" fg:x="0" fg:w="349"/><text x="0.2500%" y="527.50">LTO_maze_solver</text></g><g><title>std::__copy_move_a2&lt;false, llvm::po_iterator&lt;llvm::BasicBlock const*, llvm::SmallPtrSet&lt;llvm::BasicBlock const*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::BasicBlock const*&gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock const*, std::allocator&lt;llvm::BasicBlock const*&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="15.3507%" y="501" width="0.0441%" height="15" fill="rgb(212,20,18)" fg:x="348" fg:w="1"/><text x="15.6007%" y="511.50"></text></g><g><title>&lt;&amp;mut &lt;cargo::core::compiler::unit_dependencies::State&gt;::deps::{closure#0}::{closure#0} as core::ops::function::FnMut&lt;(&amp;&amp;cargo::core::dependency::Dependency,)&gt;&gt;::call_mut (1 samples, 0.04%)</title><rect x="15.3948%" y="501" width="0.0441%" height="15" fill="rgb(245,133,36)" fg:x="349" fg:w="1"/><text x="15.6448%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="15.4389%" y="501" width="0.0441%" height="15" fill="rgb(212,6,19)" fg:x="350" fg:w="1"/><text x="15.6889%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="15.4389%" y="485" width="0.0441%" height="15" fill="rgb(218,1,36)" fg:x="350" fg:w="1"/><text x="15.6889%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="15.4389%" y="469" width="0.0441%" height="15" fill="rgb(246,84,54)" fg:x="350" fg:w="1"/><text x="15.6889%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="15.4389%" y="453" width="0.0441%" height="15" fill="rgb(242,110,6)" fg:x="350" fg:w="1"/><text x="15.6889%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="15.4389%" y="437" width="0.0441%" height="15" fill="rgb(214,47,5)" fg:x="350" fg:w="1"/><text x="15.6889%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="15.4389%" y="421" width="0.0441%" height="15" fill="rgb(218,159,25)" fg:x="350" fg:w="1"/><text x="15.6889%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="15.4389%" y="405" width="0.0441%" height="15" fill="rgb(215,211,28)" fg:x="350" fg:w="1"/><text x="15.6889%" y="415.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="15.4389%" y="389" width="0.0441%" height="15" fill="rgb(238,59,32)" fg:x="350" fg:w="1"/><text x="15.6889%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="15.5271%" y="437" width="0.1764%" height="15" fill="rgb(226,82,3)" fg:x="352" fg:w="4"/><text x="15.7771%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="15.5271%" y="421" width="0.1764%" height="15" fill="rgb(240,164,32)" fg:x="352" fg:w="4"/><text x="15.7771%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.18%)</title><rect x="15.5271%" y="405" width="0.1764%" height="15" fill="rgb(232,46,7)" fg:x="352" fg:w="4"/><text x="15.7771%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="15.5712%" y="389" width="0.1323%" height="15" fill="rgb(229,129,53)" fg:x="353" fg:w="3"/><text x="15.8212%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="15.6154%" y="373" width="0.0882%" height="15" fill="rgb(234,188,29)" fg:x="354" fg:w="2"/><text x="15.8654%" y="383.50"></text></g><g><title>__libc_read (6 samples, 0.26%)</title><rect x="15.4830%" y="453" width="0.2647%" height="15" fill="rgb(246,141,4)" fg:x="351" fg:w="6"/><text x="15.7330%" y="463.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="15.7036%" y="437" width="0.0441%" height="15" fill="rgb(229,23,39)" fg:x="356" fg:w="1"/><text x="15.9536%" y="447.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (8 samples, 0.35%)</title><rect x="15.4830%" y="501" width="0.3529%" height="15" fill="rgb(206,12,3)" fg:x="351" fg:w="8"/><text x="15.7330%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read (8 samples, 0.35%)</title><rect x="15.4830%" y="485" width="0.3529%" height="15" fill="rgb(252,226,20)" fg:x="351" fg:w="8"/><text x="15.7330%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (8 samples, 0.35%)</title><rect x="15.4830%" y="469" width="0.3529%" height="15" fill="rgb(216,123,35)" fg:x="351" fg:w="8"/><text x="15.7330%" y="479.50"></text></g><g><title>std::sys::unix::cvt (2 samples, 0.09%)</title><rect x="15.7477%" y="453" width="0.0882%" height="15" fill="rgb(212,68,40)" fg:x="357" fg:w="2"/><text x="15.9977%" y="463.50"></text></g><g><title>&lt;(cargo::core::package_id::PackageId, im_rc::ord::map::OrdMap&lt;cargo::core::package_id::PackageId, im_rc::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;&gt;) as im_rc::nodes::btree::BTreeValue&gt;::search_key::&lt;cargo::core::package_id::PackageId&gt; (2 samples, 0.09%)</title><rect x="15.8359%" y="501" width="0.0882%" height="15" fill="rgb(254,125,32)" fg:x="359" fg:w="2"/><text x="16.0859%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="15.8800%" y="485" width="0.0441%" height="15" fill="rgb(253,97,22)" fg:x="360" fg:w="1"/><text x="16.1300%" y="495.50"></text></g><g><title>&lt;&lt;cargo::util::toml::IntermediateDependency&lt;_&gt; as serde::de::Deserialize&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str::&lt;toml_edit::de::Error&gt; (1 samples, 0.04%)</title><rect x="15.9241%" y="501" width="0.0441%" height="15" fill="rgb(241,101,14)" fg:x="361" fg:w="1"/><text x="16.1741%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;cargo::util::interning::InternedString, alloc::collections::btree::set_val::SetValZST&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="15.9682%" y="501" width="0.0441%" height="15" fill="rgb(238,103,29)" fg:x="362" fg:w="1"/><text x="16.2182%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="15.9682%" y="485" width="0.0441%" height="15" fill="rgb(233,195,47)" fg:x="362" fg:w="1"/><text x="16.2182%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::util::interning::InternedString&gt;&gt;&gt;::insert (1 samples, 0.04%)</title><rect x="16.0124%" y="501" width="0.0441%" height="15" fill="rgb(246,218,30)" fg:x="363" fg:w="1"/><text x="16.2624%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::entry::VacantEntry&lt;alloc::string::String, cargo::util::toml::TomlDependency&gt;&gt;::insert (1 samples, 0.04%)</title><rect x="16.0565%" y="501" width="0.0441%" height="15" fill="rgb(219,145,47)" fg:x="364" fg:w="1"/><text x="16.3065%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="16.0565%" y="485" width="0.0441%" height="15" fill="rgb(243,12,26)" fg:x="364" fg:w="1"/><text x="16.3065%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="16.0565%" y="469" width="0.0441%" height="15" fill="rgb(214,87,16)" fg:x="364" fg:w="1"/><text x="16.3065%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.0565%" y="453" width="0.0441%" height="15" fill="rgb(208,99,42)" fg:x="364" fg:w="1"/><text x="16.3065%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="16.0565%" y="437" width="0.0441%" height="15" fill="rgb(253,99,2)" fg:x="364" fg:w="1"/><text x="16.3065%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned, cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt;, alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push::&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt;, alloc::vec::into_iter::IntoIter&lt;(cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt;)&gt;&gt;, alloc::alloc::Global&gt; (2 samples, 0.09%)</title><rect x="16.1006%" y="501" width="0.0882%" height="15" fill="rgb(220,168,23)" fg:x="365" fg:w="2"/><text x="16.3506%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;_, _&gt;&gt;::reserve::do_reserve_and_handle::&lt;u8, alloc::alloc::Global&gt; (1 samples, 0.04%)</title><rect x="16.1888%" y="501" width="0.0441%" height="15" fill="rgb(242,38,24)" fg:x="367" fg:w="1"/><text x="16.4388%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;cargo::sources::registry::RegistryDependency&gt;&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="16.2329%" y="501" width="0.0441%" height="15" fill="rgb(225,182,9)" fg:x="368" fg:w="1"/><text x="16.4829%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="16.2770%" y="501" width="0.0882%" height="15" fill="rgb(243,178,37)" fg:x="369" fg:w="2"/><text x="16.5270%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="16.2770%" y="485" width="0.0882%" height="15" fill="rgb(232,139,19)" fg:x="369" fg:w="2"/><text x="16.5270%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.09%)</title><rect x="16.2770%" y="469" width="0.0882%" height="15" fill="rgb(225,201,24)" fg:x="369" fg:w="2"/><text x="16.5270%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.09%)</title><rect x="16.2770%" y="453" width="0.0882%" height="15" fill="rgb(221,47,46)" fg:x="369" fg:w="2"/><text x="16.5270%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.09%)</title><rect x="16.2770%" y="437" width="0.0882%" height="15" fill="rgb(249,23,13)" fg:x="369" fg:w="2"/><text x="16.5270%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="16.2770%" y="421" width="0.0882%" height="15" fill="rgb(219,9,5)" fg:x="369" fg:w="2"/><text x="16.5270%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.09%)</title><rect x="16.2770%" y="405" width="0.0882%" height="15" fill="rgb(254,171,16)" fg:x="369" fg:w="2"/><text x="16.5270%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.09%)</title><rect x="16.2770%" y="389" width="0.0882%" height="15" fill="rgb(230,171,20)" fg:x="369" fg:w="2"/><text x="16.5270%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.09%)</title><rect x="16.2770%" y="373" width="0.0882%" height="15" fill="rgb(210,71,41)" fg:x="369" fg:w="2"/><text x="16.5270%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.09%)</title><rect x="16.2770%" y="357" width="0.0882%" height="15" fill="rgb(206,173,20)" fg:x="369" fg:w="2"/><text x="16.5270%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.09%)</title><rect x="16.2770%" y="341" width="0.0882%" height="15" fill="rgb(233,88,34)" fg:x="369" fg:w="2"/><text x="16.5270%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.09%)</title><rect x="16.2770%" y="325" width="0.0882%" height="15" fill="rgb(223,209,46)" fg:x="369" fg:w="2"/><text x="16.5270%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="16.3211%" y="309" width="0.0441%" height="15" fill="rgb(250,43,18)" fg:x="370" fg:w="1"/><text x="16.5711%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(&amp;cargo::core::package::Package, &amp;std::collections::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(&amp;cargo::core::package::Package, &amp;std::collections::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;), core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::package_id::PackageId, &amp;std::collections::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;)&gt;, &lt;cargo::core::package::PackageSet&gt;::warn_no_lib_packages_and_artifact_libs_overlapping_deps::{closure#0}::{closure#0}&gt;, &lt;cargo::core::package::PackageSet&gt;::warn_no_lib_packages_and_artifact_libs_overlapping_deps::{closure#0}::{closure#1}&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="16.3652%" y="501" width="0.0441%" height="15" fill="rgb(208,13,10)" fg:x="371" fg:w="1"/><text x="16.6152%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt;)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt;), core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Iter&lt;cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::util::interning::InternedString&gt;&gt;, cargo::core::summary::build_feature_map::{closure#0}&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="16.4094%" y="501" width="0.0441%" height="15" fill="rgb(212,200,36)" fg:x="372" fg:w="1"/><text x="16.6594%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;cargo::core::summary::FeatureValue, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;cargo::util::interning::InternedString&gt;, cargo::core::summary::build_feature_map::{closure#0}::{closure#0}&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="16.4535%" y="501" width="0.0441%" height="15" fill="rgb(225,90,30)" fg:x="373" fg:w="1"/><text x="16.7035%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="16.4535%" y="485" width="0.0441%" height="15" fill="rgb(236,182,39)" fg:x="373" fg:w="1"/><text x="16.7035%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="16.4535%" y="469" width="0.0441%" height="15" fill="rgb(212,144,35)" fg:x="373" fg:w="1"/><text x="16.7035%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;cargo::util::interning::InternedString&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;cargo::util::interning::InternedString, core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::set::Iter&lt;cargo::util::interning::InternedString&gt;&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="16.4976%" y="501" width="0.0441%" height="15" fill="rgb(228,63,44)" fg:x="374" fg:w="1"/><text x="16.7476%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;toml_edit::easy::value::Value&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="16.5417%" y="501" width="0.0441%" height="15" fill="rgb(228,109,6)" fg:x="375" fg:w="1"/><text x="16.7917%" y="511.50"></text></g><g><title>&lt;cargo::core::compiler::build_context::target_info::TargetInfo&gt;::rustc_outputs (1 samples, 0.04%)</title><rect x="16.5858%" y="501" width="0.0441%" height="15" fill="rgb(238,117,24)" fg:x="376" fg:w="1"/><text x="16.8358%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="16.5858%" y="485" width="0.0441%" height="15" fill="rgb(242,26,26)" fg:x="376" fg:w="1"/><text x="16.8358%" y="495.50"></text></g><g><title>&lt;cargo::core::compiler::job_queue::JobQueue&gt;::execute::{closure#0} (8 samples, 0.35%)</title><rect x="16.6299%" y="501" width="0.3529%" height="15" fill="rgb(221,92,48)" fg:x="377" fg:w="8"/><text x="16.8799%" y="511.50"></text></g><g><title>syscall (2 samples, 0.09%)</title><rect x="16.8946%" y="485" width="0.0882%" height="15" fill="rgb(209,209,32)" fg:x="383" fg:w="2"/><text x="17.1446%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="16.8946%" y="469" width="0.0882%" height="15" fill="rgb(221,70,22)" fg:x="383" fg:w="2"/><text x="17.1446%" y="479.50"></text></g><g><title>&lt;cargo::core::dependency::Dependency&gt;::parse::&lt;cargo::util::interning::InternedString&gt; (1 samples, 0.04%)</title><rect x="16.9828%" y="501" width="0.0441%" height="15" fill="rgb(248,145,5)" fg:x="385" fg:w="1"/><text x="17.2328%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="16.9828%" y="485" width="0.0441%" height="15" fill="rgb(226,116,26)" fg:x="385" fg:w="1"/><text x="17.2328%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="16.9828%" y="469" width="0.0441%" height="15" fill="rgb(244,5,17)" fg:x="385" fg:w="1"/><text x="17.2328%" y="479.50"></text></g><g><title>&lt;cargo::core::manifest::Target&gt;::bench_target (1 samples, 0.04%)</title><rect x="17.0269%" y="501" width="0.0441%" height="15" fill="rgb(252,159,33)" fg:x="386" fg:w="1"/><text x="17.2769%" y="511.50"></text></g><g><title>&lt;cargo::core::package::Package as core::cmp::Ord&gt;::cmp (1 samples, 0.04%)</title><rect x="17.0710%" y="501" width="0.0441%" height="15" fill="rgb(206,71,0)" fg:x="387" fg:w="1"/><text x="17.3210%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="17.0710%" y="485" width="0.0441%" height="15" fill="rgb(233,118,54)" fg:x="387" fg:w="1"/><text x="17.3210%" y="495.50"></text></g><g><title>&lt;cargo::core::package::Package&gt;::new (1 samples, 0.04%)</title><rect x="17.1151%" y="501" width="0.0441%" height="15" fill="rgb(234,83,48)" fg:x="388" fg:w="1"/><text x="17.3651%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="17.1151%" y="485" width="0.0441%" height="15" fill="rgb(228,3,54)" fg:x="388" fg:w="1"/><text x="17.3651%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="17.1151%" y="469" width="0.0441%" height="15" fill="rgb(226,155,13)" fg:x="388" fg:w="1"/><text x="17.3651%" y="479.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query::{closure#2} (1 samples, 0.04%)</title><rect x="17.1592%" y="501" width="0.0441%" height="15" fill="rgb(241,28,37)" fg:x="389" fg:w="1"/><text x="17.4092%" y="511.50"></text></g><g><title>&lt;cargo::core::resolver::RemainingCandidates&gt;::next (1 samples, 0.04%)</title><rect x="17.2034%" y="501" width="0.0441%" height="15" fill="rgb(233,93,10)" fg:x="390" fg:w="1"/><text x="17.4534%" y="511.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps (2 samples, 0.09%)</title><rect x="17.2475%" y="501" width="0.0882%" height="15" fill="rgb(225,113,19)" fg:x="391" fg:w="2"/><text x="17.4975%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="17.2916%" y="485" width="0.0441%" height="15" fill="rgb(241,2,18)" fg:x="392" fg:w="1"/><text x="17.5416%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="17.2916%" y="469" width="0.0441%" height="15" fill="rgb(228,207,21)" fg:x="392" fg:w="1"/><text x="17.5416%" y="479.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::Requirements&gt;::require_value (1 samples, 0.04%)</title><rect x="17.3357%" y="501" width="0.0441%" height="15" fill="rgb(213,211,35)" fg:x="393" fg:w="1"/><text x="17.5857%" y="511.50"></text></g><g><title>&lt;cargo::core::resolver::encode::EncodablePackageId as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="17.3798%" y="501" width="0.0441%" height="15" fill="rgb(209,83,10)" fg:x="394" fg:w="1"/><text x="17.6298%" y="511.50"></text></g><g><title>&lt;cargo::core::resolver::resolve::Resolve&gt;::summary (1 samples, 0.04%)</title><rect x="17.4239%" y="501" width="0.0441%" height="15" fill="rgb(209,164,1)" fg:x="395" fg:w="1"/><text x="17.6739%" y="511.50"></text></g><g><title>&lt;cargo::core::resolver::types::RemainingDeps&gt;::pop_most_constrained (1 samples, 0.04%)</title><rect x="17.4680%" y="501" width="0.0441%" height="15" fill="rgb(213,184,43)" fg:x="396" fg:w="1"/><text x="17.7180%" y="511.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceId&gt;::is_crates_io (1 samples, 0.04%)</title><rect x="17.5121%" y="501" width="0.0441%" height="15" fill="rgb(231,61,34)" fg:x="397" fg:w="1"/><text x="17.7621%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="17.5121%" y="485" width="0.0441%" height="15" fill="rgb(235,75,3)" fg:x="397" fg:w="1"/><text x="17.7621%" y="495.50"></text></g><g><title>&lt;cargo::core::source::source_id::SourceId&gt;::wrap (1 samples, 0.04%)</title><rect x="17.5562%" y="501" width="0.0441%" height="15" fill="rgb(220,106,47)" fg:x="398" fg:w="1"/><text x="17.8062%" y="511.50"></text></g><g><title>&lt;cargo::util::hasher::StableHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="17.6004%" y="501" width="0.0441%" height="15" fill="rgb(210,196,33)" fg:x="399" fg:w="1"/><text x="17.8504%" y="511.50"></text></g><g><title>&lt;cargo::util::interning::InternedString&gt;::new (1 samples, 0.04%)</title><rect x="17.6445%" y="501" width="0.0441%" height="15" fill="rgb(229,154,42)" fg:x="400" fg:w="1"/><text x="17.8945%" y="511.50"></text></g><g><title>&lt;cargo::util::queue::Queue&lt;cargo::core::compiler::job_queue::Message&gt;&gt;::pop (1 samples, 0.04%)</title><rect x="17.6886%" y="501" width="0.0441%" height="15" fill="rgb(228,114,26)" fg:x="401" fg:w="1"/><text x="17.9386%" y="511.50"></text></g><g><title>syscall (1 samples, 0.04%)</title><rect x="17.6886%" y="485" width="0.0441%" height="15" fill="rgb(208,144,1)" fg:x="401" fg:w="1"/><text x="17.9386%" y="495.50"></text></g><g><title>&lt;cargo::util::queue::Queue&lt;cargo::core::compiler::job_queue::Message&gt;&gt;::push (5 samples, 0.22%)</title><rect x="17.7327%" y="501" width="0.2206%" height="15" fill="rgb(239,112,37)" fg:x="402" fg:w="5"/><text x="17.9827%" y="511.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.18%)</title><rect x="17.7768%" y="485" width="0.1764%" height="15" fill="rgb(210,96,50)" fg:x="403" fg:w="4"/><text x="18.0268%" y="495.50"></text></g><g><title>&lt;cargo_platform::cfg::CfgExpr&gt;::matches (1 samples, 0.04%)</title><rect x="17.9532%" y="501" width="0.0441%" height="15" fill="rgb(222,178,2)" fg:x="407" fg:w="1"/><text x="18.2032%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="17.9532%" y="485" width="0.0441%" height="15" fill="rgb(226,74,18)" fg:x="407" fg:w="1"/><text x="18.2032%" y="495.50"></text></g><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;, combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="17.9974%" y="501" width="0.0882%" height="15" fill="rgb(225,67,54)" fg:x="408" fg:w="2"/><text x="18.2474%" y="511.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;(combine::parser::choice::Optional&lt;combine::parser::combinator::Map&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::repeat::SepEndBy1&lt;toml_edit::array::Array, toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;), &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 0.04%)</title><rect x="18.0856%" y="501" width="0.0441%" height="15" fill="rgb(251,92,32)" fg:x="410" fg:w="1"/><text x="18.3356%" y="511.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;(toml_edit::parser::key::key&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, (toml_edit::parser::trivia::ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::trivia::line_trailing&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;)), &lt;toml_edit::parser::document::parse_keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 0.04%)</title><rect x="18.1297%" y="501" width="0.0441%" height="15" fill="rgb(228,149,22)" fg:x="411" fg:w="1"/><text x="18.3797%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="18.1297%" y="485" width="0.0441%" height="15" fill="rgb(243,54,13)" fg:x="411" fg:w="1"/><text x="18.3797%" y="495.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;combine::parser::combinator::Try&lt;(toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;)&gt;, &lt;toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 0.04%)</title><rect x="18.1738%" y="501" width="0.0441%" height="15" fill="rgb(243,180,28)" fg:x="412" fg:w="1"/><text x="18.4238%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="18.1738%" y="485" width="0.0441%" height="15" fill="rgb(208,167,24)" fg:x="412" fg:w="1"/><text x="18.4238%" y="495.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 0.04%)</title><rect x="18.2179%" y="501" width="0.0441%" height="15" fill="rgb(245,73,45)" fg:x="413" fg:w="1"/><text x="18.4679%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="18.2179%" y="485" width="0.0441%" height="15" fill="rgb(237,203,48)" fg:x="413" fg:w="1"/><text x="18.4679%" y="495.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;combine::parser::range::TakeWhile1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, toml_edit::parser::strings::is_basic_unescaped&gt;, core::str::converts::from_utf8&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 0.04%)</title><rect x="18.2620%" y="501" width="0.0441%" height="15" fill="rgb(211,197,16)" fg:x="414" fg:w="1"/><text x="18.5120%" y="511.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;toml_edit::parser::trivia::line_trailing&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, core::str::converts::from_utf8&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 0.04%)</title><rect x="18.3061%" y="501" width="0.0441%" height="15" fill="rgb(243,99,51)" fg:x="415" fg:w="1"/><text x="18.5561%" y="511.50"></text></g><g><title>&lt;combine::parser::repeat::Sink as core::iter::traits::collect::Extend&lt;()&gt;&gt;::extend::&lt;&amp;mut combine::parser::repeat::Iter&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, &amp;mut combine::parser::combinator::Ignore&lt;&amp;mut combine::parser::choice::Choice&lt;(combine::parser::repeat::SkipMany1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, combine::parser::choice::Choice&lt;(combine::parser::range::TakeWhile1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, toml_edit::parser::trivia::is_wschar&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::trivia::newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;)&gt;&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::trivia::comment&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt;)&gt;&gt;, &amp;mut combine::parser::choice::Y&lt;(bool, bool, combine::parser::repeat::Sink, combine::parser::choice::Y&lt;usize, ()&gt;), ()&gt;, combine::parser::FirstMode&gt;&gt; (1 samples, 0.04%)</title><rect x="18.3502%" y="501" width="0.0441%" height="15" fill="rgb(215,123,29)" fg:x="416" fg:w="1"/><text x="18.6002%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="18.3944%" y="501" width="0.0882%" height="15" fill="rgb(239,186,37)" fg:x="417" fg:w="2"/><text x="18.6444%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter_map::FilterMap&lt;std::collections::hash::map::IterMut&lt;semver::Version, cargo::sources::registry::index::MaybeIndexSummary&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::summaries::{closure#0}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::summaries::{closure#1}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::summaries::{closure#2}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#0}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#1}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#2}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;(), core::iter::traits::iterator::Iterator::find::check&lt;cargo::core::summary::Summary, &amp;mut &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#3}&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;cargo::core::summary::Summary&gt;&gt; (1 samples, 0.04%)</title><rect x="18.4826%" y="501" width="0.0441%" height="15" fill="rgb(252,136,39)" fg:x="419" fg:w="1"/><text x="18.7326%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;std::collections::hash::map::Iter&lt;cargo::core::compiler::unit::Unit, (std::collections::hash::set::HashSet&lt;(cargo::core::compiler::unit::Unit, cargo::core::compiler::job_queue::Artifact)&gt;, cargo::core::compiler::job::Job)&gt;, &lt;cargo::util::dependency_queue::DependencyQueue&lt;cargo::core::compiler::unit::Unit, cargo::core::compiler::job_queue::Artifact, cargo::core::compiler::job::Job&gt;&gt;::dequeue::{closure#0}&gt;, &lt;cargo::util::dependency_queue::DependencyQueue&lt;cargo::core::compiler::unit::Unit, cargo::core::compiler::job_queue::Artifact, cargo::core::compiler::job::Job&gt;&gt;::dequeue::{closure#1}&gt;, core::iter::traits::iterator::Iterator::max_by_key::key&lt;(cargo::core::compiler::unit::Unit, usize), usize, &lt;cargo::util::dependency_queue::DependencyQueue&lt;cargo::core::compiler::unit::Unit, cargo::core::compiler::job_queue::Artifact, cargo::core::compiler::job::Job&gt;&gt;::dequeue::{closure#2}&gt;::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(usize, (cargo::core::compiler::unit::Unit, usize)), core::iter::traits::iterator::Iterator::max_by::fold&lt;(usize, (cargo::core::compiler::unit::Unit, usize)), core::iter::traits::iterator::Iterator::max_by_key::compare&lt;(cargo::core::compiler::unit::Unit, usize), usize&gt;&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="18.5267%" y="501" width="0.0441%" height="15" fill="rgb(223,213,32)" fg:x="420" fg:w="1"/><text x="18.7767%" y="511.50"></text></g><g><title>&lt;git2::oid::Oid as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="18.5708%" y="501" width="0.0441%" height="15" fill="rgb(233,115,5)" fg:x="421" fg:w="1"/><text x="18.8208%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;(cargo::core::compiler::unit::Unit, cargo::core::compiler::job_queue::Artifact), (), std::collections::hash::map::RandomState&gt;&gt;::remove::&lt;(cargo::core::compiler::unit::Unit, cargo::core::compiler::job_queue::Artifact)&gt; (1 samples, 0.04%)</title><rect x="18.6149%" y="501" width="0.0441%" height="15" fill="rgb(207,226,44)" fg:x="422" fg:w="1"/><text x="18.8649%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;cargo::core::package_id::PackageId, (), std::collections::hash::map::RandomState&gt;&gt;::insert (1 samples, 0.04%)</title><rect x="18.6590%" y="501" width="0.0441%" height="15" fill="rgb(208,126,0)" fg:x="423" fg:w="1"/><text x="18.9090%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;cargo::util::interning::InternedString, cargo::sources::registry::index::Summaries, std::collections::hash::map::RandomState&gt;&gt;::insert (1 samples, 0.04%)</title><rect x="18.7031%" y="501" width="0.0441%" height="15" fill="rgb(244,66,21)" fg:x="424" fg:w="1"/><text x="18.9531%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;((cargo::core::package_id::PackageId, cargo::core::compiler::context::compilation_files::Metadata), ())&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;(cargo::core::package_id::PackageId, cargo::core::compiler::context::compilation_files::Metadata), (cargo::core::package_id::PackageId, cargo::core::compiler::context::compilation_files::Metadata), (), std::collections::hash::map::RandomState&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="18.7472%" y="501" width="0.0441%" height="15" fill="rgb(222,97,12)" fg:x="425" fg:w="1"/><text x="18.9972%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="18.7472%" y="485" width="0.0441%" height="15" fill="rgb(219,213,19)" fg:x="425" fg:w="1"/><text x="18.9972%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="18.7472%" y="469" width="0.0441%" height="15" fill="rgb(252,169,30)" fg:x="425" fg:w="1"/><text x="18.9972%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(cargo::util::interning::InternedString, alloc::vec::Vec&lt;&amp;cargo::core::dependency::Dependency&gt;)&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="18.7914%" y="501" width="0.0441%" height="15" fill="rgb(206,32,51)" fg:x="426" fg:w="1"/><text x="19.0414%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(semver::Version, cargo::sources::registry::index::MaybeIndexSummary)&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;semver::Version, semver::Version, cargo::sources::registry::index::MaybeIndexSummary, std::collections::hash::map::RandomState&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="18.8355%" y="501" width="0.0441%" height="15" fill="rgb(250,172,42)" fg:x="427" fg:w="1"/><text x="19.0855%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="18.8355%" y="485" width="0.0441%" height="15" fill="rgb(209,34,43)" fg:x="427" fg:w="1"/><text x="19.0855%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="18.8355%" y="469" width="0.0441%" height="15" fill="rgb(223,11,35)" fg:x="427" fg:w="1"/><text x="19.0855%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="18.8355%" y="453" width="0.0441%" height="15" fill="rgb(251,219,26)" fg:x="427" fg:w="1"/><text x="19.0855%" y="463.50"></text></g><g><title>__default_morecore (1 samples, 0.04%)</title><rect x="18.8355%" y="437" width="0.0441%" height="15" fill="rgb(231,119,3)" fg:x="427" fg:w="1"/><text x="19.0855%" y="447.50"></text></g><g><title>__sbrk (1 samples, 0.04%)</title><rect x="18.8355%" y="421" width="0.0441%" height="15" fill="rgb(216,97,11)" fg:x="427" fg:w="1"/><text x="19.0855%" y="431.50"></text></g><g><title>brk (1 samples, 0.04%)</title><rect x="18.8355%" y="405" width="0.0441%" height="15" fill="rgb(223,59,9)" fg:x="427" fg:w="1"/><text x="19.0855%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="18.8355%" y="389" width="0.0441%" height="15" fill="rgb(233,93,31)" fg:x="427" fg:w="1"/><text x="19.0855%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="18.8355%" y="373" width="0.0441%" height="15" fill="rgb(239,81,33)" fg:x="427" fg:w="1"/><text x="19.0855%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="18.8355%" y="357" width="0.0441%" height="15" fill="rgb(213,120,34)" fg:x="427" fg:w="1"/><text x="19.0855%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="18.8355%" y="341" width="0.0441%" height="15" fill="rgb(243,49,53)" fg:x="427" fg:w="1"/><text x="19.0855%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="18.8355%" y="325" width="0.0441%" height="15" fill="rgb(247,216,33)" fg:x="427" fg:w="1"/><text x="19.0855%" y="335.50"></text></g><g><title>&lt;im_rc::nodes::btree::Node&lt;(cargo::core::package_id::PackageId, std::collections::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;)&gt;&gt;::path_last::&lt;cargo::core::package_id::PackageId&gt; (1 samples, 0.04%)</title><rect x="18.8796%" y="501" width="0.0441%" height="15" fill="rgb(226,26,14)" fg:x="428" fg:w="1"/><text x="19.1296%" y="511.50"></text></g><g><title>&lt;im_rc::ord::map::Entry&lt;cargo::core::package_id::PackageId, im_rc::ord::map::OrdMap&lt;cargo::core::package_id::PackageId, im_rc::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;&gt;&gt;&gt;::or_insert_with::&lt;&lt;im_rc::ord::map::OrdMap&lt;cargo::core::package_id::PackageId, im_rc::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;&gt;&gt;::new&gt; (1 samples, 0.04%)</title><rect x="18.9237%" y="501" width="0.0441%" height="15" fill="rgb(215,49,53)" fg:x="429" fg:w="1"/><text x="19.1737%" y="511.50"></text></g><g><title>&lt;im_rc::ord::map::Entry&lt;cargo::core::package_id::PackageId, im_rc::ord::map::OrdMap&lt;cargo::core::package_id::PackageId, std::collections::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;&gt;&gt;&gt;::or_insert_with::&lt;&lt;im_rc::ord::map::OrdMap&lt;cargo::core::package_id::PackageId, std::collections::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;&gt;&gt;::new&gt; (1 samples, 0.04%)</title><rect x="18.9678%" y="501" width="0.0441%" height="15" fill="rgb(245,162,40)" fg:x="430" fg:w="1"/><text x="19.2178%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="18.9678%" y="485" width="0.0441%" height="15" fill="rgb(229,68,17)" fg:x="430" fg:w="1"/><text x="19.2178%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="18.9678%" y="469" width="0.0441%" height="15" fill="rgb(213,182,10)" fg:x="430" fg:w="1"/><text x="19.2178%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="18.9678%" y="453" width="0.0441%" height="15" fill="rgb(245,125,30)" fg:x="430" fg:w="1"/><text x="19.2178%" y="463.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;toml_edit::internal_string::InternalString, toml_edit::table::TableKeyValue&gt;&gt;::entry (1 samples, 0.04%)</title><rect x="19.0119%" y="501" width="0.0441%" height="15" fill="rgb(232,202,2)" fg:x="431" fg:w="1"/><text x="19.2619%" y="511.50"></text></g><g><title>&lt;jobserver::HelperState&gt;::for_each_request::&lt;jobserver::imp::spawn_helper::{closure#1}::{closure#0}&gt; (3 samples, 0.13%)</title><rect x="19.0560%" y="501" width="0.1323%" height="15" fill="rgb(237,140,51)" fg:x="432" fg:w="3"/><text x="19.3060%" y="511.50"></text></g><g><title>&lt;jobserver::imp::Client&gt;::acquire_allow_interrupts (3 samples, 0.13%)</title><rect x="19.1884%" y="501" width="0.1323%" height="15" fill="rgb(236,157,25)" fg:x="435" fg:w="3"/><text x="19.4384%" y="511.50"></text></g><g><title>&lt;semver::Version as core::hash::Hash&gt;::hash::&lt;std::collections::hash::map::DefaultHasher&gt; (1 samples, 0.04%)</title><rect x="19.3207%" y="501" width="0.0441%" height="15" fill="rgb(219,209,0)" fg:x="438" fg:w="1"/><text x="19.5707%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;toml_edit::de::Error&gt; as serde::de::Deserializer&gt;::deserialize_string::&lt;serde::de::impls::StringVisitor&gt; (1 samples, 0.04%)</title><rect x="19.3648%" y="501" width="0.0441%" height="15" fill="rgb(240,116,54)" fg:x="439" fg:w="1"/><text x="19.6148%" y="511.50"></text></g><g><title>&lt;serde_ignored::MapAccess&lt;toml_edit::de::inline_table::InlineTableMapAccess, cargo::util::toml::read_manifest_from_str::{closure#1}&gt; as serde::de::MapAccess&gt;::next_key_seed::&lt;core::marker::PhantomData&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="19.4089%" y="501" width="0.0441%" height="15" fill="rgb(216,10,36)" fg:x="440" fg:w="1"/><text x="19.6589%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="19.4089%" y="485" width="0.0441%" height="15" fill="rgb(222,72,44)" fg:x="440" fg:w="1"/><text x="19.6589%" y="495.50"></text></g><g><title>&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;&gt;::end_map (1 samples, 0.04%)</title><rect x="19.4530%" y="501" width="0.0441%" height="15" fill="rgb(232,159,9)" fg:x="441" fg:w="1"/><text x="19.7030%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::hash_one::&lt;&amp;(cargo::core::source::source_id::SourceId, cargo::util::interning::InternedString)&gt; (1 samples, 0.04%)</title><rect x="19.4971%" y="501" width="0.0441%" height="15" fill="rgb(210,39,32)" fg:x="442" fg:w="1"/><text x="19.7471%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::hash_one::&lt;&amp;cargo::core::compiler::job_queue::Artifact&gt; (1 samples, 0.04%)</title><rect x="19.5412%" y="501" width="0.0441%" height="15" fill="rgb(216,194,45)" fg:x="443" fg:w="1"/><text x="19.7912%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::hash_one::&lt;&amp;str&gt; (1 samples, 0.04%)</title><rect x="19.5854%" y="501" width="0.0441%" height="15" fill="rgb(218,18,35)" fg:x="444" fg:w="1"/><text x="19.8354%" y="511.50"></text></g><g><title>&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="19.6295%" y="501" width="0.0441%" height="15" fill="rgb(207,83,51)" fg:x="445" fg:w="1"/><text x="19.8795%" y="511.50"></text></g><g><title>&lt;std::path::PathBuf as core::hash::Hash&gt;::hash::&lt;cargo::util::hasher::StableHasher&gt; (1 samples, 0.04%)</title><rect x="19.6736%" y="501" width="0.0441%" height="15" fill="rgb(225,63,43)" fg:x="446" fg:w="1"/><text x="19.9236%" y="511.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.7177%" y="501" width="0.0441%" height="15" fill="rgb(207,57,36)" fg:x="447" fg:w="1"/><text x="19.9677%" y="511.50"></text></g><g><title>&lt;toml_edit::de::inline_table::InlineTableMapAccess&gt;::new (1 samples, 0.04%)</title><rect x="19.7618%" y="501" width="0.0441%" height="15" fill="rgb(216,99,33)" fg:x="448" fg:w="1"/><text x="20.0118%" y="511.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="19.7618%" y="485" width="0.0441%" height="15" fill="rgb(225,42,16)" fg:x="448" fg:w="1"/><text x="20.0118%" y="495.50"></text></g><g><title>&lt;toml_edit::item::Item as serde::de::Deserializer&gt;::deserialize_any::&lt;serde_ignored::Wrap&lt;&lt;alloc::collections::btree::map::BTreeMap&lt;_, _&gt; as serde::de::Deserialize&gt;::deserialize::MapVisitor&lt;alloc::string::String, cargo::util::toml::TomlDependency&gt;, cargo::util::toml::read_manifest_from_str::{closure#1}&gt;&gt; (1 samples, 0.04%)</title><rect x="19.8059%" y="501" width="0.0441%" height="15" fill="rgb(220,201,45)" fg:x="449" fg:w="1"/><text x="20.0559%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="19.8059%" y="485" width="0.0441%" height="15" fill="rgb(225,33,4)" fg:x="449" fg:w="1"/><text x="20.0559%" y="495.50"></text></g><g><title>&lt;toml_edit::item::Item as serde::de::Deserializer&gt;::deserialize_any::&lt;serde_ignored::Wrap&lt;&lt;toml_edit::easy::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor, cargo::util::toml::read_manifest_from_str::{closure#1}&gt;&gt; (1 samples, 0.04%)</title><rect x="19.8500%" y="501" width="0.0441%" height="15" fill="rgb(224,33,50)" fg:x="450" fg:w="1"/><text x="20.1000%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="19.8500%" y="485" width="0.0441%" height="15" fill="rgb(246,198,51)" fg:x="450" fg:w="1"/><text x="20.1000%" y="495.50"></text></g><g><title>&lt;toml_edit::parser::trivia::comment&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (2 samples, 0.09%)</title><rect x="19.8941%" y="501" width="0.0882%" height="15" fill="rgb(205,22,4)" fg:x="451" fg:w="2"/><text x="20.1441%" y="511.50"></text></g><g><title>&lt;toml_edit::repr::Decor&gt;::new::&lt;&amp;str, &amp;str&gt; (1 samples, 0.04%)</title><rect x="19.9824%" y="501" width="0.0441%" height="15" fill="rgb(206,3,8)" fg:x="453" fg:w="1"/><text x="20.2324%" y="511.50"></text></g><g><title>&lt;toml_edit::ser::table::SerializeItemTable as serde::ser::SerializeMap&gt;::serialize_value::&lt;toml_edit::easy::value::Value&gt; (1 samples, 0.04%)</title><rect x="20.0265%" y="501" width="0.0441%" height="15" fill="rgb(251,23,15)" fg:x="454" fg:w="1"/><text x="20.2765%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.0265%" y="485" width="0.0441%" height="15" fill="rgb(252,88,28)" fg:x="454" fg:w="1"/><text x="20.2765%" y="495.50"></text></g><g><title>BN_CTX_free (1 samples, 0.04%)</title><rect x="20.0706%" y="501" width="0.0441%" height="15" fill="rgb(212,127,14)" fg:x="455" fg:w="1"/><text x="20.3206%" y="511.50"></text></g><g><title>&lt;cargo::util::hasher::StableHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="20.1147%" y="485" width="0.0441%" height="15" fill="rgb(247,145,37)" fg:x="456" fg:w="1"/><text x="20.3647%" y="495.50"></text></g><g><title>&lt;toml_edit::array::Array as core::iter::traits::collect::Extend&lt;toml_edit::value::Value&gt;&gt;::extend::&lt;core::option::Option&lt;toml_edit::value::Value&gt;&gt; (1 samples, 0.04%)</title><rect x="20.1588%" y="485" width="0.0441%" height="15" fill="rgb(209,117,53)" fg:x="457" fg:w="1"/><text x="20.4088%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.1588%" y="469" width="0.0441%" height="15" fill="rgb(212,90,42)" fg:x="457" fg:w="1"/><text x="20.4088%" y="479.50"></text></g><g><title>[[heap]] (3 samples, 0.13%)</title><rect x="20.1147%" y="501" width="0.1323%" height="15" fill="rgb(218,164,37)" fg:x="456" fg:w="3"/><text x="20.3647%" y="511.50"></text></g><g><title>_RINvNtCsfohDMHpnFpV_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECs5Ov15aSMuNk_5cargo.llvm.10912059224762950234 (1 samples, 0.04%)</title><rect x="20.2029%" y="485" width="0.0441%" height="15" fill="rgb(246,65,34)" fg:x="458" fg:w="1"/><text x="20.4529%" y="495.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="20.2029%" y="469" width="0.0441%" height="15" fill="rgb(231,100,33)" fg:x="458" fg:w="1"/><text x="20.4529%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.2029%" y="453" width="0.0441%" height="15" fill="rgb(228,126,14)" fg:x="458" fg:w="1"/><text x="20.4529%" y="463.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.2029%" y="437" width="0.0441%" height="15" fill="rgb(215,173,21)" fg:x="458" fg:w="1"/><text x="20.4529%" y="447.50"></text></g><g><title>[[stack]] (1 samples, 0.04%)</title><rect x="20.2470%" y="501" width="0.0441%" height="15" fill="rgb(210,6,40)" fg:x="459" fg:w="1"/><text x="20.4970%" y="511.50"></text></g><g><title>&lt;cargo::util::toml::TomlManifest&gt;::to_real_manifest (1 samples, 0.04%)</title><rect x="20.2470%" y="485" width="0.0441%" height="15" fill="rgb(212,48,18)" fg:x="459" fg:w="1"/><text x="20.4970%" y="495.50"></text></g><g><title>[ld-2.31.so] (4 samples, 0.18%)</title><rect x="20.3794%" y="469" width="0.1764%" height="15" fill="rgb(230,214,11)" fg:x="462" fg:w="4"/><text x="20.6294%" y="479.50"></text></g><g><title>[ld-2.31.so] (4 samples, 0.18%)</title><rect x="20.3794%" y="453" width="0.1764%" height="15" fill="rgb(254,105,39)" fg:x="462" fg:w="4"/><text x="20.6294%" y="463.50"></text></g><g><title>[ld-2.31.so] (3 samples, 0.13%)</title><rect x="20.4235%" y="437" width="0.1323%" height="15" fill="rgb(245,158,5)" fg:x="463" fg:w="3"/><text x="20.6735%" y="447.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="20.5117%" y="421" width="0.0441%" height="15" fill="rgb(249,208,11)" fg:x="465" fg:w="1"/><text x="20.7617%" y="431.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="20.5117%" y="405" width="0.0441%" height="15" fill="rgb(210,39,28)" fg:x="465" fg:w="1"/><text x="20.7617%" y="415.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="20.5117%" y="389" width="0.0441%" height="15" fill="rgb(211,56,53)" fg:x="465" fg:w="1"/><text x="20.7617%" y="399.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="20.5117%" y="373" width="0.0441%" height="15" fill="rgb(226,201,30)" fg:x="465" fg:w="1"/><text x="20.7617%" y="383.50"></text></g><g><title>[ld-2.31.so] (8 samples, 0.35%)</title><rect x="20.3352%" y="485" width="0.3529%" height="15" fill="rgb(239,101,34)" fg:x="461" fg:w="8"/><text x="20.5852%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="20.5558%" y="469" width="0.1323%" height="15" fill="rgb(226,209,5)" fg:x="466" fg:w="3"/><text x="20.8058%" y="479.50"></text></g><g><title>[ld-2.31.so] (11 samples, 0.49%)</title><rect x="20.2911%" y="501" width="0.4852%" height="15" fill="rgb(250,105,47)" fg:x="460" fg:w="11"/><text x="20.5411%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.09%)</title><rect x="20.6881%" y="485" width="0.0882%" height="15" fill="rgb(230,72,3)" fg:x="469" fg:w="2"/><text x="20.9381%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="20.7322%" y="469" width="0.0441%" height="15" fill="rgb(232,218,39)" fg:x="470" fg:w="1"/><text x="20.9822%" y="479.50"></text></g><g><title>&lt;rustup::dist::dist::PartialToolchainDesc as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="20.7764%" y="485" width="0.0441%" height="15" fill="rgb(248,166,6)" fg:x="471" fg:w="1"/><text x="21.0264%" y="495.50"></text></g><g><title>&lt;rustup::dist::dist::ParsedToolchainDesc as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="20.7764%" y="469" width="0.0441%" height="15" fill="rgb(247,89,20)" fg:x="471" fg:w="1"/><text x="21.0264%" y="479.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.04%)</title><rect x="20.7764%" y="453" width="0.0441%" height="15" fill="rgb(248,130,54)" fg:x="471" fg:w="1"/><text x="21.0264%" y="463.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.04%)</title><rect x="20.7764%" y="437" width="0.0441%" height="15" fill="rgb(234,196,4)" fg:x="471" fg:w="1"/><text x="21.0264%" y="447.50"></text></g><g><title>regex::exec::ExecReadOnly::new_pool (1 samples, 0.04%)</title><rect x="20.7764%" y="421" width="0.0441%" height="15" fill="rgb(250,143,31)" fg:x="471" fg:w="1"/><text x="21.0264%" y="431.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.7764%" y="405" width="0.0441%" height="15" fill="rgb(211,110,34)" fg:x="471" fg:w="1"/><text x="21.0264%" y="415.50"></text></g><g><title>&lt;sized_chunks::sized_chunk::Chunk&lt;(cargo::core::package_id::PackageId, im_rc::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;)&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="20.8205%" y="485" width="0.0441%" height="15" fill="rgb(215,124,48)" fg:x="472" fg:w="1"/><text x="21.0705%" y="495.50"></text></g><g><title>_RINvNtCsfohDMHpnFpV_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECs5Ov15aSMuNk_5cargo.llvm.10912059224762950234 (1 samples, 0.04%)</title><rect x="20.8646%" y="485" width="0.0441%" height="15" fill="rgb(216,46,13)" fg:x="473" fg:w="1"/><text x="21.1146%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="20.8646%" y="469" width="0.0441%" height="15" fill="rgb(205,184,25)" fg:x="473" fg:w="1"/><text x="21.1146%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.8646%" y="453" width="0.0441%" height="15" fill="rgb(228,1,10)" fg:x="473" fg:w="1"/><text x="21.1146%" y="463.50"></text></g><g><title>main (1 samples, 0.04%)</title><rect x="20.9087%" y="485" width="0.0441%" height="15" fill="rgb(213,116,27)" fg:x="474" fg:w="1"/><text x="21.1587%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.04%)</title><rect x="20.9087%" y="469" width="0.0441%" height="15" fill="rgb(241,95,50)" fg:x="474" fg:w="1"/><text x="21.1587%" y="479.50"></text></g><g><title>rustup_init::main (1 samples, 0.04%)</title><rect x="20.9087%" y="453" width="0.0441%" height="15" fill="rgb(238,48,32)" fg:x="474" fg:w="1"/><text x="21.1587%" y="463.50"></text></g><g><title>rustup::cli::proxy_mode::main (1 samples, 0.04%)</title><rect x="20.9087%" y="437" width="0.0441%" height="15" fill="rgb(235,113,49)" fg:x="474" fg:w="1"/><text x="21.1587%" y="447.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (1 samples, 0.04%)</title><rect x="20.9087%" y="421" width="0.0441%" height="15" fill="rgb(205,127,43)" fg:x="474" fg:w="1"/><text x="21.1587%" y="431.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (1 samples, 0.04%)</title><rect x="20.9087%" y="405" width="0.0441%" height="15" fill="rgb(250,162,2)" fg:x="474" fg:w="1"/><text x="21.1587%" y="415.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (1 samples, 0.04%)</title><rect x="20.9087%" y="389" width="0.0441%" height="15" fill="rgb(220,13,41)" fg:x="474" fg:w="1"/><text x="21.1587%" y="399.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (1 samples, 0.04%)</title><rect x="20.9087%" y="373" width="0.0441%" height="15" fill="rgb(249,221,25)" fg:x="474" fg:w="1"/><text x="21.1587%" y="383.50"></text></g><g><title>toml::de::from_str (1 samples, 0.04%)</title><rect x="20.9087%" y="357" width="0.0441%" height="15" fill="rgb(215,208,19)" fg:x="474" fg:w="1"/><text x="21.1587%" y="367.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="20.9087%" y="341" width="0.0441%" height="15" fill="rgb(236,175,2)" fg:x="474" fg:w="1"/><text x="21.1587%" y="351.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="20.9087%" y="325" width="0.0441%" height="15" fill="rgb(241,52,2)" fg:x="474" fg:w="1"/><text x="21.1587%" y="335.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="20.9087%" y="309" width="0.0441%" height="15" fill="rgb(248,140,14)" fg:x="474" fg:w="1"/><text x="21.1587%" y="319.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="20.9087%" y="293" width="0.0441%" height="15" fill="rgb(253,22,42)" fg:x="474" fg:w="1"/><text x="21.1587%" y="303.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="20.9087%" y="277" width="0.0441%" height="15" fill="rgb(234,61,47)" fg:x="474" fg:w="1"/><text x="21.1587%" y="287.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="20.9087%" y="261" width="0.0441%" height="15" fill="rgb(208,226,15)" fg:x="474" fg:w="1"/><text x="21.1587%" y="271.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.04%)</title><rect x="20.9087%" y="245" width="0.0441%" height="15" fill="rgb(217,221,4)" fg:x="474" fg:w="1"/><text x="21.1587%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="20.9087%" y="229" width="0.0441%" height="15" fill="rgb(212,174,34)" fg:x="474" fg:w="1"/><text x="21.1587%" y="239.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.9087%" y="213" width="0.0441%" height="15" fill="rgb(253,83,4)" fg:x="474" fg:w="1"/><text x="21.1587%" y="223.50"></text></g><g><title>rustup::cli::proxy_mode::main (2 samples, 0.09%)</title><rect x="20.9528%" y="485" width="0.0882%" height="15" fill="rgb(250,195,49)" fg:x="475" fg:w="2"/><text x="21.2028%" y="495.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (2 samples, 0.09%)</title><rect x="20.9528%" y="469" width="0.0882%" height="15" fill="rgb(241,192,25)" fg:x="475" fg:w="2"/><text x="21.2028%" y="479.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (2 samples, 0.09%)</title><rect x="20.9528%" y="453" width="0.0882%" height="15" fill="rgb(208,124,10)" fg:x="475" fg:w="2"/><text x="21.2028%" y="463.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (2 samples, 0.09%)</title><rect x="20.9528%" y="437" width="0.0882%" height="15" fill="rgb(222,33,0)" fg:x="475" fg:w="2"/><text x="21.2028%" y="447.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (2 samples, 0.09%)</title><rect x="20.9528%" y="421" width="0.0882%" height="15" fill="rgb(234,209,28)" fg:x="475" fg:w="2"/><text x="21.2028%" y="431.50"></text></g><g><title>toml::de::from_str (2 samples, 0.09%)</title><rect x="20.9528%" y="405" width="0.0882%" height="15" fill="rgb(224,11,23)" fg:x="475" fg:w="2"/><text x="21.2028%" y="415.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.09%)</title><rect x="20.9528%" y="389" width="0.0882%" height="15" fill="rgb(232,99,1)" fg:x="475" fg:w="2"/><text x="21.2028%" y="399.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.09%)</title><rect x="20.9528%" y="373" width="0.0882%" height="15" fill="rgb(237,95,45)" fg:x="475" fg:w="2"/><text x="21.2028%" y="383.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.09%)</title><rect x="20.9528%" y="357" width="0.0882%" height="15" fill="rgb(208,109,11)" fg:x="475" fg:w="2"/><text x="21.2028%" y="367.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.09%)</title><rect x="20.9528%" y="341" width="0.0882%" height="15" fill="rgb(216,190,48)" fg:x="475" fg:w="2"/><text x="21.2028%" y="351.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.09%)</title><rect x="20.9528%" y="325" width="0.0882%" height="15" fill="rgb(251,171,36)" fg:x="475" fg:w="2"/><text x="21.2028%" y="335.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.09%)</title><rect x="20.9528%" y="309" width="0.0882%" height="15" fill="rgb(230,62,22)" fg:x="475" fg:w="2"/><text x="21.2028%" y="319.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.09%)</title><rect x="20.9528%" y="293" width="0.0882%" height="15" fill="rgb(225,114,35)" fg:x="475" fg:w="2"/><text x="21.2028%" y="303.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.09%)</title><rect x="20.9528%" y="277" width="0.0882%" height="15" fill="rgb(215,118,42)" fg:x="475" fg:w="2"/><text x="21.2028%" y="287.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.09%)</title><rect x="20.9528%" y="261" width="0.0882%" height="15" fill="rgb(243,119,21)" fg:x="475" fg:w="2"/><text x="21.2028%" y="271.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="20.9969%" y="245" width="0.0441%" height="15" fill="rgb(252,177,53)" fg:x="476" fg:w="1"/><text x="21.2469%" y="255.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.04%)</title><rect x="21.0410%" y="245" width="0.0441%" height="15" fill="rgb(237,209,29)" fg:x="477" fg:w="1"/><text x="21.2910%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="21.0410%" y="229" width="0.0441%" height="15" fill="rgb(212,65,23)" fg:x="477" fg:w="1"/><text x="21.2910%" y="239.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.0410%" y="213" width="0.0441%" height="15" fill="rgb(230,222,46)" fg:x="477" fg:w="1"/><text x="21.2910%" y="223.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="21.0851%" y="245" width="0.0441%" height="15" fill="rgb(215,135,32)" fg:x="478" fg:w="1"/><text x="21.3351%" y="255.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.13%)</title><rect x="21.0410%" y="261" width="0.1323%" height="15" fill="rgb(246,101,22)" fg:x="477" fg:w="3"/><text x="21.2910%" y="271.50"></text></g><g><title>toml::map::Map&lt;alloc::string::String,toml::value::Value&gt;::entry (1 samples, 0.04%)</title><rect x="21.1292%" y="245" width="0.0441%" height="15" fill="rgb(206,107,13)" fg:x="479" fg:w="1"/><text x="21.3792%" y="255.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.1292%" y="229" width="0.0441%" height="15" fill="rgb(250,100,44)" fg:x="479" fg:w="1"/><text x="21.3792%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.44%)</title><rect x="20.7764%" y="501" width="0.4411%" height="15" fill="rgb(231,147,38)" fg:x="471" fg:w="10"/><text x="21.0264%" y="511.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (4 samples, 0.18%)</title><rect x="21.0410%" y="485" width="0.1764%" height="15" fill="rgb(229,8,40)" fg:x="477" fg:w="4"/><text x="21.2910%" y="495.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (4 samples, 0.18%)</title><rect x="21.0410%" y="469" width="0.1764%" height="15" fill="rgb(221,135,30)" fg:x="477" fg:w="4"/><text x="21.2910%" y="479.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (4 samples, 0.18%)</title><rect x="21.0410%" y="453" width="0.1764%" height="15" fill="rgb(249,193,18)" fg:x="477" fg:w="4"/><text x="21.2910%" y="463.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (4 samples, 0.18%)</title><rect x="21.0410%" y="437" width="0.1764%" height="15" fill="rgb(209,133,39)" fg:x="477" fg:w="4"/><text x="21.2910%" y="447.50"></text></g><g><title>toml::de::from_str (4 samples, 0.18%)</title><rect x="21.0410%" y="421" width="0.1764%" height="15" fill="rgb(232,100,14)" fg:x="477" fg:w="4"/><text x="21.2910%" y="431.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.18%)</title><rect x="21.0410%" y="405" width="0.1764%" height="15" fill="rgb(224,185,1)" fg:x="477" fg:w="4"/><text x="21.2910%" y="415.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.18%)</title><rect x="21.0410%" y="389" width="0.1764%" height="15" fill="rgb(223,139,8)" fg:x="477" fg:w="4"/><text x="21.2910%" y="399.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.18%)</title><rect x="21.0410%" y="373" width="0.1764%" height="15" fill="rgb(232,213,38)" fg:x="477" fg:w="4"/><text x="21.2910%" y="383.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.18%)</title><rect x="21.0410%" y="357" width="0.1764%" height="15" fill="rgb(207,94,22)" fg:x="477" fg:w="4"/><text x="21.2910%" y="367.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.18%)</title><rect x="21.0410%" y="341" width="0.1764%" height="15" fill="rgb(219,183,54)" fg:x="477" fg:w="4"/><text x="21.2910%" y="351.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.18%)</title><rect x="21.0410%" y="325" width="0.1764%" height="15" fill="rgb(216,185,54)" fg:x="477" fg:w="4"/><text x="21.2910%" y="335.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.18%)</title><rect x="21.0410%" y="309" width="0.1764%" height="15" fill="rgb(254,217,39)" fg:x="477" fg:w="4"/><text x="21.2910%" y="319.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.18%)</title><rect x="21.0410%" y="293" width="0.1764%" height="15" fill="rgb(240,178,23)" fg:x="477" fg:w="4"/><text x="21.2910%" y="303.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.18%)</title><rect x="21.0410%" y="277" width="0.1764%" height="15" fill="rgb(218,11,47)" fg:x="477" fg:w="4"/><text x="21.2910%" y="287.50"></text></g><g><title>&lt;toml::de::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.04%)</title><rect x="21.1734%" y="261" width="0.0441%" height="15" fill="rgb(218,51,51)" fg:x="480" fg:w="1"/><text x="21.4234%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="21.1734%" y="245" width="0.0441%" height="15" fill="rgb(238,126,27)" fg:x="480" fg:w="1"/><text x="21.4234%" y="255.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTNtNtNtCs5Ov15aSMuNk_5cargo4util9interning14InternedStringINtNtCsfohDMHpnFpV_5alloc3vec3VecRNtNtNtBV_4core10dependency10DependencyEEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_B1K_NtNtNtNtCsllUNDkh4f6a_3std11collections4hash3map11RandomStateE0EBV_.llvm.9129400588485725390 (1 samples, 0.04%)</title><rect x="21.2175%" y="501" width="0.0441%" height="15" fill="rgb(249,202,22)" fg:x="481" fg:w="1"/><text x="21.4675%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.2175%" y="485" width="0.0441%" height="15" fill="rgb(254,195,49)" fg:x="481" fg:w="1"/><text x="21.4675%" y="495.50"></text></g><g><title>_RINvNtCs2vLgkrgA7q7_4core3ptr13drop_in_placeINtNtCsfohDMHpnFpV_5alloc3vec3VecINtCsbWHBVCyzYcX_8indexmap6BucketNtNtBL_6string6StringNtNtNtCsg9HrCIpRHda_9toml_edit4easy5value5ValueEEECs5Ov15aSMuNk_5cargo.llvm.10378654742486379930 (1 samples, 0.04%)</title><rect x="21.2616%" y="501" width="0.0441%" height="15" fill="rgb(208,123,14)" fg:x="482" fg:w="1"/><text x="21.5116%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.2616%" y="485" width="0.0441%" height="15" fill="rgb(224,200,8)" fg:x="482" fg:w="1"/><text x="21.5116%" y="495.50"></text></g><g><title>_RINvNtCs2vLgkrgA7q7_4core3ptr13drop_in_placeINtNtNtCs5OcUKZ1C5zF_7combine6parser6repeat5StateINtNtNtBN_6stream4easy6ErrorshRShjEEECsg9HrCIpRHda_9toml_edit.llvm.3496130510361546778 (1 samples, 0.04%)</title><rect x="21.3057%" y="501" width="0.0441%" height="15" fill="rgb(217,61,36)" fg:x="483" fg:w="1"/><text x="21.5557%" y="511.50"></text></g><g><title>_RINvNtCs2vLgkrgA7q7_4core3ptr13drop_in_placeNtNtNtCs5Ov15aSMuNk_5cargo4core10dependency5InnerEBM_.llvm.17091146608533432546 (1 samples, 0.04%)</title><rect x="21.3498%" y="501" width="0.0441%" height="15" fill="rgb(206,35,45)" fg:x="484" fg:w="1"/><text x="21.5998%" y="511.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="21.3498%" y="485" width="0.0441%" height="15" fill="rgb(217,65,33)" fg:x="484" fg:w="1"/><text x="21.5998%" y="495.50"></text></g><g><title>_RINvNtCs2vLgkrgA7q7_4core3ptr13drop_in_placeNtNtNtNtCs5Ov15aSMuNk_5cargo4core8resolver6encode19EncodableDependencyEBO_.llvm.10378654742486379930 (1 samples, 0.04%)</title><rect x="21.3939%" y="501" width="0.0441%" height="15" fill="rgb(222,158,48)" fg:x="485" fg:w="1"/><text x="21.6439%" y="511.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="21.3939%" y="485" width="0.0441%" height="15" fill="rgb(254,2,54)" fg:x="485" fg:w="1"/><text x="21.6439%" y="495.50"></text></g><g><title>__libc_malloc (3 samples, 0.13%)</title><rect x="21.4821%" y="485" width="0.1323%" height="15" fill="rgb(250,143,38)" fg:x="487" fg:w="3"/><text x="21.7321%" y="495.50"></text></g><g><title>_RINvNtCsfohDMHpnFpV_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECs5Ov15aSMuNk_5cargo.llvm.10912059224762950234 (5 samples, 0.22%)</title><rect x="21.4380%" y="501" width="0.2206%" height="15" fill="rgb(248,25,0)" fg:x="486" fg:w="5"/><text x="21.6880%" y="511.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="21.6145%" y="485" width="0.0441%" height="15" fill="rgb(206,152,27)" fg:x="490" fg:w="1"/><text x="21.8645%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.6145%" y="469" width="0.0441%" height="15" fill="rgb(240,77,30)" fg:x="490" fg:w="1"/><text x="21.8645%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.6145%" y="453" width="0.0441%" height="15" fill="rgb(231,5,3)" fg:x="490" fg:w="1"/><text x="21.8645%" y="463.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.6145%" y="437" width="0.0441%" height="15" fill="rgb(207,226,32)" fg:x="490" fg:w="1"/><text x="21.8645%" y="447.50"></text></g><g><title>_RINvNvMs0_NtNtCs5Ov15aSMuNk_5cargo4util16dependency_queueINtB8_15DependencyQueuepppE14queue_finished5depthNtNtNtNtBc_4core8compiler4unit4UnitNtNtB1K_9job_queue8ArtifactEBc_.llvm.17091146608533432546 (1 samples, 0.04%)</title><rect x="21.6586%" y="501" width="0.0441%" height="15" fill="rgb(222,207,47)" fg:x="491" fg:w="1"/><text x="21.9086%" y="511.50"></text></g><g><title>_RINvXNtNtCsg9HrCIpRHda_9toml_edit6parser3keyINtB3_3keyINtNtNtCs5OcUKZ1C5zF_7combine6stream4easy6StreamINtNtBV_8position6StreamRShNtB1F_15IndexPositionerEEEINtNtBX_6parser6ParserBQ_E15parse_mode_implNtB2w_9FirstModeEB7_.llvm.9743105920846306071 (2 samples, 0.09%)</title><rect x="21.7027%" y="501" width="0.0882%" height="15" fill="rgb(229,115,45)" fg:x="492" fg:w="2"/><text x="21.9527%" y="511.50"></text></g><g><title>_RINvXs0_NtNtCs5OcUKZ1C5zF_7combine6parser8sequenceINtB6_4WithQINtNtB8_5token5TokenINtNtNtBa_6stream4easy6StreamINtNtB1n_8position6StreamRShNtB1O_15IndexPositionerEEEINtNtB8_6choice8OptionalQINtNtNtCsg9HrCIpRHda_9toml_edit6parser5array11array_valueB1i_EEEINtB8_6ParserB1i_E15parse_mode_implNtB8_9FirstModeEB39_.llvm.9743105920846306071 (1 samples, 0.04%)</title><rect x="21.7909%" y="501" width="0.0441%" height="15" fill="rgb(224,191,6)" fg:x="494" fg:w="1"/><text x="22.0409%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.7909%" y="485" width="0.0441%" height="15" fill="rgb(230,227,24)" fg:x="494" fg:w="1"/><text x="22.0409%" y="495.50"></text></g><g><title>_RINvXs0_NtNtCsg9HrCIpRHda_9toml_edit6parser6triviaINtB6_7newlineINtNtNtCs5OcUKZ1C5zF_7combine6stream4easy6StreamINtNtB15_8position6StreamRShNtB1P_15IndexPositionerEEEINtNtB17_6parser6ParserB10_E15parse_mode_implNtB2H_9FirstModeEBa_.llvm.9743105920846306071 (1 samples, 0.04%)</title><rect x="21.8350%" y="501" width="0.0441%" height="15" fill="rgb(228,80,19)" fg:x="495" fg:w="1"/><text x="22.0850%" y="511.50"></text></g><g><title>_RINvXs1_NtCs5OcUKZ1C5zF_7combine6parserNtB6_9FirstModeNtB6_9ParseMode5parseINtNtB6_10combinator6IgnoreQINtNtB6_8sequence4SkipINtB1G_4ThenINtB1e_9LookAheadINtNtB6_5token3AnyINtNtNtB8_6stream4easy6StreamINtNtB2P_8position6StreamRShNtB3g_15IndexPositionerEEEENCNvMNtNtCsg9HrCIpRHda_9toml_edit6parser8documentNtB4d_10TomlParser5parse0EINtB4b_8parse_wsB2K_EEEB2K_EB4f_.llvm.9743105920846306071 (1 samples, 0.04%)</title><rect x="21.8791%" y="501" width="0.0441%" height="15" fill="rgb(247,229,0)" fg:x="496" fg:w="1"/><text x="22.1291%" y="511.50"></text></g><g><title>_RINvXsc_NtNtCs5OcUKZ1C5zF_7combine6parser8sequenceTINtNtNtCsg9HrCIpRHda_9toml_edit6parser3key3keyINtNtNtBa_6stream4easy6StreamINtNtB1C_8position6StreamRShNtB23_15IndexPositionerEEEINtNtB8_5token5TokenB1x_ETINtNtBS_6trivia2wsB1x_EINtNtBS_5value5valueB1x_EINtB3l_13line_trailingB1x_EEEINtB8_6ParserB1x_E15parse_mode_implNtB8_9FirstModeEBU_.llvm.9743105920846306071 (1 samples, 0.04%)</title><rect x="21.9232%" y="501" width="0.0441%" height="15" fill="rgb(237,194,15)" fg:x="497" fg:w="1"/><text x="22.1732%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="21.9232%" y="485" width="0.0441%" height="15" fill="rgb(219,203,20)" fg:x="497" fg:w="1"/><text x="22.1732%" y="495.50"></text></g><g><title>_RINvXsh_CslD2kPegPqH2_6semverNtB6_10VersionReqNtNtCs2vLgkrgA7q7_4core4hash4Hash4hashNtNtNtNtCsllUNDkh4f6a_3std11collections4hash3map13DefaultHasherECs5Ov15aSMuNk_5cargo.llvm.17091146608533432546 (1 samples, 0.04%)</title><rect x="21.9674%" y="501" width="0.0441%" height="15" fill="rgb(234,128,8)" fg:x="498" fg:w="1"/><text x="22.2174%" y="511.50"></text></g><g><title>_RINvYINtNtNtCsg9HrCIpRHda_9toml_edit6parser7strings12basic_stringINtNtNtCs5OcUKZ1C5zF_7combine6stream4easy6StreamINtNtB16_8position6StreamRShNtB1Q_15IndexPositionerEEEINtNtB18_6parser6ParserB11_E10parse_modeNtB2I_9FirstModeEBa_.llvm.9743105920846306071 (1 samples, 0.04%)</title><rect x="22.0115%" y="501" width="0.0441%" height="15" fill="rgb(248,202,8)" fg:x="499" fg:w="1"/><text x="22.2615%" y="511.50"></text></g><g><title>_RINvYINtNtNtCsg9HrCIpRHda_9toml_edit6parser7strings6stringINtNtNtCs5OcUKZ1C5zF_7combine6stream4easy6StreamINtNtBZ_8position6StreamRShNtB1J_15IndexPositionerEEEINtNtB11_6parser6ParserBU_E10parse_modeNtB2A_9FirstModeEBa_.llvm.9743105920846306071 (1 samples, 0.04%)</title><rect x="22.0556%" y="501" width="0.0441%" height="15" fill="rgb(206,104,37)" fg:x="500" fg:w="1"/><text x="22.3056%" y="511.50"></text></g><g><title>_RNCNvNtNtCs5Ov15aSMuNk_5cargo4core8registry4locks_0B7_.llvm.16381362798096836802 (1 samples, 0.04%)</title><rect x="22.0997%" y="501" width="0.0441%" height="15" fill="rgb(223,8,27)" fg:x="501" fg:w="1"/><text x="22.3497%" y="511.50"></text></g><g><title>_RNSNvYNCNvMNtNtNtCs5Ov15aSMuNk_5cargo4core8compiler3jobNtB9_4Work4then0INtNtNtCs2vLgkrgA7q7_4core3ops8function6FnOnceTRNtNtBb_9job_queue8JobStateEE9call_once6vtableBf_.llvm.2845324463718620917 (1 samples, 0.04%)</title><rect x="22.1438%" y="501" width="0.0441%" height="15" fill="rgb(216,217,28)" fg:x="502" fg:w="1"/><text x="22.3938%" y="511.50"></text></g><g><title>_RNvMs0_NtNtCs5Ov15aSMuNk_5cargo4util8progressNtB5_5State5print.llvm.15695189871261790442 (3 samples, 0.13%)</title><rect x="22.1879%" y="501" width="0.1323%" height="15" fill="rgb(249,199,1)" fg:x="503" fg:w="3"/><text x="22.4379%" y="511.50"></text></g><g><title>_RNvMs0_NtNtNtCs5Ov15aSMuNk_5cargo7sources8registry5indexNtB5_13RegistryIndex23query_inner_with_online.llvm.6411290047933947402 (1 samples, 0.04%)</title><rect x="22.3202%" y="501" width="0.0441%" height="15" fill="rgb(240,85,17)" fg:x="506" fg:w="1"/><text x="22.5702%" y="511.50"></text></g><g><title>_RNvMsa_NtCsfohDMHpnFpV_5alloc2rcINtB5_2RcNtNtNtCs5Ov15aSMuNk_5cargo4core10dependency5InnerE8make_mutBJ_.llvm.16381362798096836802 (2 samples, 0.09%)</title><rect x="22.3644%" y="501" width="0.0882%" height="15" fill="rgb(206,108,45)" fg:x="507" fg:w="2"/><text x="22.6144%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="22.4085%" y="485" width="0.0441%" height="15" fill="rgb(245,210,41)" fg:x="508" fg:w="1"/><text x="22.6585%" y="495.50"></text></g><g><title>_RNvNtNtNtCs5Ov15aSMuNk_5cargo4core6source9source_id11url_display.llvm.8116109144213773672 (1 samples, 0.04%)</title><rect x="22.4526%" y="501" width="0.0441%" height="15" fill="rgb(206,13,37)" fg:x="509" fg:w="1"/><text x="22.7026%" y="511.50"></text></g><g><title>_RNvNtNtNtCs5Ov15aSMuNk_5cargo4core8compiler11fingerprint9calculate.llvm.15695189871261790442 (1 samples, 0.04%)</title><rect x="22.4967%" y="501" width="0.0441%" height="15" fill="rgb(250,61,18)" fg:x="510" fg:w="1"/><text x="22.7467%" y="511.50"></text></g><g><title>_RNvXs3_NtNtCs2vLgkrgA7q7_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs5Ov15aSMuNk_5cargo.llvm.11996198046080442464 (3 samples, 0.13%)</title><rect x="22.5408%" y="501" width="0.1323%" height="15" fill="rgb(235,172,48)" fg:x="511" fg:w="3"/><text x="22.7908%" y="511.50"></text></g><g><title>_RNvXs3_NtNtCs2vLgkrgA7q7_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs5Ov15aSMuNk_5cargo.llvm.16381362798096836802 (4 samples, 0.18%)</title><rect x="22.6731%" y="501" width="0.1764%" height="15" fill="rgb(249,201,17)" fg:x="514" fg:w="4"/><text x="22.9231%" y="511.50"></text></g><g><title>_RNvXs3_NtNtCs2vLgkrgA7q7_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs5Ov15aSMuNk_5cargo.llvm.17091146608533432546 (1 samples, 0.04%)</title><rect x="22.8496%" y="501" width="0.0441%" height="15" fill="rgb(219,208,6)" fg:x="518" fg:w="1"/><text x="23.0996%" y="511.50"></text></g><g><title>_RNvXs3_NtNtCs2vLgkrgA7q7_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs5Ov15aSMuNk_5cargo.llvm.8116109144213773672 (1 samples, 0.04%)</title><rect x="22.8937%" y="501" width="0.0441%" height="15" fill="rgb(248,31,23)" fg:x="519" fg:w="1"/><text x="23.1437%" y="511.50"></text></g><g><title>_RNvXs3_NtNtCs2vLgkrgA7q7_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCs5Ov15aSMuNk_5cargo.llvm.9763687530678335255 (1 samples, 0.04%)</title><rect x="22.9378%" y="501" width="0.0441%" height="15" fill="rgb(245,15,42)" fg:x="520" fg:w="1"/><text x="23.1878%" y="511.50"></text></g><g><title>_RNvXs_NtCs5OcUKZ1C5zF_7combine6parserQINtNtNtCsg9HrCIpRHda_9toml_edit6parser7strings11basic_charsINtNtNtB6_6stream4easy6StreamINtNtB1C_8position6StreamRShNtB23_15IndexPositionerEEEINtB4_6ParserB1x_E11parse_firstBH_.llvm.9743105920846306071 (1 samples, 0.04%)</title><rect x="22.9819%" y="501" width="0.0441%" height="15" fill="rgb(222,217,39)" fg:x="521" fg:w="1"/><text x="23.2319%" y="511.50"></text></g><g><title>_RNvXsd_NtNtCs5Ov15aSMuNk_5cargo4core8manifestNtB5_8ManifestNtNtCs2vLgkrgA7q7_4core5clone5Clone5clone.llvm.4517624822599698269 (1 samples, 0.04%)</title><rect x="23.0260%" y="501" width="0.0441%" height="15" fill="rgb(210,219,27)" fg:x="522" fg:w="1"/><text x="23.2760%" y="511.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.09%)</title><rect x="23.0701%" y="501" width="0.0882%" height="15" fill="rgb(252,166,36)" fg:x="523" fg:w="2"/><text x="23.3201%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.09%)</title><rect x="23.0701%" y="485" width="0.0882%" height="15" fill="rgb(245,132,34)" fg:x="523" fg:w="2"/><text x="23.3201%" y="495.50"></text></g><g><title>__rdl_realloc (2 samples, 0.09%)</title><rect x="23.1584%" y="501" width="0.0882%" height="15" fill="rgb(236,54,3)" fg:x="525" fg:w="2"/><text x="23.4084%" y="511.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="23.2466%" y="501" width="0.0441%" height="15" fill="rgb(241,173,43)" fg:x="527" fg:w="1"/><text x="23.4966%" y="511.50"></text></g><g><title>__libc_csu_init (1 samples, 0.04%)</title><rect x="23.2907%" y="469" width="0.0441%" height="15" fill="rgb(215,190,9)" fg:x="528" fg:w="1"/><text x="23.5407%" y="479.50"></text></g><g><title>curl::INIT_CTOR::init_ctor (1 samples, 0.04%)</title><rect x="23.2907%" y="453" width="0.0441%" height="15" fill="rgb(242,101,16)" fg:x="528" fg:w="1"/><text x="23.5407%" y="463.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.04%)</title><rect x="23.2907%" y="437" width="0.0441%" height="15" fill="rgb(223,190,21)" fg:x="528" fg:w="1"/><text x="23.5407%" y="447.50"></text></g><g><title>curl_global_init (1 samples, 0.04%)</title><rect x="23.2907%" y="421" width="0.0441%" height="15" fill="rgb(215,228,25)" fg:x="528" fg:w="1"/><text x="23.5407%" y="431.50"></text></g><g><title>ossl_init (1 samples, 0.04%)</title><rect x="23.2907%" y="405" width="0.0441%" height="15" fill="rgb(225,36,22)" fg:x="528" fg:w="1"/><text x="23.5407%" y="415.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.04%)</title><rect x="23.2907%" y="389" width="0.0441%" height="15" fill="rgb(251,106,46)" fg:x="528" fg:w="1"/><text x="23.5407%" y="399.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="23.2907%" y="373" width="0.0441%" height="15" fill="rgb(208,90,1)" fg:x="528" fg:w="1"/><text x="23.5407%" y="383.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="23.2907%" y="357" width="0.0441%" height="15" fill="rgb(243,10,4)" fg:x="528" fg:w="1"/><text x="23.5407%" y="367.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="23.2907%" y="341" width="0.0441%" height="15" fill="rgb(212,137,27)" fg:x="528" fg:w="1"/><text x="23.5407%" y="351.50"></text></g><g><title>ossl_init_config_ossl_ (1 samples, 0.04%)</title><rect x="23.2907%" y="325" width="0.0441%" height="15" fill="rgb(231,220,49)" fg:x="528" fg:w="1"/><text x="23.5407%" y="335.50"></text></g><g><title>openssl_config_int (1 samples, 0.04%)</title><rect x="23.2907%" y="309" width="0.0441%" height="15" fill="rgb(237,96,20)" fg:x="528" fg:w="1"/><text x="23.5407%" y="319.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="23.2907%" y="293" width="0.0441%" height="15" fill="rgb(239,229,30)" fg:x="528" fg:w="1"/><text x="23.5407%" y="303.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="23.2907%" y="277" width="0.0441%" height="15" fill="rgb(219,65,33)" fg:x="528" fg:w="1"/><text x="23.5407%" y="287.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="23.2907%" y="261" width="0.0441%" height="15" fill="rgb(243,134,7)" fg:x="528" fg:w="1"/><text x="23.5407%" y="271.50"></text></g><g><title>ossl_init_engine_rdrand_ossl_ (1 samples, 0.04%)</title><rect x="23.2907%" y="245" width="0.0441%" height="15" fill="rgb(216,177,54)" fg:x="528" fg:w="1"/><text x="23.5407%" y="255.50"></text></g><g><title>ERR_clear_error (1 samples, 0.04%)</title><rect x="23.2907%" y="229" width="0.0441%" height="15" fill="rgb(211,160,20)" fg:x="528" fg:w="1"/><text x="23.5407%" y="239.50"></text></g><g><title>ERR_get_state (1 samples, 0.04%)</title><rect x="23.2907%" y="213" width="0.0441%" height="15" fill="rgb(239,85,39)" fg:x="528" fg:w="1"/><text x="23.5407%" y="223.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="23.2907%" y="197" width="0.0441%" height="15" fill="rgb(232,125,22)" fg:x="528" fg:w="1"/><text x="23.5407%" y="207.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="23.2907%" y="181" width="0.0441%" height="15" fill="rgb(244,57,34)" fg:x="528" fg:w="1"/><text x="23.5407%" y="191.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="23.2907%" y="165" width="0.0441%" height="15" fill="rgb(214,203,32)" fg:x="528" fg:w="1"/><text x="23.5407%" y="175.50"></text></g><g><title>ossl_init_load_crypto_strings_ossl_ (1 samples, 0.04%)</title><rect x="23.2907%" y="149" width="0.0441%" height="15" fill="rgb(207,58,43)" fg:x="528" fg:w="1"/><text x="23.5407%" y="159.50"></text></g><g><title>err_load_crypto_strings_int (1 samples, 0.04%)</title><rect x="23.2907%" y="133" width="0.0441%" height="15" fill="rgb(215,193,15)" fg:x="528" fg:w="1"/><text x="23.5407%" y="143.50"></text></g><g><title>ERR_load_BUF_strings (1 samples, 0.04%)</title><rect x="23.2907%" y="117" width="0.0441%" height="15" fill="rgb(232,15,44)" fg:x="528" fg:w="1"/><text x="23.5407%" y="127.50"></text></g><g><title>rustup::cli::common::set_globals (1 samples, 0.04%)</title><rect x="23.3348%" y="405" width="0.0441%" height="15" fill="rgb(212,3,48)" fg:x="529" fg:w="1"/><text x="23.5848%" y="415.50"></text></g><g><title>rustup::cli::term2::stdout (1 samples, 0.04%)</title><rect x="23.3348%" y="389" width="0.0441%" height="15" fill="rgb(218,128,7)" fg:x="529" fg:w="1"/><text x="23.5848%" y="399.50"></text></g><g><title>&lt;rustup::cli::term2::TERMINFO as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="23.3348%" y="373" width="0.0441%" height="15" fill="rgb(226,216,39)" fg:x="529" fg:w="1"/><text x="23.5848%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="23.3348%" y="357" width="0.0441%" height="15" fill="rgb(243,47,51)" fg:x="529" fg:w="1"/><text x="23.5848%" y="367.50"></text></g><g><title>rustup::dist::manifest::Manifest::validate_targeted_package (1 samples, 0.04%)</title><rect x="23.3789%" y="341" width="0.0441%" height="15" fill="rgb(241,183,40)" fg:x="530" fg:w="1"/><text x="23.6289%" y="351.50"></text></g><g><title>rustup::dist::manifest::Package::get_target (1 samples, 0.04%)</title><rect x="23.3789%" y="325" width="0.0441%" height="15" fill="rgb(231,217,32)" fg:x="530" fg:w="1"/><text x="23.6289%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="23.3789%" y="309" width="0.0441%" height="15" fill="rgb(229,61,38)" fg:x="530" fg:w="1"/><text x="23.6289%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.04%)</title><rect x="23.4230%" y="309" width="0.0441%" height="15" fill="rgb(225,210,5)" fg:x="531" fg:w="1"/><text x="23.6730%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.04%)</title><rect x="23.4230%" y="293" width="0.0441%" height="15" fill="rgb(231,79,45)" fg:x="531" fg:w="1"/><text x="23.6730%" y="303.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::from_toml (3 samples, 0.13%)</title><rect x="23.4230%" y="341" width="0.1323%" height="15" fill="rgb(224,100,7)" fg:x="531" fg:w="3"/><text x="23.6730%" y="351.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::toml_to_components (3 samples, 0.13%)</title><rect x="23.4230%" y="325" width="0.1323%" height="15" fill="rgb(241,198,18)" fg:x="531" fg:w="3"/><text x="23.6730%" y="335.50"></text></g><g><title>rustup::dist::manifest::Component::from_toml (2 samples, 0.09%)</title><rect x="23.4671%" y="309" width="0.0882%" height="15" fill="rgb(252,97,53)" fg:x="532" fg:w="2"/><text x="23.7171%" y="319.50"></text></g><g><title>rustup::utils::toml_utils::get_string (2 samples, 0.09%)</title><rect x="23.4671%" y="293" width="0.0882%" height="15" fill="rgb(220,88,7)" fg:x="532" fg:w="2"/><text x="23.7171%" y="303.50"></text></g><g><title>rustup::utils::toml_utils::get_value (2 samples, 0.09%)</title><rect x="23.4671%" y="277" width="0.0882%" height="15" fill="rgb(213,176,14)" fg:x="532" fg:w="2"/><text x="23.7171%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (2 samples, 0.09%)</title><rect x="23.4671%" y="261" width="0.0882%" height="15" fill="rgb(246,73,7)" fg:x="532" fg:w="2"/><text x="23.7171%" y="271.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (2 samples, 0.09%)</title><rect x="23.4671%" y="245" width="0.0882%" height="15" fill="rgb(245,64,36)" fg:x="532" fg:w="2"/><text x="23.7171%" y="255.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="23.5112%" y="229" width="0.0441%" height="15" fill="rgb(245,80,10)" fg:x="533" fg:w="1"/><text x="23.7612%" y="239.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="23.5554%" y="325" width="0.0441%" height="15" fill="rgb(232,107,50)" fg:x="534" fg:w="1"/><text x="23.8054%" y="335.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="23.5554%" y="309" width="0.0441%" height="15" fill="rgb(253,3,0)" fg:x="534" fg:w="1"/><text x="23.8054%" y="319.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="23.5554%" y="293" width="0.0441%" height="15" fill="rgb(212,99,53)" fg:x="534" fg:w="1"/><text x="23.8054%" y="303.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="23.5554%" y="277" width="0.0441%" height="15" fill="rgb(249,111,54)" fg:x="534" fg:w="1"/><text x="23.8054%" y="287.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.04%)</title><rect x="23.5554%" y="261" width="0.0441%" height="15" fill="rgb(249,55,30)" fg:x="534" fg:w="1"/><text x="23.8054%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;toml::de::Table&gt;&gt; (1 samples, 0.04%)</title><rect x="23.5995%" y="325" width="0.0441%" height="15" fill="rgb(237,47,42)" fg:x="535" fg:w="1"/><text x="23.8495%" y="335.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="23.6436%" y="309" width="0.0441%" height="15" fill="rgb(211,20,18)" fg:x="536" fg:w="1"/><text x="23.8936%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (2 samples, 0.09%)</title><rect x="23.6877%" y="293" width="0.0882%" height="15" fill="rgb(231,203,46)" fg:x="537" fg:w="2"/><text x="23.9377%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::next (2 samples, 0.09%)</title><rect x="23.6877%" y="277" width="0.0882%" height="15" fill="rgb(237,142,3)" fg:x="537" fg:w="2"/><text x="23.9377%" y="287.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="23.7318%" y="261" width="0.0441%" height="15" fill="rgb(241,107,1)" fg:x="538" fg:w="1"/><text x="23.9818%" y="271.50"></text></g><g><title>toml::de::Deserializer::dotted_key (3 samples, 0.13%)</title><rect x="23.6877%" y="309" width="0.1323%" height="15" fill="rgb(229,83,13)" fg:x="537" fg:w="3"/><text x="23.9377%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (1 samples, 0.04%)</title><rect x="23.7759%" y="293" width="0.0441%" height="15" fill="rgb(241,91,40)" fg:x="539" fg:w="1"/><text x="24.0259%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.04%)</title><rect x="23.7759%" y="277" width="0.0441%" height="15" fill="rgb(225,3,45)" fg:x="539" fg:w="1"/><text x="24.0259%" y="287.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="23.7759%" y="261" width="0.0441%" height="15" fill="rgb(244,223,14)" fg:x="539" fg:w="1"/><text x="24.0259%" y="271.50"></text></g><g><title>toml::de::Deserializer::value (7 samples, 0.31%)</title><rect x="23.8200%" y="309" width="0.3088%" height="15" fill="rgb(224,124,37)" fg:x="540" fg:w="7"/><text x="24.0700%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (7 samples, 0.31%)</title><rect x="23.8200%" y="293" width="0.3088%" height="15" fill="rgb(251,171,30)" fg:x="540" fg:w="7"/><text x="24.0700%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::read_string (7 samples, 0.31%)</title><rect x="23.8200%" y="277" width="0.3088%" height="15" fill="rgb(236,46,54)" fg:x="540" fg:w="7"/><text x="24.0700%" y="287.50"></text></g><g><title>toml::tokens::Tokenizer::basic_string::{{closure}} (5 samples, 0.22%)</title><rect x="23.9082%" y="261" width="0.2206%" height="15" fill="rgb(245,213,5)" fg:x="542" fg:w="5"/><text x="24.1582%" y="271.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (1 samples, 0.04%)</title><rect x="24.1288%" y="309" width="0.0441%" height="15" fill="rgb(230,144,27)" fg:x="547" fg:w="1"/><text x="24.3788%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.04%)</title><rect x="24.1288%" y="293" width="0.0441%" height="15" fill="rgb(220,86,6)" fg:x="547" fg:w="1"/><text x="24.3788%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::expect_spanned (2 samples, 0.09%)</title><rect x="24.1729%" y="309" width="0.0882%" height="15" fill="rgb(240,20,13)" fg:x="548" fg:w="2"/><text x="24.4229%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.04%)</title><rect x="24.2170%" y="293" width="0.0441%" height="15" fill="rgb(217,89,34)" fg:x="549" fg:w="1"/><text x="24.4670%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.04%)</title><rect x="24.2611%" y="309" width="0.0441%" height="15" fill="rgb(229,13,5)" fg:x="550" fg:w="1"/><text x="24.5111%" y="319.50"></text></g><g><title>toml::de::Deserializer::tables (20 samples, 0.88%)</title><rect x="23.6436%" y="325" width="0.8822%" height="15" fill="rgb(244,67,35)" fg:x="536" fg:w="20"/><text x="23.8936%" y="335.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (5 samples, 0.22%)</title><rect x="24.3052%" y="309" width="0.2206%" height="15" fill="rgb(221,40,2)" fg:x="551" fg:w="5"/><text x="24.5552%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (4 samples, 0.18%)</title><rect x="24.3494%" y="293" width="0.1764%" height="15" fill="rgb(237,157,21)" fg:x="552" fg:w="4"/><text x="24.5994%" y="303.50"></text></g><g><title>toml::de::build_table_indices (2 samples, 0.09%)</title><rect x="24.5258%" y="325" width="0.0882%" height="15" fill="rgb(222,94,11)" fg:x="556" fg:w="2"/><text x="24.7758%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="24.5699%" y="309" width="0.0441%" height="15" fill="rgb(249,113,6)" fg:x="557" fg:w="1"/><text x="24.8199%" y="319.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="24.6581%" y="309" width="0.0441%" height="15" fill="rgb(238,137,36)" fg:x="559" fg:w="1"/><text x="24.9081%" y="319.50"></text></g><g><title>_start (34 samples, 1.50%)</title><rect x="23.2907%" y="501" width="1.4998%" height="15" fill="rgb(210,102,26)" fg:x="528" fg:w="34"/><text x="23.5407%" y="511.50"></text></g><g><title>__libc_start_main (34 samples, 1.50%)</title><rect x="23.2907%" y="485" width="1.4998%" height="15" fill="rgb(218,30,30)" fg:x="528" fg:w="34"/><text x="23.5407%" y="495.50"></text></g><g><title>main (33 samples, 1.46%)</title><rect x="23.3348%" y="469" width="1.4557%" height="15" fill="rgb(214,67,26)" fg:x="529" fg:w="33"/><text x="23.5848%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (33 samples, 1.46%)</title><rect x="23.3348%" y="453" width="1.4557%" height="15" fill="rgb(251,9,53)" fg:x="529" fg:w="33"/><text x="23.5848%" y="463.50"></text></g><g><title>rustup_init::main (33 samples, 1.46%)</title><rect x="23.3348%" y="437" width="1.4557%" height="15" fill="rgb(228,204,25)" fg:x="529" fg:w="33"/><text x="23.5848%" y="447.50"></text></g><g><title>rustup::cli::proxy_mode::main (33 samples, 1.46%)</title><rect x="23.3348%" y="421" width="1.4557%" height="15" fill="rgb(207,153,8)" fg:x="529" fg:w="33"/><text x="23.5848%" y="431.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (32 samples, 1.41%)</title><rect x="23.3789%" y="405" width="1.4116%" height="15" fill="rgb(242,9,16)" fg:x="530" fg:w="32"/><text x="23.6289%" y="415.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (32 samples, 1.41%)</title><rect x="23.3789%" y="389" width="1.4116%" height="15" fill="rgb(217,211,10)" fg:x="530" fg:w="32"/><text x="23.6289%" y="399.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (32 samples, 1.41%)</title><rect x="23.3789%" y="373" width="1.4116%" height="15" fill="rgb(219,228,52)" fg:x="530" fg:w="32"/><text x="23.6289%" y="383.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (32 samples, 1.41%)</title><rect x="23.3789%" y="357" width="1.4116%" height="15" fill="rgb(231,92,29)" fg:x="530" fg:w="32"/><text x="23.6289%" y="367.50"></text></g><g><title>toml::de::from_str (28 samples, 1.24%)</title><rect x="23.5554%" y="341" width="1.2351%" height="15" fill="rgb(232,8,23)" fg:x="534" fg:w="28"/><text x="23.8054%" y="351.50"></text></g><g><title>toml::de::build_table_pindices (4 samples, 0.18%)</title><rect x="24.6140%" y="325" width="0.1764%" height="15" fill="rgb(216,211,34)" fg:x="558" fg:w="4"/><text x="24.8640%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.09%)</title><rect x="24.7022%" y="309" width="0.0882%" height="15" fill="rgb(236,151,0)" fg:x="560" fg:w="2"/><text x="24.9522%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="24.7022%" y="293" width="0.0882%" height="15" fill="rgb(209,168,3)" fg:x="560" fg:w="2"/><text x="24.9522%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.13%)</title><rect x="24.7905%" y="501" width="0.1323%" height="15" fill="rgb(208,129,28)" fg:x="562" fg:w="3"/><text x="25.0405%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.13%)</title><rect x="24.7905%" y="485" width="0.1323%" height="15" fill="rgb(229,78,22)" fg:x="562" fg:w="3"/><text x="25.0405%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.13%)</title><rect x="24.7905%" y="469" width="0.1323%" height="15" fill="rgb(228,187,13)" fg:x="562" fg:w="3"/><text x="25.0405%" y="479.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.13%)</title><rect x="24.7905%" y="453" width="0.1323%" height="15" fill="rgb(240,119,24)" fg:x="562" fg:w="3"/><text x="25.0405%" y="463.50"></text></g><g><title>realloc (3 samples, 0.13%)</title><rect x="24.7905%" y="437" width="0.1323%" height="15" fill="rgb(209,194,42)" fg:x="562" fg:w="3"/><text x="25.0405%" y="447.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.13%)</title><rect x="24.7905%" y="421" width="0.1323%" height="15" fill="rgb(247,200,46)" fg:x="562" fg:w="3"/><text x="25.0405%" y="431.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.13%)</title><rect x="24.7905%" y="405" width="0.1323%" height="15" fill="rgb(218,76,16)" fg:x="562" fg:w="3"/><text x="25.0405%" y="415.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.04%)</title><rect x="24.9228%" y="501" width="0.0441%" height="15" fill="rgb(225,21,48)" fg:x="565" fg:w="1"/><text x="25.1728%" y="511.50"></text></g><g><title>asn1_item_embed_free (1 samples, 0.04%)</title><rect x="24.9669%" y="501" width="0.0441%" height="15" fill="rgb(239,223,50)" fg:x="566" fg:w="1"/><text x="25.2169%" y="511.50"></text></g><g><title>cargo::commands::add::cli (1 samples, 0.04%)</title><rect x="25.0110%" y="501" width="0.0441%" height="15" fill="rgb(244,45,21)" fg:x="567" fg:w="1"/><text x="25.2610%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="25.0110%" y="485" width="0.0441%" height="15" fill="rgb(232,33,43)" fg:x="567" fg:w="1"/><text x="25.2610%" y="495.50"></text></g><g><title>cargo::core::compiler::unit_dependencies::calc_artifact_deps (1 samples, 0.04%)</title><rect x="25.0551%" y="501" width="0.0441%" height="15" fill="rgb(209,8,3)" fg:x="568" fg:w="1"/><text x="25.3051%" y="511.50"></text></g><g><title>cargo::core::resolver::resolve (1 samples, 0.04%)</title><rect x="25.0993%" y="501" width="0.0441%" height="15" fill="rgb(214,25,53)" fg:x="569" fg:w="1"/><text x="25.3493%" y="511.50"></text></g><g><title>cargo::core::summary::build_feature_map (3 samples, 0.13%)</title><rect x="25.1434%" y="501" width="0.1323%" height="15" fill="rgb(254,186,54)" fg:x="570" fg:w="3"/><text x="25.3934%" y="511.50"></text></g><g><title>cargo::util::toml::read_manifest_from_str (1 samples, 0.04%)</title><rect x="25.2757%" y="501" width="0.0441%" height="15" fill="rgb(208,174,49)" fg:x="573" fg:w="1"/><text x="25.5257%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="25.2757%" y="485" width="0.0441%" height="15" fill="rgb(233,191,51)" fg:x="573" fg:w="1"/><text x="25.5257%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="25.2757%" y="469" width="0.0441%" height="15" fill="rgb(222,134,10)" fg:x="573" fg:w="1"/><text x="25.5257%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="25.2757%" y="453" width="0.0441%" height="15" fill="rgb(230,226,20)" fg:x="573" fg:w="1"/><text x="25.5257%" y="463.50"></text></g><g><title>cargo::util::toml::targets::targets (1 samples, 0.04%)</title><rect x="25.3198%" y="501" width="0.0441%" height="15" fill="rgb(251,111,25)" fg:x="574" fg:w="1"/><text x="25.5698%" y="511.50"></text></g><g><title>[ld-2.31.so] (4 samples, 0.18%)</title><rect x="25.5845%" y="469" width="0.1764%" height="15" fill="rgb(224,40,46)" fg:x="580" fg:w="4"/><text x="25.8345%" y="479.50"></text></g><g><title>[ld-2.31.so] (2 samples, 0.09%)</title><rect x="25.6727%" y="453" width="0.0882%" height="15" fill="rgb(236,108,47)" fg:x="582" fg:w="2"/><text x="25.9227%" y="463.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="25.7168%" y="437" width="0.0441%" height="15" fill="rgb(234,93,0)" fg:x="583" fg:w="1"/><text x="25.9668%" y="447.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="25.7168%" y="421" width="0.0441%" height="15" fill="rgb(224,213,32)" fg:x="583" fg:w="1"/><text x="25.9668%" y="431.50"></text></g><g><title>__ctype_init (2 samples, 0.09%)</title><rect x="25.7609%" y="469" width="0.0882%" height="15" fill="rgb(251,11,48)" fg:x="584" fg:w="2"/><text x="26.0109%" y="479.50"></text></g><g><title>__ctype_init@plt (1 samples, 0.04%)</title><rect x="25.8491%" y="469" width="0.0441%" height="15" fill="rgb(236,173,5)" fg:x="586" fg:w="1"/><text x="26.0991%" y="479.50"></text></g><g><title>clone (13 samples, 0.57%)</title><rect x="25.3639%" y="501" width="0.5734%" height="15" fill="rgb(230,95,12)" fg:x="575" fg:w="13"/><text x="25.6139%" y="511.50"></text></g><g><title>start_thread (11 samples, 0.49%)</title><rect x="25.4521%" y="485" width="0.4852%" height="15" fill="rgb(232,209,1)" fg:x="577" fg:w="11"/><text x="25.7021%" y="495.50"></text></g><g><title>_setjmp (1 samples, 0.04%)</title><rect x="25.8933%" y="469" width="0.0441%" height="15" fill="rgb(232,6,1)" fg:x="587" fg:w="1"/><text x="26.1433%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.04%)</title><rect x="25.9374%" y="501" width="0.0441%" height="15" fill="rgb(210,224,50)" fg:x="588" fg:w="1"/><text x="26.1874%" y="511.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.04%)</title><rect x="25.9815%" y="501" width="0.0441%" height="15" fill="rgb(228,127,35)" fg:x="589" fg:w="1"/><text x="26.2315%" y="511.50"></text></g><g><title>core::unicode::unicode_data::skip_search (1 samples, 0.04%)</title><rect x="25.9815%" y="485" width="0.0441%" height="15" fill="rgb(245,102,45)" fg:x="589" fg:w="1"/><text x="26.2315%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1 samples, 0.04%)</title><rect x="25.9815%" y="469" width="0.0441%" height="15" fill="rgb(214,1,49)" fg:x="589" fg:w="1"/><text x="26.2315%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.04%)</title><rect x="25.9815%" y="453" width="0.0441%" height="15" fill="rgb(226,163,40)" fg:x="589" fg:w="1"/><text x="26.2315%" y="463.50"></text></g><g><title>entry_fromname (1 samples, 0.04%)</title><rect x="26.0256%" y="501" width="0.0441%" height="15" fill="rgb(239,212,28)" fg:x="590" fg:w="1"/><text x="26.2756%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="26.0256%" y="485" width="0.0441%" height="15" fill="rgb(220,20,13)" fg:x="590" fg:w="1"/><text x="26.2756%" y="495.50"></text></g><g><title>git_delta_apply (2 samples, 0.09%)</title><rect x="26.0697%" y="501" width="0.0882%" height="15" fill="rgb(210,164,35)" fg:x="591" fg:w="2"/><text x="26.3197%" y="511.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="26.0697%" y="485" width="0.0882%" height="15" fill="rgb(248,109,41)" fg:x="591" fg:w="2"/><text x="26.3197%" y="495.50"></text></g><g><title>git_str_vprintf (1 samples, 0.04%)</title><rect x="26.1579%" y="501" width="0.0441%" height="15" fill="rgb(238,23,50)" fg:x="593" fg:w="1"/><text x="26.4079%" y="511.50"></text></g><g><title>vsnprintf (1 samples, 0.04%)</title><rect x="26.1579%" y="485" width="0.0441%" height="15" fill="rgb(211,48,49)" fg:x="593" fg:w="1"/><text x="26.4079%" y="495.50"></text></g><g><title>inflate (3 samples, 0.13%)</title><rect x="26.2020%" y="501" width="0.1323%" height="15" fill="rgb(223,36,21)" fg:x="594" fg:w="3"/><text x="26.4520%" y="511.50"></text></g><g><title>inflate_fast (1 samples, 0.04%)</title><rect x="26.3344%" y="501" width="0.0441%" height="15" fill="rgb(207,123,46)" fg:x="597" fg:w="1"/><text x="26.5844%" y="511.50"></text></g><g><title>inflate_table (1 samples, 0.04%)</title><rect x="26.3785%" y="501" width="0.0441%" height="15" fill="rgb(240,218,32)" fg:x="598" fg:w="1"/><text x="26.6285%" y="511.50"></text></g><g><title>mem_write (1 samples, 0.04%)</title><rect x="26.4226%" y="501" width="0.0441%" height="15" fill="rgb(252,5,43)" fg:x="599" fg:w="1"/><text x="26.6726%" y="511.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (1 samples, 0.04%)</title><rect x="26.4667%" y="501" width="0.0441%" height="15" fill="rgb(252,84,19)" fg:x="600" fg:w="1"/><text x="26.7167%" y="511.50"></text></g><g><title>ossl_ctype_check (1 samples, 0.04%)</title><rect x="26.5108%" y="501" width="0.0441%" height="15" fill="rgb(243,152,39)" fg:x="601" fg:w="1"/><text x="26.7608%" y="511.50"></text></g><g><title>semver::parse::numeric_identifier (1 samples, 0.04%)</title><rect x="26.5549%" y="501" width="0.0441%" height="15" fill="rgb(234,160,15)" fg:x="602" fg:w="1"/><text x="26.8049%" y="511.50"></text></g><g><title>sha1_compression_states (5 samples, 0.22%)</title><rect x="26.5990%" y="501" width="0.2206%" height="15" fill="rgb(237,34,20)" fg:x="603" fg:w="5"/><text x="26.8490%" y="511.50"></text></g><g><title>sha1_process (1 samples, 0.04%)</title><rect x="26.8196%" y="501" width="0.0441%" height="15" fill="rgb(229,97,13)" fg:x="608" fg:w="1"/><text x="27.0696%" y="511.50"></text></g><g><title>ssl_create_cipher_list (1 samples, 0.04%)</title><rect x="26.8637%" y="501" width="0.0441%" height="15" fill="rgb(234,71,50)" fg:x="609" fg:w="1"/><text x="27.1137%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="26.8637%" y="485" width="0.0441%" height="15" fill="rgb(253,155,4)" fg:x="609" fg:w="1"/><text x="27.1137%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;()&gt;&gt; (1 samples, 0.04%)</title><rect x="26.9078%" y="437" width="0.0441%" height="15" fill="rgb(222,185,37)" fg:x="610" fg:w="1"/><text x="27.1578%" y="447.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="26.9078%" y="421" width="0.0441%" height="15" fill="rgb(251,177,13)" fg:x="610" fg:w="1"/><text x="27.1578%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.04%)</title><rect x="26.9078%" y="405" width="0.0441%" height="15" fill="rgb(250,179,40)" fg:x="610" fg:w="1"/><text x="27.1578%" y="415.50"></text></g><g><title>std::env::_var_os (2 samples, 0.09%)</title><rect x="26.9078%" y="501" width="0.0882%" height="15" fill="rgb(242,44,2)" fg:x="610" fg:w="2"/><text x="27.1578%" y="511.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.09%)</title><rect x="26.9078%" y="485" width="0.0882%" height="15" fill="rgb(216,177,13)" fg:x="610" fg:w="2"/><text x="27.1578%" y="495.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.09%)</title><rect x="26.9078%" y="469" width="0.0882%" height="15" fill="rgb(216,106,43)" fg:x="610" fg:w="2"/><text x="27.1578%" y="479.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.09%)</title><rect x="26.9078%" y="453" width="0.0882%" height="15" fill="rgb(216,183,2)" fg:x="610" fg:w="2"/><text x="27.1578%" y="463.50"></text></g><g><title>getenv (1 samples, 0.04%)</title><rect x="26.9519%" y="437" width="0.0441%" height="15" fill="rgb(249,75,3)" fg:x="611" fg:w="1"/><text x="27.2019%" y="447.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="26.9519%" y="421" width="0.0441%" height="15" fill="rgb(219,67,39)" fg:x="611" fg:w="1"/><text x="27.2019%" y="431.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.04%)</title><rect x="26.9960%" y="501" width="0.0441%" height="15" fill="rgb(253,228,2)" fg:x="612" fg:w="1"/><text x="27.2460%" y="511.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.04%)</title><rect x="26.9960%" y="485" width="0.0441%" height="15" fill="rgb(235,138,27)" fg:x="612" fg:w="1"/><text x="27.2460%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.04%)</title><rect x="26.9960%" y="469" width="0.0441%" height="15" fill="rgb(236,97,51)" fg:x="612" fg:w="1"/><text x="27.2460%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.04%)</title><rect x="26.9960%" y="453" width="0.0441%" height="15" fill="rgb(240,80,30)" fg:x="612" fg:w="1"/><text x="27.2460%" y="463.50"></text></g><g><title>__libc_read (1 samples, 0.04%)</title><rect x="26.9960%" y="437" width="0.0441%" height="15" fill="rgb(230,178,19)" fg:x="612" fg:w="1"/><text x="27.2460%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="26.9960%" y="421" width="0.0441%" height="15" fill="rgb(210,190,27)" fg:x="612" fg:w="1"/><text x="27.2460%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="26.9960%" y="405" width="0.0441%" height="15" fill="rgb(222,107,31)" fg:x="612" fg:w="1"/><text x="27.2460%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="26.9960%" y="389" width="0.0441%" height="15" fill="rgb(216,127,34)" fg:x="612" fg:w="1"/><text x="27.2460%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="26.9960%" y="373" width="0.0441%" height="15" fill="rgb(234,116,52)" fg:x="612" fg:w="1"/><text x="27.2460%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="26.9960%" y="357" width="0.0441%" height="15" fill="rgb(222,124,15)" fg:x="612" fg:w="1"/><text x="27.2460%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="26.9960%" y="341" width="0.0441%" height="15" fill="rgb(231,179,28)" fg:x="612" fg:w="1"/><text x="27.2460%" y="351.50"></text></g><g><title>std::path::Components::include_cur_dir (1 samples, 0.04%)</title><rect x="27.0401%" y="501" width="0.0441%" height="15" fill="rgb(226,93,45)" fg:x="613" fg:w="1"/><text x="27.2901%" y="511.50"></text></g><g><title>std::path::Path::_strip_prefix (1 samples, 0.04%)</title><rect x="27.0843%" y="501" width="0.0441%" height="15" fill="rgb(215,8,51)" fg:x="614" fg:w="1"/><text x="27.3343%" y="511.50"></text></g><g><title>std::path::Path::components (1 samples, 0.04%)</title><rect x="27.0843%" y="485" width="0.0441%" height="15" fill="rgb(223,106,5)" fg:x="614" fg:w="1"/><text x="27.3343%" y="495.50"></text></g><g><title>std::path::Path::to_path_buf (1 samples, 0.04%)</title><rect x="27.1284%" y="501" width="0.0441%" height="15" fill="rgb(250,191,5)" fg:x="615" fg:w="1"/><text x="27.3784%" y="511.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.04%)</title><rect x="27.1284%" y="485" width="0.0441%" height="15" fill="rgb(242,132,44)" fg:x="615" fg:w="1"/><text x="27.3784%" y="495.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.04%)</title><rect x="27.1284%" y="469" width="0.0441%" height="15" fill="rgb(251,152,29)" fg:x="615" fg:w="1"/><text x="27.3784%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="27.1284%" y="453" width="0.0441%" height="15" fill="rgb(218,179,5)" fg:x="615" fg:w="1"/><text x="27.3784%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="27.1284%" y="437" width="0.0441%" height="15" fill="rgb(227,67,19)" fg:x="615" fg:w="1"/><text x="27.3784%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="27.1284%" y="421" width="0.0441%" height="15" fill="rgb(233,119,31)" fg:x="615" fg:w="1"/><text x="27.3784%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="27.1284%" y="405" width="0.0441%" height="15" fill="rgb(241,120,22)" fg:x="615" fg:w="1"/><text x="27.3784%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="27.1284%" y="389" width="0.0441%" height="15" fill="rgb(224,102,30)" fg:x="615" fg:w="1"/><text x="27.3784%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="27.1284%" y="373" width="0.0441%" height="15" fill="rgb(210,164,37)" fg:x="615" fg:w="1"/><text x="27.3784%" y="383.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="27.1284%" y="357" width="0.0441%" height="15" fill="rgb(226,191,16)" fg:x="615" fg:w="1"/><text x="27.3784%" y="367.50"></text></g><g><title>std::sync::barrier::BarrierWaitResult::is_leader (1 samples, 0.04%)</title><rect x="27.1725%" y="501" width="0.0441%" height="15" fill="rgb(214,40,45)" fg:x="616" fg:w="1"/><text x="27.4225%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (2 samples, 0.09%)</title><rect x="27.2166%" y="501" width="0.0882%" height="15" fill="rgb(244,29,26)" fg:x="617" fg:w="2"/><text x="27.4666%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::notify_one (2 samples, 0.09%)</title><rect x="27.2166%" y="485" width="0.0882%" height="15" fill="rgb(216,16,5)" fg:x="617" fg:w="2"/><text x="27.4666%" y="495.50"></text></g><g><title>std::sys::unix::futex::futex_wake (2 samples, 0.09%)</title><rect x="27.2166%" y="469" width="0.0882%" height="15" fill="rgb(249,76,35)" fg:x="617" fg:w="2"/><text x="27.4666%" y="479.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2 samples, 0.09%)</title><rect x="27.3048%" y="501" width="0.0882%" height="15" fill="rgb(207,11,44)" fg:x="619" fg:w="2"/><text x="27.5548%" y="511.50"></text></g><g><title>syscall (1 samples, 0.04%)</title><rect x="27.3489%" y="485" width="0.0441%" height="15" fill="rgb(228,190,49)" fg:x="620" fg:w="1"/><text x="27.5989%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="27.3489%" y="469" width="0.0441%" height="15" fill="rgb(214,173,12)" fg:x="620" fg:w="1"/><text x="27.5989%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="27.3489%" y="453" width="0.0441%" height="15" fill="rgb(218,26,35)" fg:x="620" fg:w="1"/><text x="27.5989%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (1 samples, 0.04%)</title><rect x="27.3930%" y="501" width="0.0441%" height="15" fill="rgb(220,200,19)" fg:x="621" fg:w="1"/><text x="27.6430%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.04%)</title><rect x="27.3930%" y="485" width="0.0441%" height="15" fill="rgb(239,95,49)" fg:x="621" fg:w="1"/><text x="27.6430%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.04%)</title><rect x="27.3930%" y="469" width="0.0441%" height="15" fill="rgb(235,85,53)" fg:x="621" fg:w="1"/><text x="27.6430%" y="479.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.04%)</title><rect x="27.4371%" y="501" width="0.0441%" height="15" fill="rgb(233,133,31)" fg:x="622" fg:w="1"/><text x="27.6871%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="27.4371%" y="485" width="0.0441%" height="15" fill="rgb(218,25,20)" fg:x="622" fg:w="1"/><text x="27.6871%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="27.4371%" y="469" width="0.0441%" height="15" fill="rgb(252,210,38)" fg:x="622" fg:w="1"/><text x="27.6871%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="27.4371%" y="453" width="0.0441%" height="15" fill="rgb(242,134,21)" fg:x="622" fg:w="1"/><text x="27.6871%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="27.4371%" y="437" width="0.0441%" height="15" fill="rgb(213,28,48)" fg:x="622" fg:w="1"/><text x="27.6871%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="27.4371%" y="421" width="0.0441%" height="15" fill="rgb(250,196,2)" fg:x="622" fg:w="1"/><text x="27.6871%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="27.4371%" y="405" width="0.0441%" height="15" fill="rgb(227,5,17)" fg:x="622" fg:w="1"/><text x="27.6871%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="27.4371%" y="389" width="0.0441%" height="15" fill="rgb(221,226,24)" fg:x="622" fg:w="1"/><text x="27.6871%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="27.4371%" y="373" width="0.0441%" height="15" fill="rgb(211,5,48)" fg:x="622" fg:w="1"/><text x="27.6871%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="27.4371%" y="357" width="0.0441%" height="15" fill="rgb(219,150,6)" fg:x="622" fg:w="1"/><text x="27.6871%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="27.4371%" y="341" width="0.0441%" height="15" fill="rgb(251,46,16)" fg:x="622" fg:w="1"/><text x="27.6871%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="27.4371%" y="325" width="0.0441%" height="15" fill="rgb(220,204,40)" fg:x="622" fg:w="1"/><text x="27.6871%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="27.4371%" y="309" width="0.0441%" height="15" fill="rgb(211,85,2)" fg:x="622" fg:w="1"/><text x="27.6871%" y="319.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.04%)</title><rect x="27.4813%" y="501" width="0.0441%" height="15" fill="rgb(229,17,7)" fg:x="623" fg:w="1"/><text x="27.7313%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.04%)</title><rect x="27.5254%" y="501" width="0.0441%" height="15" fill="rgb(239,72,28)" fg:x="624" fg:w="1"/><text x="27.7754%" y="511.50"></text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.04%)</title><rect x="27.5695%" y="501" width="0.0441%" height="15" fill="rgb(230,47,54)" fg:x="625" fg:w="1"/><text x="27.8195%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="27.5695%" y="485" width="0.0441%" height="15" fill="rgb(214,50,8)" fg:x="625" fg:w="1"/><text x="27.8195%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="27.5695%" y="469" width="0.0441%" height="15" fill="rgb(216,198,43)" fg:x="625" fg:w="1"/><text x="27.8195%" y="479.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.04%)</title><rect x="27.5695%" y="453" width="0.0441%" height="15" fill="rgb(234,20,35)" fg:x="625" fg:w="1"/><text x="27.8195%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (1 samples, 0.04%)</title><rect x="27.5695%" y="437" width="0.0441%" height="15" fill="rgb(254,45,19)" fg:x="625" fg:w="1"/><text x="27.8195%" y="447.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.04%)</title><rect x="27.5695%" y="421" width="0.0441%" height="15" fill="rgb(219,14,44)" fg:x="625" fg:w="1"/><text x="27.8195%" y="431.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="27.5695%" y="405" width="0.0441%" height="15" fill="rgb(217,220,26)" fg:x="625" fg:w="1"/><text x="27.8195%" y="415.50"></text></g><g><title>toml_edit::encode::infer_style (1 samples, 0.04%)</title><rect x="27.6136%" y="501" width="0.0441%" height="15" fill="rgb(213,158,28)" fg:x="626" fg:w="1"/><text x="27.8636%" y="511.50"></text></g><g><title>toml_edit::parser::value::apply_raw (1 samples, 0.04%)</title><rect x="27.6577%" y="501" width="0.0441%" height="15" fill="rgb(252,51,52)" fg:x="627" fg:w="1"/><text x="27.9077%" y="511.50"></text></g><g><title>cargo (285 samples, 12.57%)</title><rect x="15.3948%" y="517" width="12.5717%" height="15" fill="rgb(246,89,16)" fg:x="349" fg:w="285"/><text x="15.6448%" y="527.50">cargo</text></g><g><title>ubc_check (6 samples, 0.26%)</title><rect x="27.7018%" y="501" width="0.2647%" height="15" fill="rgb(216,158,49)" fg:x="628" fg:w="6"/><text x="27.9518%" y="511.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.04%)</title><rect x="27.9665%" y="485" width="0.0441%" height="15" fill="rgb(236,107,19)" fg:x="634" fg:w="1"/><text x="28.2165%" y="495.50"></text></g><g><title>llvm::TargetPassConfig::addISelPasses (1 samples, 0.04%)</title><rect x="27.9665%" y="469" width="0.0441%" height="15" fill="rgb(228,185,30)" fg:x="634" fg:w="1"/><text x="28.2165%" y="479.50"></text></g><g><title>llvm::TargetPassConfig::addCoreISelPasses (1 samples, 0.04%)</title><rect x="27.9665%" y="453" width="0.0441%" height="15" fill="rgb(246,134,8)" fg:x="634" fg:w="1"/><text x="28.2165%" y="463.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.04%)</title><rect x="27.9665%" y="437" width="0.0441%" height="15" fill="rgb(214,143,50)" fg:x="634" fg:w="1"/><text x="28.2165%" y="447.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.04%)</title><rect x="27.9665%" y="421" width="0.0441%" height="15" fill="rgb(228,75,8)" fg:x="634" fg:w="1"/><text x="28.2165%" y="431.50"></text></g><g><title>llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.04%)</title><rect x="27.9665%" y="405" width="0.0441%" height="15" fill="rgb(207,175,4)" fg:x="634" fg:w="1"/><text x="28.2165%" y="415.50"></text></g><g><title>llvm::PassRegistry::enumerateWith (1 samples, 0.04%)</title><rect x="27.9665%" y="389" width="0.0441%" height="15" fill="rgb(205,108,24)" fg:x="634" fg:w="1"/><text x="28.2165%" y="399.50"></text></g><g><title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="28.0106%" y="469" width="0.0441%" height="15" fill="rgb(244,120,49)" fg:x="635" fg:w="1"/><text x="28.2606%" y="479.50"></text></g><g><title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="28.0106%" y="453" width="0.0441%" height="15" fill="rgb(223,47,38)" fg:x="635" fg:w="1"/><text x="28.2606%" y="463.50"></text></g><g><title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.04%)</title><rect x="28.0106%" y="437" width="0.0441%" height="15" fill="rgb(229,179,11)" fg:x="635" fg:w="1"/><text x="28.2606%" y="447.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (1 samples, 0.04%)</title><rect x="28.0106%" y="421" width="0.0441%" height="15" fill="rgb(231,122,1)" fg:x="635" fg:w="1"/><text x="28.2606%" y="431.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (1 samples, 0.04%)</title><rect x="28.0106%" y="405" width="0.0441%" height="15" fill="rgb(245,119,9)" fg:x="635" fg:w="1"/><text x="28.2606%" y="415.50"></text></g><g><title>llvm::LegacyLegalizerInfo::computeTables (1 samples, 0.04%)</title><rect x="28.0106%" y="389" width="0.0441%" height="15" fill="rgb(241,163,25)" fg:x="635" fg:w="1"/><text x="28.2606%" y="399.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (2 samples, 0.09%)</title><rect x="28.0106%" y="485" width="0.0882%" height="15" fill="rgb(217,214,3)" fg:x="635" fg:w="2"/><text x="28.2606%" y="495.50"></text></g><g><title>llvm::MachineModuleInfoWrapperPass::doFinalization (1 samples, 0.04%)</title><rect x="28.0547%" y="469" width="0.0441%" height="15" fill="rgb(240,86,28)" fg:x="636" fg:w="1"/><text x="28.3047%" y="479.50"></text></g><g><title>llvm::MCContext::reset (1 samples, 0.04%)</title><rect x="28.0547%" y="453" width="0.0441%" height="15" fill="rgb(215,47,9)" fg:x="636" fg:w="1"/><text x="28.3047%" y="463.50"></text></g><g><title>std::_Rb_tree&lt;llvm::MCContext::ELFEntrySizeKey, std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt;, std::less&lt;llvm::MCContext::ELFEntrySizeKey&gt;, std::allocator&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="28.0547%" y="437" width="0.0441%" height="15" fill="rgb(252,25,45)" fg:x="636" fg:w="1"/><text x="28.3047%" y="447.50"></text></g><g><title>std::_Rb_tree&lt;llvm::MCContext::ELFEntrySizeKey, std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt;, std::less&lt;llvm::MCContext::ELFEntrySizeKey&gt;, std::allocator&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="28.0547%" y="421" width="0.0441%" height="15" fill="rgb(251,164,9)" fg:x="636" fg:w="1"/><text x="28.3047%" y="431.50"></text></g><g><title>std::_Rb_tree&lt;llvm::MCContext::ELFEntrySizeKey, std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt;, std::less&lt;llvm::MCContext::ELFEntrySizeKey&gt;, std::allocator&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="28.0547%" y="405" width="0.0441%" height="15" fill="rgb(233,194,0)" fg:x="636" fg:w="1"/><text x="28.3047%" y="415.50"></text></g><g><title>std::_Rb_tree&lt;llvm::MCContext::ELFEntrySizeKey, std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt;, std::less&lt;llvm::MCContext::ELFEntrySizeKey&gt;, std::allocator&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="28.0547%" y="389" width="0.0441%" height="15" fill="rgb(249,111,24)" fg:x="636" fg:w="1"/><text x="28.3047%" y="399.50"></text></g><g><title>std::_Rb_tree&lt;llvm::MCContext::ELFEntrySizeKey, std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt;, std::less&lt;llvm::MCContext::ELFEntrySizeKey&gt;, std::allocator&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="28.0547%" y="373" width="0.0441%" height="15" fill="rgb(250,223,3)" fg:x="636" fg:w="1"/><text x="28.3047%" y="383.50"></text></g><g><title>std::_Rb_tree&lt;llvm::MCContext::ELFEntrySizeKey, std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt;, std::less&lt;llvm::MCContext::ELFEntrySizeKey&gt;, std::allocator&lt;std::pair&lt;llvm::MCContext::ELFEntrySizeKey const, unsigned int&gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="28.0547%" y="357" width="0.0441%" height="15" fill="rgb(236,178,37)" fg:x="636" fg:w="1"/><text x="28.3047%" y="367.50"></text></g><g><title>LLVMRustWriteOutputFile (4 samples, 0.18%)</title><rect x="27.9665%" y="501" width="0.1764%" height="15" fill="rgb(241,158,50)" fg:x="634" fg:w="4"/><text x="28.2165%" y="511.50"></text></g><g><title>llvm::raw_fd_ostream::raw_fd_ostream (1 samples, 0.04%)</title><rect x="28.0988%" y="485" width="0.0441%" height="15" fill="rgb(213,121,41)" fg:x="637" fg:w="1"/><text x="28.3488%" y="495.50"></text></g><g><title>llvm::sys::fs::openFile (1 samples, 0.04%)</title><rect x="28.0988%" y="469" width="0.0441%" height="15" fill="rgb(240,92,3)" fg:x="637" fg:w="1"/><text x="28.3488%" y="479.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.0988%" y="453" width="0.0441%" height="15" fill="rgb(205,123,3)" fg:x="637" fg:w="1"/><text x="28.3488%" y="463.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.0988%" y="437" width="0.0441%" height="15" fill="rgb(205,97,47)" fg:x="637" fg:w="1"/><text x="28.3488%" y="447.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.0988%" y="421" width="0.0441%" height="15" fill="rgb(247,152,14)" fg:x="637" fg:w="1"/><text x="28.3488%" y="431.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.0988%" y="405" width="0.0441%" height="15" fill="rgb(248,195,53)" fg:x="637" fg:w="1"/><text x="28.3488%" y="415.50"></text></g><g><title>[anon] (1 samples, 0.04%)</title><rect x="28.1429%" y="501" width="0.0441%" height="15" fill="rgb(226,201,16)" fg:x="638" fg:w="1"/><text x="28.3929%" y="511.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (1 samples, 0.04%)</title><rect x="28.1429%" y="485" width="0.0441%" height="15" fill="rgb(205,98,0)" fg:x="638" fg:w="1"/><text x="28.3929%" y="495.50"></text></g><g><title>opt_46k3n4bygb4 (6 samples, 0.26%)</title><rect x="27.9665%" y="517" width="0.2647%" height="15" fill="rgb(214,191,48)" fg:x="634" fg:w="6"/><text x="28.2165%" y="527.50"></text></g><g><title>rustc_codegen_llvm::back::write::codegen (1 samples, 0.04%)</title><rect x="28.1870%" y="501" width="0.0441%" height="15" fill="rgb(237,112,39)" fg:x="639" fg:w="1"/><text x="28.4370%" y="511.50"></text></g><g><title>LLVMAddAnalysisPasses (1 samples, 0.04%)</title><rect x="28.1870%" y="485" width="0.0441%" height="15" fill="rgb(247,203,27)" fg:x="639" fg:w="1"/><text x="28.4370%" y="495.50"></text></g><g><title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.04%)</title><rect x="28.1870%" y="469" width="0.0441%" height="15" fill="rgb(235,124,28)" fg:x="639" fg:w="1"/><text x="28.4370%" y="479.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.1870%" y="453" width="0.0441%" height="15" fill="rgb(208,207,46)" fg:x="639" fg:w="1"/><text x="28.4370%" y="463.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.1870%" y="437" width="0.0441%" height="15" fill="rgb(234,176,4)" fg:x="639" fg:w="1"/><text x="28.4370%" y="447.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.1870%" y="421" width="0.0441%" height="15" fill="rgb(230,133,28)" fg:x="639" fg:w="1"/><text x="28.4370%" y="431.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.1870%" y="405" width="0.0441%" height="15" fill="rgb(211,137,40)" fg:x="639" fg:w="1"/><text x="28.4370%" y="415.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.1870%" y="389" width="0.0441%" height="15" fill="rgb(254,35,13)" fg:x="639" fg:w="1"/><text x="28.4370%" y="399.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="28.1870%" y="373" width="0.0441%" height="15" fill="rgb(225,49,51)" fg:x="639" fg:w="1"/><text x="28.4370%" y="383.50"></text></g><g><title>&lt;std::sync::mpmc::zero::ZeroToken as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="28.2311%" y="501" width="0.0441%" height="15" fill="rgb(251,10,15)" fg:x="640" fg:w="1"/><text x="28.4811%" y="511.50"></text></g><g><title>llvm::PassBuilder::PassBuilder (1 samples, 0.04%)</title><rect x="28.4076%" y="485" width="0.0441%" height="15" fill="rgb(228,207,15)" fg:x="644" fg:w="1"/><text x="28.6576%" y="495.50"></text></g><g><title>llvm::PassBuilder::registerFunctionAnalyses (1 samples, 0.04%)</title><rect x="28.4517%" y="485" width="0.0441%" height="15" fill="rgb(241,99,19)" fg:x="645" fg:w="1"/><text x="28.7017%" y="495.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::invalidate (3 samples, 0.13%)</title><rect x="28.4958%" y="469" width="0.1323%" height="15" fill="rgb(207,104,49)" fg:x="646" fg:w="3"/><text x="28.7458%" y="479.50"></text></g><g><title>llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Function&gt;, llvm::Module&gt;::Result::invalidate (3 samples, 0.13%)</title><rect x="28.4958%" y="453" width="0.1323%" height="15" fill="rgb(234,99,18)" fg:x="646" fg:w="3"/><text x="28.7458%" y="463.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.04%)</title><rect x="28.5840%" y="437" width="0.0441%" height="15" fill="rgb(213,191,49)" fg:x="648" fg:w="1"/><text x="28.8340%" y="447.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::BlockFrequencyInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="28.5840%" y="421" width="0.0441%" height="15" fill="rgb(210,226,19)" fg:x="648" fg:w="1"/><text x="28.8340%" y="431.50"></text></g><g><title>llvm::DenseMap&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::DenseMapInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, void&gt;, llvm::detail::DenseMapPair&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal&gt; &gt;::~DenseMap (1 samples, 0.04%)</title><rect x="28.7605%" y="437" width="0.0441%" height="15" fill="rgb(229,97,18)" fg:x="652" fg:w="1"/><text x="29.0105%" y="447.50"></text></g><g><title>llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt; &gt;::getValueState (1 samples, 0.04%)</title><rect x="29.1134%" y="421" width="0.0441%" height="15" fill="rgb(211,167,15)" fg:x="660" fg:w="1"/><text x="29.3634%" y="431.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::CalledValuePropagationPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (13 samples, 0.57%)</title><rect x="28.6281%" y="469" width="0.5734%" height="15" fill="rgb(210,169,34)" fg:x="649" fg:w="13"/><text x="28.8781%" y="479.50"></text></g><g><title>runCVP (13 samples, 0.57%)</title><rect x="28.6281%" y="453" width="0.5734%" height="15" fill="rgb(241,121,31)" fg:x="649" fg:w="13"/><text x="28.8781%" y="463.50"></text></g><g><title>llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt; &gt;::visitInst (9 samples, 0.40%)</title><rect x="28.8046%" y="437" width="0.3970%" height="15" fill="rgb(232,40,11)" fg:x="653" fg:w="9"/><text x="29.0546%" y="447.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.04%)</title><rect x="29.1575%" y="421" width="0.0441%" height="15" fill="rgb(205,86,26)" fg:x="661" fg:w="1"/><text x="29.4075%" y="431.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.04%)</title><rect x="29.1575%" y="405" width="0.0441%" height="15" fill="rgb(231,126,28)" fg:x="661" fg:w="1"/><text x="29.4075%" y="415.50"></text></g><g><title>llvm::DeadArgumentEliminationPass::removeDeadStuffFromFunction (1 samples, 0.04%)</title><rect x="29.2016%" y="437" width="0.0441%" height="15" fill="rgb(219,221,18)" fg:x="662" fg:w="1"/><text x="29.4516%" y="447.50"></text></g><g><title>llvm::PoisonValue::get (1 samples, 0.04%)</title><rect x="29.2016%" y="421" width="0.0441%" height="15" fill="rgb(211,40,0)" fg:x="662" fg:w="1"/><text x="29.4516%" y="431.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::DeadArgumentEliminationPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (2 samples, 0.09%)</title><rect x="29.2016%" y="469" width="0.0882%" height="15" fill="rgb(239,85,43)" fg:x="662" fg:w="2"/><text x="29.4516%" y="479.50"></text></g><g><title>llvm::DeadArgumentEliminationPass::run (2 samples, 0.09%)</title><rect x="29.2016%" y="453" width="0.0882%" height="15" fill="rgb(231,55,21)" fg:x="662" fg:w="2"/><text x="29.4516%" y="463.50"></text></g><g><title>llvm::DeadArgumentEliminationPass::surveyFunction (1 samples, 0.04%)</title><rect x="29.2457%" y="437" width="0.0441%" height="15" fill="rgb(225,184,43)" fg:x="663" fg:w="1"/><text x="29.4957%" y="447.50"></text></g><g><title>llvm::DeadArgumentEliminationPass::markLive (1 samples, 0.04%)</title><rect x="29.2457%" y="421" width="0.0441%" height="15" fill="rgb(251,158,41)" fg:x="663" fg:w="1"/><text x="29.4957%" y="431.50"></text></g><g><title>llvm::Function::eraseFromParent (1 samples, 0.04%)</title><rect x="29.3339%" y="421" width="0.0441%" height="15" fill="rgb(234,159,37)" fg:x="665" fg:w="1"/><text x="29.5839%" y="431.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="29.3339%" y="405" width="0.0441%" height="15" fill="rgb(216,204,22)" fg:x="665" fg:w="1"/><text x="29.5839%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::LoopAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="29.3780%" y="325" width="0.0441%" height="15" fill="rgb(214,17,3)" fg:x="666" fg:w="1"/><text x="29.6280%" y="335.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="29.3780%" y="341" width="0.0882%" height="15" fill="rgb(212,111,17)" fg:x="666" fg:w="2"/><text x="29.6280%" y="351.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="29.4221%" y="325" width="0.0441%" height="15" fill="rgb(221,157,24)" fg:x="667" fg:w="1"/><text x="29.6721%" y="335.50"></text></g><g><title>llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt; (1 samples, 0.04%)</title><rect x="29.4221%" y="309" width="0.0441%" height="15" fill="rgb(252,16,13)" fg:x="667" fg:w="1"/><text x="29.6721%" y="319.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::attachNewSubtree (1 samples, 0.04%)</title><rect x="29.4221%" y="293" width="0.0441%" height="15" fill="rgb(221,62,2)" fg:x="667" fg:w="1"/><text x="29.6721%" y="303.50"></text></g><g><title>llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;::DomTreeNodeBase (1 samples, 0.04%)</title><rect x="29.4221%" y="277" width="0.0441%" height="15" fill="rgb(247,87,22)" fg:x="667" fg:w="1"/><text x="29.6721%" y="287.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="29.3780%" y="373" width="0.1323%" height="15" fill="rgb(215,73,9)" fg:x="666" fg:w="3"/><text x="29.6280%" y="383.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="29.3780%" y="357" width="0.1323%" height="15" fill="rgb(207,175,33)" fg:x="666" fg:w="3"/><text x="29.6280%" y="367.50"></text></g><g><title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.04%)</title><rect x="29.4663%" y="341" width="0.0441%" height="15" fill="rgb(243,129,54)" fg:x="668" fg:w="1"/><text x="29.7163%" y="351.50"></text></g><g><title>llvm::BranchProbabilityInfo::computeEestimateBlockWeight (1 samples, 0.04%)</title><rect x="29.4663%" y="325" width="0.0441%" height="15" fill="rgb(227,119,45)" fg:x="668" fg:w="1"/><text x="29.7163%" y="335.50"></text></g><g><title>llvm::function_ref&lt;llvm::BlockFrequencyInfo&amp; (llvm::Function&amp;)&gt;::callback_fn&lt;llvm::GlobalOptPass::run(llvm::Module&amp;, llvm::AnalysisManager&lt;llvm::Module&gt;&amp;)::$_3&gt; (6 samples, 0.26%)</title><rect x="29.3780%" y="421" width="0.2647%" height="15" fill="rgb(205,109,36)" fg:x="666" fg:w="6"/><text x="29.6280%" y="431.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (6 samples, 0.26%)</title><rect x="29.3780%" y="405" width="0.2647%" height="15" fill="rgb(205,6,39)" fg:x="666" fg:w="6"/><text x="29.6280%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (6 samples, 0.26%)</title><rect x="29.3780%" y="389" width="0.2647%" height="15" fill="rgb(221,32,16)" fg:x="666" fg:w="6"/><text x="29.6280%" y="399.50"></text></g><g><title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::initializeRPOT (3 samples, 0.13%)</title><rect x="29.5104%" y="373" width="0.1323%" height="15" fill="rgb(228,144,50)" fg:x="669" fg:w="3"/><text x="29.7604%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::GlobalOptPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (13 samples, 0.57%)</title><rect x="29.2898%" y="469" width="0.5734%" height="15" fill="rgb(229,201,53)" fg:x="664" fg:w="13"/><text x="29.5398%" y="479.50"></text></g><g><title>llvm::GlobalOptPass::run (13 samples, 0.57%)</title><rect x="29.2898%" y="453" width="0.5734%" height="15" fill="rgb(249,153,27)" fg:x="664" fg:w="13"/><text x="29.5398%" y="463.50"></text></g><g><title>optimizeGlobalsInModule (13 samples, 0.57%)</title><rect x="29.2898%" y="437" width="0.5734%" height="15" fill="rgb(227,106,25)" fg:x="664" fg:w="13"/><text x="29.5398%" y="447.50"></text></g><g><title>llvm::removeUnreachableBlocks (5 samples, 0.22%)</title><rect x="29.6427%" y="421" width="0.2206%" height="15" fill="rgb(230,65,29)" fg:x="672" fg:w="5"/><text x="29.8927%" y="431.50"></text></g><g><title>llvm::DomTreeUpdater::flush (2 samples, 0.09%)</title><rect x="29.9074%" y="421" width="0.0882%" height="15" fill="rgb(221,57,46)" fg:x="678" fg:w="2"/><text x="30.1574%" y="431.50"></text></g><g><title>llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::applyUpdates (2 samples, 0.09%)</title><rect x="29.9074%" y="405" width="0.0882%" height="15" fill="rgb(229,161,17)" fg:x="678" fg:w="2"/><text x="30.1574%" y="415.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::ApplyUpdates (2 samples, 0.09%)</title><rect x="29.9074%" y="389" width="0.0882%" height="15" fill="rgb(222,213,11)" fg:x="678" fg:w="2"/><text x="30.1574%" y="399.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::DeleteUnreachable (1 samples, 0.04%)</title><rect x="29.9515%" y="373" width="0.0441%" height="15" fill="rgb(235,35,13)" fg:x="679" fg:w="1"/><text x="30.2015%" y="383.50"></text></g><g><title>llvm::SCCPInstVisitor::resolvedUndefsIn (2 samples, 0.09%)</title><rect x="29.9956%" y="421" width="0.0882%" height="15" fill="rgb(233,158,34)" fg:x="680" fg:w="2"/><text x="30.2456%" y="431.50"></text></g><g><title>llvm::SCCPInstVisitor::handleCallArguments (2 samples, 0.09%)</title><rect x="30.2161%" y="405" width="0.0882%" height="15" fill="rgb(215,151,48)" fg:x="685" fg:w="2"/><text x="30.4661%" y="415.50"></text></g><g><title>llvm::SCCPInstVisitor::handleCallResult (1 samples, 0.04%)</title><rect x="30.3044%" y="405" width="0.0441%" height="15" fill="rgb(229,84,14)" fg:x="687" fg:w="1"/><text x="30.5544%" y="415.50"></text></g><g><title>llvm::SCCPInstVisitor::visitBinaryOperator (1 samples, 0.04%)</title><rect x="30.3485%" y="405" width="0.0441%" height="15" fill="rgb(229,68,14)" fg:x="688" fg:w="1"/><text x="30.5985%" y="415.50"></text></g><g><title>llvm::SCCPInstVisitor::visitGetElementPtrInst (1 samples, 0.04%)</title><rect x="30.3926%" y="405" width="0.0441%" height="15" fill="rgb(243,106,26)" fg:x="689" fg:w="1"/><text x="30.6426%" y="415.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::DenseMapInfo&lt;llvm::Value*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElement&gt; &gt;, llvm::Value*, llvm::ValueLatticeElement, llvm::DenseMapInfo&lt;llvm::Value*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElement&gt; &gt;::moveFromOldBuckets (1 samples, 0.04%)</title><rect x="30.3926%" y="389" width="0.0441%" height="15" fill="rgb(206,45,38)" fg:x="689" fg:w="1"/><text x="30.6426%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="30.3926%" y="373" width="0.0441%" height="15" fill="rgb(226,6,15)" fg:x="689" fg:w="1"/><text x="30.6426%" y="383.50"></text></g><g><title>llvm::SCCPInstVisitor::visitLoadInst (2 samples, 0.09%)</title><rect x="30.4367%" y="405" width="0.0882%" height="15" fill="rgb(232,22,54)" fg:x="690" fg:w="2"/><text x="30.6867%" y="415.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, llvm::ValueLatticeElement, llvm::DenseMapInfo&lt;llvm::Value*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElement&gt; &gt;, llvm::Value*, llvm::ValueLatticeElement, llvm::DenseMapInfo&lt;llvm::Value*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueLatticeElement&gt; &gt;::moveFromOldBuckets (1 samples, 0.04%)</title><rect x="30.4808%" y="389" width="0.0441%" height="15" fill="rgb(229,222,32)" fg:x="691" fg:w="1"/><text x="30.7308%" y="399.50"></text></g><g><title>llvm::SCCPInstVisitor::visitTerminator (3 samples, 0.13%)</title><rect x="30.5249%" y="405" width="0.1323%" height="15" fill="rgb(228,62,29)" fg:x="692" fg:w="3"/><text x="30.7749%" y="415.50"></text></g><g><title>llvm::SCCPInstVisitor::visitPHINode (1 samples, 0.04%)</title><rect x="30.6131%" y="389" width="0.0441%" height="15" fill="rgb(251,103,34)" fg:x="694" fg:w="1"/><text x="30.8631%" y="399.50"></text></g><g><title>llvm::SCCPInstVisitor::solve (14 samples, 0.62%)</title><rect x="30.0838%" y="421" width="0.6176%" height="15" fill="rgb(233,12,30)" fg:x="682" fg:w="14"/><text x="30.3338%" y="431.50"></text></g><g><title>llvm::SmallPtrSetImplBase::insert_imp_big (1 samples, 0.04%)</title><rect x="30.6573%" y="405" width="0.0441%" height="15" fill="rgb(238,52,0)" fg:x="695" fg:w="1"/><text x="30.9073%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="30.7014%" y="405" width="0.0441%" height="15" fill="rgb(223,98,5)" fg:x="696" fg:w="1"/><text x="30.9514%" y="415.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const*, llvm::PredicateBase const*, llvm::DenseMapInfo&lt;llvm::Value const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value const*, llvm::PredicateBase const*&gt; &gt;, llvm::Value const*, llvm::PredicateBase const*, llvm::DenseMapInfo&lt;llvm::Value const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value const*, llvm::PredicateBase const*&gt; &gt;::try_emplace&lt;llvm::PredicateBase const*&gt; (1 samples, 0.04%)</title><rect x="30.8337%" y="357" width="0.0441%" height="15" fill="rgb(228,75,37)" fg:x="699" fg:w="1"/><text x="31.0837%" y="367.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Value const*, llvm::PredicateBase const*, llvm::DenseMapInfo&lt;llvm::Value const*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value const*, llvm::PredicateBase const*&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="30.8337%" y="341" width="0.0441%" height="15" fill="rgb(205,115,49)" fg:x="699" fg:w="1"/><text x="31.0837%" y="351.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::IPSCCPPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (25 samples, 1.10%)</title><rect x="29.8633%" y="469" width="1.1028%" height="15" fill="rgb(250,154,43)" fg:x="677" fg:w="25"/><text x="30.1133%" y="479.50"></text></g><g><title>llvm::IPSCCPPass::run (25 samples, 1.10%)</title><rect x="29.8633%" y="453" width="1.1028%" height="15" fill="rgb(226,43,29)" fg:x="677" fg:w="25"/><text x="30.1133%" y="463.50"></text></g><g><title>llvm::runIPSCCP (25 samples, 1.10%)</title><rect x="29.8633%" y="437" width="1.1028%" height="15" fill="rgb(249,228,39)" fg:x="677" fg:w="25"/><text x="30.1133%" y="447.50"></text></g><g><title>llvm::function_ref&lt;llvm::AnalysisResultsForFn (llvm::Function&amp;)&gt;::callback_fn&lt;llvm::IPSCCPPass::run(llvm::Module&amp;, llvm::AnalysisManager&lt;llvm::Module&gt;&amp;)::$_1&gt; (6 samples, 0.26%)</title><rect x="30.7014%" y="421" width="0.2647%" height="15" fill="rgb(216,79,43)" fg:x="696" fg:w="6"/><text x="30.9514%" y="431.50"></text></g><g><title>llvm::PredicateInfoBuilder::buildPredicateInfo (5 samples, 0.22%)</title><rect x="30.7455%" y="405" width="0.2206%" height="15" fill="rgb(228,95,12)" fg:x="697" fg:w="5"/><text x="30.9955%" y="415.50"></text></g><g><title>llvm::PredicateInfoBuilder::renameUses (4 samples, 0.18%)</title><rect x="30.7896%" y="389" width="0.1764%" height="15" fill="rgb(249,221,15)" fg:x="698" fg:w="4"/><text x="31.0396%" y="399.50"></text></g><g><title>llvm::PredicateInfoBuilder::materializeStack (3 samples, 0.13%)</title><rect x="30.8337%" y="373" width="0.1323%" height="15" fill="rgb(233,34,13)" fg:x="699" fg:w="3"/><text x="31.0837%" y="383.50"></text></g><g><title>llvm::Intrinsic::getDeclaration (2 samples, 0.09%)</title><rect x="30.8778%" y="357" width="0.0882%" height="15" fill="rgb(214,103,39)" fg:x="700" fg:w="2"/><text x="31.1278%" y="367.50"></text></g><g><title>DecodeFixedType (1 samples, 0.04%)</title><rect x="30.9219%" y="341" width="0.0441%" height="15" fill="rgb(251,126,39)" fg:x="701" fg:w="1"/><text x="31.1719%" y="351.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::InferFunctionAttrsPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (1 samples, 0.04%)</title><rect x="30.9660%" y="469" width="0.0441%" height="15" fill="rgb(214,216,36)" fg:x="702" fg:w="1"/><text x="31.2160%" y="479.50"></text></g><g><title>llvm::InferFunctionAttrsPass::run (1 samples, 0.04%)</title><rect x="30.9660%" y="453" width="0.0441%" height="15" fill="rgb(220,221,8)" fg:x="702" fg:w="1"/><text x="31.2160%" y="463.50"></text></g><g><title>llvm::inferAttributesFromOthers (1 samples, 0.04%)</title><rect x="30.9660%" y="437" width="0.0441%" height="15" fill="rgb(240,216,3)" fg:x="702" fg:w="1"/><text x="31.2160%" y="447.50"></text></g><g><title>llvm::AttributeList::addAttributeAtIndex (1 samples, 0.04%)</title><rect x="30.9660%" y="421" width="0.0441%" height="15" fill="rgb(232,218,17)" fg:x="702" fg:w="1"/><text x="31.2160%" y="431.50"></text></g><g><title>llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Function&gt;, llvm::Module&gt;::Result::invalidate (2 samples, 0.09%)</title><rect x="31.0101%" y="405" width="0.0882%" height="15" fill="rgb(229,163,45)" fg:x="703" fg:w="2"/><text x="31.2601%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::invalidate (3 samples, 0.13%)</title><rect x="31.0101%" y="421" width="0.1323%" height="15" fill="rgb(231,110,42)" fg:x="703" fg:w="3"/><text x="31.2601%" y="431.50"></text></g><g><title>llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::Module&gt;::Result::invalidate (1 samples, 0.04%)</title><rect x="31.0984%" y="405" width="0.0441%" height="15" fill="rgb(208,170,48)" fg:x="705" fg:w="1"/><text x="31.3484%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (2 samples, 0.09%)</title><rect x="31.1425%" y="389" width="0.0882%" height="15" fill="rgb(239,116,25)" fg:x="706" fg:w="2"/><text x="31.3925%" y="399.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (3 samples, 0.13%)</title><rect x="31.1425%" y="421" width="0.1323%" height="15" fill="rgb(219,200,50)" fg:x="706" fg:w="3"/><text x="31.3925%" y="431.50"></text></g><g><title>llvm::ModuleToFunctionPassAdaptor::run (3 samples, 0.13%)</title><rect x="31.1425%" y="405" width="0.1323%" height="15" fill="rgb(245,200,0)" fg:x="706" fg:w="3"/><text x="31.3925%" y="415.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::InvalidateAnalysisPass&lt;llvm::AAManager&gt;, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="31.2307%" y="389" width="0.0441%" height="15" fill="rgb(245,119,33)" fg:x="708" fg:w="1"/><text x="31.4807%" y="399.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="31.2748%" y="389" width="0.1323%" height="15" fill="rgb(231,125,12)" fg:x="709" fg:w="3"/><text x="31.5248%" y="399.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="31.3189%" y="373" width="0.0882%" height="15" fill="rgb(216,96,41)" fg:x="710" fg:w="2"/><text x="31.5689%" y="383.50"></text></g><g><title>std::__detail::_List_node_base::_M_hook (1 samples, 0.04%)</title><rect x="31.3630%" y="357" width="0.0441%" height="15" fill="rgb(248,43,45)" fg:x="711" fg:w="1"/><text x="31.6130%" y="367.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::invalidate (1 samples, 0.04%)</title><rect x="31.4071%" y="389" width="0.0441%" height="15" fill="rgb(217,222,7)" fg:x="712" fg:w="1"/><text x="31.6571%" y="399.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::LazyCallGraph::SCC, llvm::FunctionAnalysisManagerCGSCCProxy, llvm::FunctionAnalysisManagerCGSCCProxy::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="31.4071%" y="373" width="0.0441%" height="15" fill="rgb(233,28,6)" fg:x="712" fg:w="1"/><text x="31.6571%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (1 samples, 0.04%)</title><rect x="31.4071%" y="357" width="0.0441%" height="15" fill="rgb(231,218,15)" fg:x="712" fg:w="1"/><text x="31.6571%" y="367.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::OptimizationRemarkEmitterAnalysis, llvm::OptimizationRemarkEmitter, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="31.4071%" y="341" width="0.0441%" height="15" fill="rgb(226,171,48)" fg:x="712" fg:w="1"/><text x="31.6571%" y="351.50"></text></g><g><title>llvm::DevirtSCCRepeatedPass::run (3 samples, 0.13%)</title><rect x="31.4513%" y="373" width="0.1323%" height="15" fill="rgb(235,201,9)" fg:x="713" fg:w="3"/><text x="31.7013%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (1 samples, 0.04%)</title><rect x="31.8041%" y="357" width="0.0441%" height="15" fill="rgb(217,80,15)" fg:x="721" fg:w="1"/><text x="32.0541%" y="367.50"></text></g><g><title>llvm::Pass::doInitialization (1 samples, 0.04%)</title><rect x="31.8041%" y="341" width="0.0441%" height="15" fill="rgb(219,152,8)" fg:x="721" fg:w="1"/><text x="32.0541%" y="351.50"></text></g><g><title>llvm::Pass::doInitialization (1 samples, 0.04%)</title><rect x="31.8483%" y="357" width="0.0441%" height="15" fill="rgb(243,107,38)" fg:x="722" fg:w="1"/><text x="32.0983%" y="367.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="31.9365%" y="325" width="0.0882%" height="15" fill="rgb(231,17,5)" fg:x="724" fg:w="2"/><text x="32.1865%" y="335.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="31.9806%" y="309" width="0.0441%" height="15" fill="rgb(209,25,54)" fg:x="725" fg:w="1"/><text x="32.2306%" y="319.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="31.9806%" y="293" width="0.0441%" height="15" fill="rgb(219,0,2)" fg:x="725" fg:w="1"/><text x="32.2306%" y="303.50"></text></g><g><title>llvm::AttributeFuncs::updateMinLegalVectorWidthAttr (1 samples, 0.04%)</title><rect x="32.0247%" y="325" width="0.0441%" height="15" fill="rgb(246,9,5)" fg:x="726" fg:w="1"/><text x="32.2747%" y="335.50"></text></g><g><title>llvm::Function::getFnAttribute (1 samples, 0.04%)</title><rect x="32.0247%" y="309" width="0.0441%" height="15" fill="rgb(226,159,4)" fg:x="726" fg:w="1"/><text x="32.2747%" y="319.50"></text></g><g><title>llvm::Function::Function (1 samples, 0.04%)</title><rect x="32.0688%" y="325" width="0.0441%" height="15" fill="rgb(219,175,34)" fg:x="727" fg:w="1"/><text x="32.3188%" y="335.50"></text></g><g><title>llvm::Function::eraseFromParent (2 samples, 0.09%)</title><rect x="32.1129%" y="325" width="0.0882%" height="15" fill="rgb(236,10,46)" fg:x="728" fg:w="2"/><text x="32.3629%" y="335.50"></text></g><g><title>llvm::Function::~Function (2 samples, 0.09%)</title><rect x="32.1129%" y="309" width="0.0882%" height="15" fill="rgb(240,211,16)" fg:x="728" fg:w="2"/><text x="32.3629%" y="319.50"></text></g><g><title>llvm::Function::removeParamAttr (1 samples, 0.04%)</title><rect x="32.2011%" y="325" width="0.0441%" height="15" fill="rgb(205,3,43)" fg:x="730" fg:w="1"/><text x="32.4511%" y="335.50"></text></g><g><title>llvm::AttributeList::getImpl (1 samples, 0.04%)</title><rect x="32.2011%" y="309" width="0.0441%" height="15" fill="rgb(245,7,22)" fg:x="730" fg:w="1"/><text x="32.4511%" y="319.50"></text></g><g><title>llvm::PromoteMemToReg (1 samples, 0.04%)</title><rect x="32.2453%" y="325" width="0.0441%" height="15" fill="rgb(239,132,32)" fg:x="731" fg:w="1"/><text x="32.4953%" y="335.50"></text></g><g><title>isKnownNonZero (1 samples, 0.04%)</title><rect x="32.2453%" y="309" width="0.0441%" height="15" fill="rgb(228,202,34)" fg:x="731" fg:w="1"/><text x="32.4953%" y="319.50"></text></g><g><title>llvm::AssumptionCache::scanFunction (1 samples, 0.04%)</title><rect x="32.2453%" y="293" width="0.0441%" height="15" fill="rgb(254,200,22)" fg:x="731" fg:w="1"/><text x="32.4953%" y="303.50"></text></g><g><title>llvm::StringMapImpl::RehashTable (1 samples, 0.04%)</title><rect x="32.3335%" y="293" width="0.0441%" height="15" fill="rgb(219,10,39)" fg:x="733" fg:w="1"/><text x="32.5835%" y="303.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::ArgumentPromotionPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (13 samples, 0.57%)</title><rect x="31.8924%" y="357" width="0.5734%" height="15" fill="rgb(226,210,39)" fg:x="723" fg:w="13"/><text x="32.1424%" y="367.50"></text></g><g><title>llvm::ArgumentPromotionPass::run (13 samples, 0.57%)</title><rect x="31.8924%" y="341" width="0.5734%" height="15" fill="rgb(208,219,16)" fg:x="723" fg:w="13"/><text x="32.1424%" y="351.50"></text></g><g><title>llvm::ValueSymbolTable::reinsertValue (4 samples, 0.18%)</title><rect x="32.2894%" y="325" width="0.1764%" height="15" fill="rgb(216,158,51)" fg:x="732" fg:w="4"/><text x="32.5394%" y="335.50"></text></g><g><title>llvm::ValueSymbolTable::makeUniqueName (3 samples, 0.13%)</title><rect x="32.3335%" y="309" width="0.1323%" height="15" fill="rgb(233,14,44)" fg:x="733" fg:w="3"/><text x="32.5835%" y="319.50"></text></g><g><title>llvm::Triple::Triple (2 samples, 0.09%)</title><rect x="32.3776%" y="293" width="0.0882%" height="15" fill="rgb(237,97,39)" fg:x="734" fg:w="2"/><text x="32.6276%" y="303.50"></text></g><g><title>parseSubArch (2 samples, 0.09%)</title><rect x="32.3776%" y="277" width="0.0882%" height="15" fill="rgb(218,198,43)" fg:x="734" fg:w="2"/><text x="32.6276%" y="287.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::BasicAA, llvm::BasicAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="32.5981%" y="309" width="0.0441%" height="15" fill="rgb(231,104,20)" fg:x="739" fg:w="1"/><text x="32.8481%" y="319.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::DemandedBitsAnalysis, llvm::DemandedBits, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, false&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="32.6423%" y="309" width="0.0441%" height="15" fill="rgb(254,36,13)" fg:x="740" fg:w="1"/><text x="32.8923%" y="319.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::MemorySSAAnalysis, llvm::MemorySSAAnalysis::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (2 samples, 0.09%)</title><rect x="32.6864%" y="309" width="0.0882%" height="15" fill="rgb(248,14,50)" fg:x="741" fg:w="2"/><text x="32.9364%" y="319.50"></text></g><g><title>llvm::MemorySSA::~MemorySSA (2 samples, 0.09%)</title><rect x="32.6864%" y="293" width="0.0882%" height="15" fill="rgb(217,107,29)" fg:x="741" fg:w="2"/><text x="32.9364%" y="303.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="32.7746%" y="309" width="0.0441%" height="15" fill="rgb(251,169,33)" fg:x="743" fg:w="1"/><text x="33.0246%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (8 samples, 0.35%)</title><rect x="32.5099%" y="325" width="0.3529%" height="15" fill="rgb(217,108,32)" fg:x="737" fg:w="8"/><text x="32.7599%" y="335.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PostDominatorTree, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="32.8187%" y="309" width="0.0441%" height="15" fill="rgb(219,66,42)" fg:x="744" fg:w="1"/><text x="33.0687%" y="319.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="33.3480%" y="309" width="0.0441%" height="15" fill="rgb(206,180,7)" fg:x="756" fg:w="1"/><text x="33.5980%" y="319.50"></text></g><g><title>__tls_get_addr (1 samples, 0.04%)</title><rect x="33.3921%" y="309" width="0.0441%" height="15" fill="rgb(208,226,31)" fg:x="757" fg:w="1"/><text x="33.6421%" y="319.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::DominatorTree, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="33.4363%" y="309" width="0.0441%" height="15" fill="rgb(218,26,49)" fg:x="758" fg:w="1"/><text x="33.6863%" y="319.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::DominatorTree, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="33.4804%" y="309" width="0.0441%" height="15" fill="rgb(233,197,48)" fg:x="759" fg:w="1"/><text x="33.7304%" y="319.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::LazyValueAnalysis, llvm::LazyValueInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="33.5245%" y="309" width="0.0441%" height="15" fill="rgb(252,181,51)" fg:x="760" fg:w="1"/><text x="33.7745%" y="319.50"></text></g><g><title>llvm::LazyValueInfo::~LazyValueInfo (1 samples, 0.04%)</title><rect x="33.5245%" y="293" width="0.0441%" height="15" fill="rgb(253,90,19)" fg:x="760" fg:w="1"/><text x="33.7745%" y="303.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::MemorySSAAnalysis, llvm::MemorySSAAnalysis::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (5 samples, 0.22%)</title><rect x="33.5686%" y="309" width="0.2206%" height="15" fill="rgb(215,171,30)" fg:x="761" fg:w="5"/><text x="33.8186%" y="319.50"></text></g><g><title>llvm::MemorySSA::~MemorySSA (5 samples, 0.22%)</title><rect x="33.5686%" y="293" width="0.2206%" height="15" fill="rgb(214,222,9)" fg:x="761" fg:w="5"/><text x="33.8186%" y="303.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="33.7450%" y="277" width="0.0441%" height="15" fill="rgb(223,3,22)" fg:x="765" fg:w="1"/><text x="33.9950%" y="287.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::OptimizationRemarkEmitterAnalysis, llvm::OptimizationRemarkEmitter, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="33.7891%" y="309" width="0.0441%" height="15" fill="rgb(225,196,46)" fg:x="766" fg:w="1"/><text x="34.0391%" y="319.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="33.8333%" y="309" width="0.0441%" height="15" fill="rgb(209,110,37)" fg:x="767" fg:w="1"/><text x="34.0833%" y="319.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::ScalarEvolutionAnalysis, llvm::ScalarEvolution, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="33.8774%" y="309" width="0.0441%" height="15" fill="rgb(249,89,12)" fg:x="768" fg:w="1"/><text x="34.1274%" y="319.50"></text></g><g><title>llvm::ScalarEvolution::~ScalarEvolution (1 samples, 0.04%)</title><rect x="33.8774%" y="293" width="0.0441%" height="15" fill="rgb(226,27,33)" fg:x="768" fg:w="1"/><text x="34.1274%" y="303.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::FindRoots (3 samples, 0.13%)</title><rect x="34.4949%" y="229" width="0.1323%" height="15" fill="rgb(213,82,22)" fg:x="782" fg:w="3"/><text x="34.7449%" y="239.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::doFullDFSWalk&lt;bool (*)(llvm::BasicBlock*, llvm::BasicBlock*)&gt; (1 samples, 0.04%)</title><rect x="34.6273%" y="229" width="0.0441%" height="15" fill="rgb(248,140,0)" fg:x="785" fg:w="1"/><text x="34.8773%" y="239.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (7 samples, 0.31%)</title><rect x="34.4949%" y="277" width="0.3088%" height="15" fill="rgb(228,106,3)" fg:x="782" fg:w="7"/><text x="34.7449%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (7 samples, 0.31%)</title><rect x="34.4949%" y="261" width="0.3088%" height="15" fill="rgb(209,23,37)" fg:x="782" fg:w="7"/><text x="34.7449%" y="271.50"></text></g><g><title>llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt; (7 samples, 0.31%)</title><rect x="34.4949%" y="245" width="0.3088%" height="15" fill="rgb(241,93,50)" fg:x="782" fg:w="7"/><text x="34.7449%" y="255.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::runSemiNCA (3 samples, 0.13%)</title><rect x="34.6714%" y="229" width="0.1323%" height="15" fill="rgb(253,46,43)" fg:x="786" fg:w="3"/><text x="34.9214%" y="239.50"></text></g><g><title>llvm::IDFCalculatorBase&lt;llvm::BasicBlock, true&gt;::calculate (1 samples, 0.04%)</title><rect x="34.8037%" y="277" width="0.0441%" height="15" fill="rgb(226,206,43)" fg:x="789" fg:w="1"/><text x="35.0537%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::ADCEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (22 samples, 0.97%)</title><rect x="33.9215%" y="309" width="0.9704%" height="15" fill="rgb(217,54,7)" fg:x="769" fg:w="22"/><text x="34.1715%" y="319.50"></text></g><g><title>llvm::ADCEPass::run (22 samples, 0.97%)</title><rect x="33.9215%" y="293" width="0.9704%" height="15" fill="rgb(223,5,52)" fg:x="769" fg:w="22"/><text x="34.1715%" y="303.50"></text></g><g><title>llvm::SmallPtrSetImplBase::insert_imp_big (1 samples, 0.04%)</title><rect x="34.8478%" y="277" width="0.0441%" height="15" fill="rgb(206,52,46)" fg:x="790" fg:w="1"/><text x="35.0978%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::AggressiveInstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="34.8919%" y="309" width="0.0441%" height="15" fill="rgb(253,136,11)" fg:x="791" fg:w="1"/><text x="35.1419%" y="319.50"></text></g><g><title>runImpl (1 samples, 0.04%)</title><rect x="34.8919%" y="293" width="0.0441%" height="15" fill="rgb(208,106,33)" fg:x="791" fg:w="1"/><text x="35.1419%" y="303.50"></text></g><g><title>llvm::DemandedBits::determineLiveOperandBits (2 samples, 0.09%)</title><rect x="35.3330%" y="261" width="0.0882%" height="15" fill="rgb(206,54,4)" fg:x="801" fg:w="2"/><text x="35.5830%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::BDCEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (12 samples, 0.53%)</title><rect x="34.9360%" y="309" width="0.5293%" height="15" fill="rgb(213,3,15)" fg:x="792" fg:w="12"/><text x="35.1860%" y="319.50"></text></g><g><title>bitTrackingDCE (12 samples, 0.53%)</title><rect x="34.9360%" y="293" width="0.5293%" height="15" fill="rgb(252,211,39)" fg:x="792" fg:w="12"/><text x="35.1860%" y="303.50"></text></g><g><title>llvm::DemandedBits::isInstructionDead (9 samples, 0.40%)</title><rect x="35.0684%" y="277" width="0.3970%" height="15" fill="rgb(223,6,36)" fg:x="795" fg:w="9"/><text x="35.3184%" y="287.50"></text></g><g><title>llvm::SmallDenseMap&lt;llvm::Instruction*, llvm::detail::DenseSetEmpty, 16u, llvm::DenseMapInfo&lt;llvm::Instruction*, void&gt;, llvm::detail::DenseSetPair&lt;llvm::Instruction*&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="35.4213%" y="261" width="0.0441%" height="15" fill="rgb(252,169,45)" fg:x="803" fg:w="1"/><text x="35.6713%" y="271.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::Instruction*, llvm::detail::DenseSetEmpty, 16u, llvm::DenseMapInfo&lt;llvm::Instruction*, void&gt;, llvm::detail::DenseSetPair&lt;llvm::Instruction*&gt; &gt;, llvm::Instruction*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo&lt;llvm::Instruction*, void&gt;, llvm::detail::DenseSetPair&lt;llvm::Instruction*&gt; &gt;::moveFromOldBuckets (1 samples, 0.04%)</title><rect x="35.4213%" y="245" width="0.0441%" height="15" fill="rgb(212,48,26)" fg:x="803" fg:w="1"/><text x="35.6713%" y="255.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::CoroElidePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="35.4654%" y="309" width="0.0441%" height="15" fill="rgb(251,102,48)" fg:x="804" fg:w="1"/><text x="35.7154%" y="319.50"></text></g><g><title>llvm::ConstantRange::makeGuaranteedNoWrapRegion (1 samples, 0.04%)</title><rect x="35.6859%" y="261" width="0.0441%" height="15" fill="rgb(243,208,16)" fg:x="809" fg:w="1"/><text x="35.9359%" y="271.50"></text></g><g><title>llvm::ConstantRange::getUnsignedMax (1 samples, 0.04%)</title><rect x="35.6859%" y="245" width="0.0441%" height="15" fill="rgb(219,96,24)" fg:x="809" fg:w="1"/><text x="35.9359%" y="255.50"></text></g><g><title>llvm::LazyValueInfo::getConstant (6 samples, 0.26%)</title><rect x="35.7300%" y="261" width="0.2647%" height="15" fill="rgb(219,33,29)" fg:x="810" fg:w="6"/><text x="35.9800%" y="271.50"></text></g><g><title>llvm::ConstantRange::binaryOp (1 samples, 0.04%)</title><rect x="36.1712%" y="245" width="0.0441%" height="15" fill="rgb(223,176,5)" fg:x="820" fg:w="1"/><text x="36.4212%" y="255.50"></text></g><g><title>llvm::ConstantRange::shl (1 samples, 0.04%)</title><rect x="36.1712%" y="229" width="0.0441%" height="15" fill="rgb(228,140,14)" fg:x="820" fg:w="1"/><text x="36.4212%" y="239.50"></text></g><g><title>llvm::LazyValueInfo::getConstantOnEdge (6 samples, 0.26%)</title><rect x="35.9947%" y="261" width="0.2647%" height="15" fill="rgb(217,179,31)" fg:x="816" fg:w="6"/><text x="36.2447%" y="271.50"></text></g><g><title>llvm::SmallDenseMap&lt;llvm::AssertingVH&lt;llvm::Value&gt;, llvm::ValueLatticeElement, 4u, llvm::DenseMapInfo&lt;llvm::AssertingVH&lt;llvm::Value&gt;, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AssertingVH&lt;llvm::Value&gt;, llvm::ValueLatticeElement&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="36.2153%" y="245" width="0.0441%" height="15" fill="rgb(230,9,30)" fg:x="821" fg:w="1"/><text x="36.4653%" y="255.50"></text></g><g><title>llvm::LazyValueInfo::getConstantRange (1 samples, 0.04%)</title><rect x="36.2594%" y="261" width="0.0441%" height="15" fill="rgb(230,136,20)" fg:x="822" fg:w="1"/><text x="36.5094%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::CorrelatedValuePropagationPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (21 samples, 0.93%)</title><rect x="35.5095%" y="309" width="0.9263%" height="15" fill="rgb(215,210,22)" fg:x="805" fg:w="21"/><text x="35.7595%" y="319.50"></text></g><g><title>llvm::CorrelatedValuePropagationPass::run (21 samples, 0.93%)</title><rect x="35.5095%" y="293" width="0.9263%" height="15" fill="rgb(218,43,5)" fg:x="805" fg:w="21"/><text x="35.7595%" y="303.50"></text></g><g><title>runImpl (20 samples, 0.88%)</title><rect x="35.5536%" y="277" width="0.8822%" height="15" fill="rgb(216,11,5)" fg:x="806" fg:w="20"/><text x="35.8036%" y="287.50"></text></g><g><title>llvm::LazyValueInfo::getPredicateAt (3 samples, 0.13%)</title><rect x="36.3035%" y="261" width="0.1323%" height="15" fill="rgb(209,82,29)" fg:x="823" fg:w="3"/><text x="36.5535%" y="271.50"></text></g><g><title>llvm::isValidAssumeForContext (1 samples, 0.04%)</title><rect x="36.3917%" y="245" width="0.0441%" height="15" fill="rgb(244,115,12)" fg:x="825" fg:w="1"/><text x="36.6417%" y="255.50"></text></g><g><title>llvm::AAResults::getModRefInfo (3 samples, 0.13%)</title><rect x="36.6123%" y="293" width="0.1323%" height="15" fill="rgb(222,82,18)" fg:x="830" fg:w="3"/><text x="36.8623%" y="303.50"></text></g><g><title>llvm::BasicAAResult::getModRefInfo (3 samples, 0.13%)</title><rect x="36.6123%" y="277" width="0.1323%" height="15" fill="rgb(249,227,8)" fg:x="830" fg:w="3"/><text x="36.8623%" y="287.50"></text></g><g><title>llvm::isPotentiallyReachable (1 samples, 0.04%)</title><rect x="36.7005%" y="261" width="0.0441%" height="15" fill="rgb(253,141,45)" fg:x="832" fg:w="1"/><text x="36.9505%" y="271.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="36.8328%" y="261" width="0.0441%" height="15" fill="rgb(234,184,4)" fg:x="835" fg:w="1"/><text x="37.0828%" y="271.50"></text></g><g><title>llvm::AAResults::getModRefInfo (1 samples, 0.04%)</title><rect x="36.8769%" y="261" width="0.0441%" height="15" fill="rgb(218,194,23)" fg:x="836" fg:w="1"/><text x="37.1269%" y="271.50"></text></g><g><title>llvm::BasicAAResult::getModRefInfo (1 samples, 0.04%)</title><rect x="36.8769%" y="245" width="0.0441%" height="15" fill="rgb(235,66,41)" fg:x="836" fg:w="1"/><text x="37.1269%" y="255.50"></text></g><g><title>llvm::MemorySSA::ensureOptimizedUses (5 samples, 0.22%)</title><rect x="36.7446%" y="293" width="0.2206%" height="15" fill="rgb(245,217,1)" fg:x="833" fg:w="5"/><text x="36.9946%" y="303.50"></text></g><g><title>llvm::MemorySSA::OptimizeUses::optimizeUses (5 samples, 0.22%)</title><rect x="36.7446%" y="277" width="0.2206%" height="15" fill="rgb(229,91,1)" fg:x="833" fg:w="5"/><text x="36.9946%" y="287.50"></text></g><g><title>llvm::MemoryLocation::getOrNone (1 samples, 0.04%)</title><rect x="36.9210%" y="261" width="0.0441%" height="15" fill="rgb(207,101,30)" fg:x="837" fg:w="1"/><text x="37.1710%" y="271.50"></text></g><g><title>llvm::PreservedAnalyses::preserve (1 samples, 0.04%)</title><rect x="36.9652%" y="293" width="0.0441%" height="15" fill="rgb(223,82,49)" fg:x="838" fg:w="1"/><text x="37.2152%" y="303.50"></text></g><g><title>llvm::ReversePostOrderTraversal&lt;llvm::Function const*, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;::Initialize (1 samples, 0.04%)</title><rect x="37.0093%" y="293" width="0.0441%" height="15" fill="rgb(218,167,17)" fg:x="839" fg:w="1"/><text x="37.2593%" y="303.50"></text></g><g><title>llvm::getFreedOperand (1 samples, 0.04%)</title><rect x="37.0534%" y="293" width="0.0441%" height="15" fill="rgb(208,103,14)" fg:x="840" fg:w="1"/><text x="37.3034%" y="303.50"></text></g><g><title>llvm::getUnderlyingObject (1 samples, 0.04%)</title><rect x="37.0975%" y="293" width="0.0441%" height="15" fill="rgb(238,20,8)" fg:x="841" fg:w="1"/><text x="37.3475%" y="303.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::DSEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (18 samples, 0.79%)</title><rect x="36.4358%" y="309" width="0.7940%" height="15" fill="rgb(218,80,54)" fg:x="826" fg:w="18"/><text x="36.6858%" y="319.50"></text></g><g><title>llvm::post_order&lt;llvm::Function*&gt; (2 samples, 0.09%)</title><rect x="37.1416%" y="293" width="0.0882%" height="15" fill="rgb(240,144,17)" fg:x="842" fg:w="2"/><text x="37.3916%" y="303.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="37.1857%" y="277" width="0.0441%" height="15" fill="rgb(245,27,50)" fg:x="843" fg:w="1"/><text x="37.4357%" y="287.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::getModRefBehavior (1 samples, 0.04%)</title><rect x="37.4945%" y="245" width="0.0441%" height="15" fill="rgb(251,51,7)" fg:x="850" fg:w="1"/><text x="37.7445%" y="255.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::GlobalsAAResult&gt;::getModRefBehavior (1 samples, 0.04%)</title><rect x="37.4945%" y="229" width="0.0441%" height="15" fill="rgb(245,217,29)" fg:x="850" fg:w="1"/><text x="37.7445%" y="239.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (6 samples, 0.26%)</title><rect x="37.3180%" y="293" width="0.2647%" height="15" fill="rgb(221,176,29)" fg:x="846" fg:w="6"/><text x="37.5680%" y="303.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::MemorySSAAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (5 samples, 0.22%)</title><rect x="37.3622%" y="277" width="0.2206%" height="15" fill="rgb(212,180,24)" fg:x="847" fg:w="5"/><text x="37.6122%" y="287.50"></text></g><g><title>llvm::MemorySSA::buildMemorySSA (4 samples, 0.18%)</title><rect x="37.4063%" y="261" width="0.1764%" height="15" fill="rgb(254,24,2)" fg:x="848" fg:w="4"/><text x="37.6563%" y="271.50"></text></g><g><title>llvm::IDFCalculatorBase&lt;llvm::BasicBlock, false&gt;::calculate (1 samples, 0.04%)</title><rect x="37.5386%" y="245" width="0.0441%" height="15" fill="rgb(230,100,2)" fg:x="851" fg:w="1"/><text x="37.7886%" y="255.50"></text></g><g><title>llvm::ScopedHashTable&lt;(anonymous namespace)::SimpleValue, llvm::Value*, llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue, void&gt;, llvm::RecyclingAllocator&lt;llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul, 128ul&gt;, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;, 32ul, 8ul&gt; &gt;::insert (2 samples, 0.09%)</title><rect x="37.5827%" y="293" width="0.0882%" height="15" fill="rgb(219,142,25)" fg:x="852" fg:w="2"/><text x="37.8327%" y="303.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*, llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue, void&gt;, llvm::detail::DenseMapPair&lt;(anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*&gt; &gt;, (anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*, llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue, void&gt;, llvm::detail::DenseMapPair&lt;(anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*&gt; &gt;::LookupBucketFor&lt;(anonymous namespace)::SimpleValue&gt; (1 samples, 0.04%)</title><rect x="37.6268%" y="277" width="0.0441%" height="15" fill="rgb(240,73,43)" fg:x="853" fg:w="1"/><text x="37.8768%" y="287.50"></text></g><g><title>llvm::ConstantRange::makeExactICmpRegion (1 samples, 0.04%)</title><rect x="37.9356%" y="261" width="0.0441%" height="15" fill="rgb(214,114,15)" fg:x="860" fg:w="1"/><text x="38.1856%" y="271.50"></text></g><g><title>llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bind_ty&lt;llvm::Value&gt;, llvm::PatternMatch::cstval_pred_ty&lt;llvm::PatternMatch::is_all_ones, llvm::ConstantInt&gt;, 30u, true&gt;::match&lt;llvm::Value const&gt; (1 samples, 0.04%)</title><rect x="37.9797%" y="261" width="0.0441%" height="15" fill="rgb(207,130,4)" fg:x="861" fg:w="1"/><text x="38.2297%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::EarlyCSEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (19 samples, 0.84%)</title><rect x="37.2298%" y="309" width="0.8381%" height="15" fill="rgb(221,25,40)" fg:x="844" fg:w="19"/><text x="37.4798%" y="319.50"></text></g><g><title>llvm::simplifyInstruction (9 samples, 0.40%)</title><rect x="37.6709%" y="293" width="0.3970%" height="15" fill="rgb(241,184,7)" fg:x="854" fg:w="9"/><text x="37.9209%" y="303.50"></text></g><g><title>simplifyICmpInst (4 samples, 0.18%)</title><rect x="37.8915%" y="277" width="0.1764%" height="15" fill="rgb(235,159,4)" fg:x="859" fg:w="4"/><text x="38.1415%" y="287.50"></text></g><g><title>threadCmpOverSelect (1 samples, 0.04%)</title><rect x="38.0238%" y="261" width="0.0441%" height="15" fill="rgb(214,87,48)" fg:x="862" fg:w="1"/><text x="38.2738%" y="271.50"></text></g><g><title>llvm::ConstantFoldCompareInstOperands (1 samples, 0.04%)</title><rect x="38.0238%" y="245" width="0.0441%" height="15" fill="rgb(246,198,24)" fg:x="862" fg:w="1"/><text x="38.2738%" y="255.50"></text></g><g><title>llvm::ConstantInt::get (1 samples, 0.04%)</title><rect x="38.0238%" y="229" width="0.0441%" height="15" fill="rgb(209,66,40)" fg:x="862" fg:w="1"/><text x="38.2738%" y="239.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (2 samples, 0.09%)</title><rect x="38.0679%" y="309" width="0.0882%" height="15" fill="rgb(233,147,39)" fg:x="863" fg:w="2"/><text x="38.3179%" y="319.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::MemorySSAAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="38.1562%" y="261" width="0.1323%" height="15" fill="rgb(231,145,52)" fg:x="865" fg:w="3"/><text x="38.4062%" y="271.50"></text></g><g><title>llvm::MemorySSA::buildMemorySSA (3 samples, 0.13%)</title><rect x="38.1562%" y="245" width="0.1323%" height="15" fill="rgb(206,20,26)" fg:x="865" fg:w="3"/><text x="38.4062%" y="255.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (4 samples, 0.18%)</title><rect x="38.1562%" y="277" width="0.1764%" height="15" fill="rgb(238,220,4)" fg:x="865" fg:w="4"/><text x="38.4062%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::ScalarEvolutionAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="38.2885%" y="261" width="0.0441%" height="15" fill="rgb(252,195,42)" fg:x="868" fg:w="1"/><text x="38.5385%" y="271.50"></text></g><g><title>llvm::ScalarEvolution::ScalarEvolution (1 samples, 0.04%)</title><rect x="38.2885%" y="245" width="0.0441%" height="15" fill="rgb(209,10,6)" fg:x="868" fg:w="1"/><text x="38.5385%" y="255.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::LoopAnalysis, llvm::LoopInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="38.3767%" y="261" width="0.0441%" height="15" fill="rgb(229,3,52)" fg:x="870" fg:w="1"/><text x="38.6267%" y="271.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PostDominatorTree, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="38.4208%" y="261" width="0.0441%" height="15" fill="rgb(253,49,37)" fg:x="871" fg:w="1"/><text x="38.6708%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LCSSAPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="38.4649%" y="261" width="0.0441%" height="15" fill="rgb(240,103,49)" fg:x="872" fg:w="1"/><text x="38.7149%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LCSSAPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (2 samples, 0.09%)</title><rect x="38.5090%" y="261" width="0.0882%" height="15" fill="rgb(250,182,30)" fg:x="873" fg:w="2"/><text x="38.7590%" y="271.50"></text></g><g><title>llvm::formLCSSARecursively (2 samples, 0.09%)</title><rect x="38.5090%" y="245" width="0.0882%" height="15" fill="rgb(248,8,30)" fg:x="873" fg:w="2"/><text x="38.7590%" y="255.50"></text></g><g><title>llvm::formLCSSA (2 samples, 0.09%)</title><rect x="38.5090%" y="229" width="0.0882%" height="15" fill="rgb(237,120,30)" fg:x="873" fg:w="2"/><text x="38.7590%" y="239.50"></text></g><g><title>llvm::formLCSSAForInstructions (1 samples, 0.04%)</title><rect x="38.5532%" y="213" width="0.0441%" height="15" fill="rgb(221,146,34)" fg:x="874" fg:w="1"/><text x="38.8032%" y="223.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LoopSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="38.5973%" y="261" width="0.0441%" height="15" fill="rgb(242,55,13)" fg:x="875" fg:w="1"/><text x="38.8473%" y="271.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="38.6855%" y="245" width="0.0441%" height="15" fill="rgb(242,112,31)" fg:x="877" fg:w="1"/><text x="38.9355%" y="255.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (10 samples, 0.44%)</title><rect x="38.3326%" y="277" width="0.4411%" height="15" fill="rgb(249,192,27)" fg:x="869" fg:w="10"/><text x="38.5826%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LoopSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (3 samples, 0.13%)</title><rect x="38.6414%" y="261" width="0.1323%" height="15" fill="rgb(208,204,44)" fg:x="876" fg:w="3"/><text x="38.8914%" y="271.50"></text></g><g><title>llvm::simplifyLoop (1 samples, 0.04%)</title><rect x="38.7296%" y="245" width="0.0441%" height="15" fill="rgb(208,93,54)" fg:x="878" fg:w="1"/><text x="38.9796%" y="255.50"></text></g><g><title>llvm::SCEVExpander::clear (1 samples, 0.04%)</title><rect x="38.7737%" y="229" width="0.0441%" height="15" fill="rgb(242,1,31)" fg:x="879" fg:w="1"/><text x="39.0237%" y="239.50"></text></g><g><title>llvm::SCEVExpander::replaceCongruentIVs (1 samples, 0.04%)</title><rect x="38.8178%" y="229" width="0.0441%" height="15" fill="rgb(241,83,25)" fg:x="880" fg:w="1"/><text x="39.0678%" y="239.50"></text></g><g><title>llvm::ScalarEvolution::getTruncateExpr (1 samples, 0.04%)</title><rect x="38.8178%" y="213" width="0.0441%" height="15" fill="rgb(205,169,50)" fg:x="880" fg:w="1"/><text x="39.0678%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::getTruncateExpr (1 samples, 0.04%)</title><rect x="38.8178%" y="197" width="0.0441%" height="15" fill="rgb(239,186,37)" fg:x="880" fg:w="1"/><text x="39.0678%" y="207.50"></text></g><g><title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="38.8178%" y="181" width="0.0441%" height="15" fill="rgb(205,221,10)" fg:x="880" fg:w="1"/><text x="39.0678%" y="191.50"></text></g><g><title>llvm::FoldingSet&lt;llvm::SCEV&gt;::NodeEquals (1 samples, 0.04%)</title><rect x="38.8178%" y="165" width="0.0441%" height="15" fill="rgb(218,196,15)" fg:x="880" fg:w="1"/><text x="39.0678%" y="175.50"></text></g><g><title>llvm::LoopBase&lt;llvm::BasicBlock, llvm::Loop&gt;::getUniqueExitBlocks (1 samples, 0.04%)</title><rect x="38.8619%" y="213" width="0.0441%" height="15" fill="rgb(218,196,35)" fg:x="881" fg:w="1"/><text x="39.1119%" y="223.50"></text></g><g><title>llvm::rewriteLoopExitValues (2 samples, 0.09%)</title><rect x="38.8619%" y="229" width="0.0882%" height="15" fill="rgb(233,63,24)" fg:x="881" fg:w="2"/><text x="39.1119%" y="239.50"></text></g><g><title>llvm::ScalarEvolution::getSCEVAtScope (1 samples, 0.04%)</title><rect x="38.9060%" y="213" width="0.0441%" height="15" fill="rgb(225,8,4)" fg:x="882" fg:w="1"/><text x="39.1560%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (1 samples, 0.04%)</title><rect x="38.9060%" y="197" width="0.0441%" height="15" fill="rgb(234,105,35)" fg:x="882" fg:w="1"/><text x="39.1560%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::createSCEV (1 samples, 0.04%)</title><rect x="38.9060%" y="181" width="0.0441%" height="15" fill="rgb(236,21,32)" fg:x="882" fg:w="1"/><text x="39.1560%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::getGEPExpr (1 samples, 0.04%)</title><rect x="38.9060%" y="165" width="0.0441%" height="15" fill="rgb(228,109,6)" fg:x="882" fg:w="1"/><text x="39.1560%" y="175.50"></text></g><g><title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="38.9502%" y="197" width="0.0441%" height="15" fill="rgb(229,215,31)" fg:x="883" fg:w="1"/><text x="39.2002%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (3 samples, 0.13%)</title><rect x="38.9502%" y="213" width="0.1323%" height="15" fill="rgb(221,52,54)" fg:x="883" fg:w="3"/><text x="39.2002%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::createSCEV (2 samples, 0.09%)</title><rect x="38.9943%" y="197" width="0.0882%" height="15" fill="rgb(252,129,43)" fg:x="884" fg:w="2"/><text x="39.2443%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::getGEPExpr (1 samples, 0.04%)</title><rect x="39.0384%" y="181" width="0.0441%" height="15" fill="rgb(248,183,27)" fg:x="885" fg:w="1"/><text x="39.2884%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="39.0384%" y="165" width="0.0441%" height="15" fill="rgb(250,0,22)" fg:x="885" fg:w="1"/><text x="39.2884%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="39.0384%" y="149" width="0.0441%" height="15" fill="rgb(213,166,10)" fg:x="885" fg:w="1"/><text x="39.2884%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="39.0384%" y="133" width="0.0441%" height="15" fill="rgb(207,163,36)" fg:x="885" fg:w="1"/><text x="39.2884%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (1 samples, 0.04%)</title><rect x="39.0384%" y="117" width="0.0441%" height="15" fill="rgb(208,122,22)" fg:x="885" fg:w="1"/><text x="39.2884%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::isBasicBlockEntryGuardedByCond (1 samples, 0.04%)</title><rect x="39.0825%" y="197" width="0.0441%" height="15" fill="rgb(207,104,49)" fg:x="886" fg:w="1"/><text x="39.3325%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaNonRecursiveReasoning (1 samples, 0.04%)</title><rect x="39.0825%" y="181" width="0.0441%" height="15" fill="rgb(248,211,50)" fg:x="886" fg:w="1"/><text x="39.3325%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="39.0825%" y="165" width="0.0441%" height="15" fill="rgb(217,13,45)" fg:x="886" fg:w="1"/><text x="39.3325%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="39.0825%" y="149" width="0.0441%" height="15" fill="rgb(211,216,49)" fg:x="886" fg:w="1"/><text x="39.3325%" y="159.50"></text></g><g><title>llvm::ConstantRange::multiply (1 samples, 0.04%)</title><rect x="39.0825%" y="133" width="0.0441%" height="15" fill="rgb(221,58,53)" fg:x="886" fg:w="1"/><text x="39.3325%" y="143.50"></text></g><g><title>llvm::ConstantRange::truncate (1 samples, 0.04%)</title><rect x="39.0825%" y="117" width="0.0441%" height="15" fill="rgb(220,112,41)" fg:x="886" fg:w="1"/><text x="39.3325%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::evaluatePredicateAt (2 samples, 0.09%)</title><rect x="39.0825%" y="213" width="0.0882%" height="15" fill="rgb(236,38,28)" fg:x="886" fg:w="2"/><text x="39.3325%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::isKnownPredicate (1 samples, 0.04%)</title><rect x="39.1266%" y="197" width="0.0441%" height="15" fill="rgb(227,195,22)" fg:x="887" fg:w="1"/><text x="39.3766%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaInduction (1 samples, 0.04%)</title><rect x="39.1266%" y="181" width="0.0441%" height="15" fill="rgb(214,55,33)" fg:x="887" fg:w="1"/><text x="39.3766%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::isLoopBackedgeGuardedByCond (1 samples, 0.04%)</title><rect x="39.1266%" y="165" width="0.0441%" height="15" fill="rgb(248,80,13)" fg:x="887" fg:w="1"/><text x="39.3766%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaNonRecursiveReasoning (1 samples, 0.04%)</title><rect x="39.1266%" y="149" width="0.0441%" height="15" fill="rgb(238,52,6)" fg:x="887" fg:w="1"/><text x="39.3766%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="39.1266%" y="133" width="0.0441%" height="15" fill="rgb(224,198,47)" fg:x="887" fg:w="1"/><text x="39.3766%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::getSCEVAtScope (1 samples, 0.04%)</title><rect x="39.1707%" y="213" width="0.0441%" height="15" fill="rgb(233,171,20)" fg:x="888" fg:w="1"/><text x="39.4207%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::getSignExtendExpr (1 samples, 0.04%)</title><rect x="39.2148%" y="181" width="0.0441%" height="15" fill="rgb(241,30,25)" fg:x="889" fg:w="1"/><text x="39.4648%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::proveNoSignedWrapViaInduction (1 samples, 0.04%)</title><rect x="39.2148%" y="165" width="0.0441%" height="15" fill="rgb(207,171,38)" fg:x="889" fg:w="1"/><text x="39.4648%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::isBasicBlockEntryGuardedByCond (1 samples, 0.04%)</title><rect x="39.2148%" y="149" width="0.0441%" height="15" fill="rgb(234,70,1)" fg:x="889" fg:w="1"/><text x="39.4648%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaNonRecursiveReasoning (1 samples, 0.04%)</title><rect x="39.2148%" y="133" width="0.0441%" height="15" fill="rgb(232,178,18)" fg:x="889" fg:w="1"/><text x="39.4648%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="39.2148%" y="117" width="0.0441%" height="15" fill="rgb(241,78,40)" fg:x="889" fg:w="1"/><text x="39.4648%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="39.2148%" y="101" width="0.0441%" height="15" fill="rgb(222,35,25)" fg:x="889" fg:w="1"/><text x="39.4648%" y="111.50"></text></g><g><title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="39.2589%" y="165" width="0.0441%" height="15" fill="rgb(207,92,16)" fg:x="890" fg:w="1"/><text x="39.5089%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="39.2589%" y="149" width="0.0441%" height="15" fill="rgb(216,59,51)" fg:x="890" fg:w="1"/><text x="39.5089%" y="159.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::IndVarSimplifyPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (13 samples, 0.57%)</title><rect x="38.7737%" y="261" width="0.5734%" height="15" fill="rgb(213,80,28)" fg:x="879" fg:w="13"/><text x="39.0237%" y="271.50"></text></g><g><title>llvm::IndVarSimplifyPass::run (13 samples, 0.57%)</title><rect x="38.7737%" y="245" width="0.5734%" height="15" fill="rgb(220,93,7)" fg:x="879" fg:w="13"/><text x="39.0237%" y="255.50"></text></g><g><title>llvm::simplifyUsersOfIV (9 samples, 0.40%)</title><rect x="38.9502%" y="229" width="0.3970%" height="15" fill="rgb(225,24,44)" fg:x="883" fg:w="9"/><text x="39.2002%" y="239.50"></text></g><g><title>llvm::ScalarEvolution::getStrengthenedNoWrapFlagsFromBinOp (3 samples, 0.13%)</title><rect x="39.2148%" y="213" width="0.1323%" height="15" fill="rgb(243,74,40)" fg:x="889" fg:w="3"/><text x="39.4648%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::willNotOverflow (3 samples, 0.13%)</title><rect x="39.2148%" y="197" width="0.1323%" height="15" fill="rgb(228,39,7)" fg:x="889" fg:w="3"/><text x="39.4648%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::getZeroExtendExpr (2 samples, 0.09%)</title><rect x="39.2589%" y="181" width="0.0882%" height="15" fill="rgb(227,79,8)" fg:x="890" fg:w="2"/><text x="39.5089%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::proveNoWrapViaConstantRanges (1 samples, 0.04%)</title><rect x="39.3030%" y="165" width="0.0441%" height="15" fill="rgb(236,58,11)" fg:x="891" fg:w="1"/><text x="39.5530%" y="175.50"></text></g><g><title>llvm::ConstantRange::contains (1 samples, 0.04%)</title><rect x="39.3030%" y="149" width="0.0441%" height="15" fill="rgb(249,63,35)" fg:x="891" fg:w="1"/><text x="39.5530%" y="159.50"></text></g><g><title>llvm::AliasSet::aliasesUnknownInst (1 samples, 0.04%)</title><rect x="39.3913%" y="245" width="0.0441%" height="15" fill="rgb(252,114,16)" fg:x="893" fg:w="1"/><text x="39.6413%" y="255.50"></text></g><g><title>llvm::AAResults::getModRefInfo (1 samples, 0.04%)</title><rect x="39.3913%" y="229" width="0.0441%" height="15" fill="rgb(254,151,24)" fg:x="893" fg:w="1"/><text x="39.6413%" y="239.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::pointsToConstantMemory (1 samples, 0.04%)</title><rect x="39.3913%" y="213" width="0.0441%" height="15" fill="rgb(253,54,39)" fg:x="893" fg:w="1"/><text x="39.6413%" y="223.50"></text></g><g><title>llvm::MemoryLocation::get (1 samples, 0.04%)</title><rect x="39.4354%" y="245" width="0.0441%" height="15" fill="rgb(243,25,45)" fg:x="894" fg:w="1"/><text x="39.6854%" y="255.50"></text></g><g><title>llvm::MemorySSA::ensureOptimizedUses (3 samples, 0.13%)</title><rect x="39.4795%" y="245" width="0.1323%" height="15" fill="rgb(234,134,9)" fg:x="895" fg:w="3"/><text x="39.7295%" y="255.50"></text></g><g><title>llvm::MemorySSA::OptimizeUses::optimizeUses (3 samples, 0.13%)</title><rect x="39.4795%" y="229" width="0.1323%" height="15" fill="rgb(227,166,31)" fg:x="895" fg:w="3"/><text x="39.7295%" y="239.50"></text></g><g><title>llvm::PHITransAddr::PHITranslateSubExpr (1 samples, 0.04%)</title><rect x="39.5677%" y="213" width="0.0441%" height="15" fill="rgb(245,143,41)" fg:x="897" fg:w="1"/><text x="39.8177%" y="223.50"></text></g><g><title>llvm::SmallPtrSetImplBase::FindBucketFor (1 samples, 0.04%)</title><rect x="39.6118%" y="245" width="0.0441%" height="15" fill="rgb(238,181,32)" fg:x="898" fg:w="1"/><text x="39.8618%" y="255.50"></text></g><g><title>llvm::hoistRegion (2 samples, 0.09%)</title><rect x="39.6559%" y="245" width="0.0882%" height="15" fill="rgb(224,113,18)" fg:x="899" fg:w="2"/><text x="39.9059%" y="255.50"></text></g><g><title>llvm::promoteLoopAccessesToScalars (1 samples, 0.04%)</title><rect x="39.7442%" y="245" width="0.0441%" height="15" fill="rgb(240,229,28)" fg:x="901" fg:w="1"/><text x="39.9942%" y="255.50"></text></g><g><title>llvm::MemorySSAUpdater::insertUse (1 samples, 0.04%)</title><rect x="39.7442%" y="229" width="0.0441%" height="15" fill="rgb(250,185,3)" fg:x="901" fg:w="1"/><text x="39.9942%" y="239.50"></text></g><g><title>llvm::MemorySSAUpdater::getPreviousDef (1 samples, 0.04%)</title><rect x="39.7442%" y="213" width="0.0441%" height="15" fill="rgb(212,59,25)" fg:x="901" fg:w="1"/><text x="39.9942%" y="223.50"></text></g><g><title>llvm::MemorySSAUpdater::getPreviousDefRecursive (1 samples, 0.04%)</title><rect x="39.7442%" y="197" width="0.0441%" height="15" fill="rgb(221,87,20)" fg:x="901" fg:w="1"/><text x="39.9942%" y="207.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LICMPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (12 samples, 0.53%)</title><rect x="39.3472%" y="261" width="0.5293%" height="15" fill="rgb(213,74,28)" fg:x="892" fg:w="12"/><text x="39.5972%" y="271.50"></text></g><g><title>llvm::sinkRegion (2 samples, 0.09%)</title><rect x="39.7883%" y="245" width="0.0882%" height="15" fill="rgb(224,132,34)" fg:x="902" fg:w="2"/><text x="40.0383%" y="255.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopDeletionPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::name (1 samples, 0.04%)</title><rect x="39.8765%" y="261" width="0.0441%" height="15" fill="rgb(222,101,24)" fg:x="904" fg:w="1"/><text x="40.1265%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopDeletionPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (2 samples, 0.09%)</title><rect x="39.9206%" y="261" width="0.0882%" height="15" fill="rgb(254,142,4)" fg:x="905" fg:w="2"/><text x="40.1706%" y="271.50"></text></g><g><title>llvm::LoopDeletionPass::run (2 samples, 0.09%)</title><rect x="39.9206%" y="245" width="0.0882%" height="15" fill="rgb(230,229,49)" fg:x="905" fg:w="2"/><text x="40.1706%" y="255.50"></text></g><g><title>breakBackedgeIfNotTaken (2 samples, 0.09%)</title><rect x="39.9206%" y="229" width="0.0882%" height="15" fill="rgb(238,70,47)" fg:x="905" fg:w="2"/><text x="40.1706%" y="239.50"></text></g><g><title>getValueOnFirstIteration (1 samples, 0.04%)</title><rect x="39.9647%" y="213" width="0.0441%" height="15" fill="rgb(231,160,17)" fg:x="906" fg:w="1"/><text x="40.2147%" y="223.50"></text></g><g><title>llvm::CodeMetrics::analyzeBasicBlock (4 samples, 0.18%)</title><rect x="40.0088%" y="213" width="0.1764%" height="15" fill="rgb(218,68,53)" fg:x="907" fg:w="4"/><text x="40.2588%" y="223.50"></text></g><g><title>llvm::TargetTransformInfo::Model&lt;llvm::X86TTIImpl&gt;::getUserCost (1 samples, 0.04%)</title><rect x="40.1412%" y="197" width="0.0441%" height="15" fill="rgb(236,111,10)" fg:x="910" fg:w="1"/><text x="40.3912%" y="207.50"></text></g><g><title>llvm::X86TTIImpl::getCastInstrCost (1 samples, 0.04%)</title><rect x="40.1412%" y="181" width="0.0441%" height="15" fill="rgb(224,34,41)" fg:x="910" fg:w="1"/><text x="40.3912%" y="191.50"></text></g><g><title>llvm::computeUnrollCount (1 samples, 0.04%)</title><rect x="40.1853%" y="213" width="0.0441%" height="15" fill="rgb(241,118,19)" fg:x="911" fg:w="1"/><text x="40.4353%" y="223.50"></text></g><g><title>llvm::computePeelCount (1 samples, 0.04%)</title><rect x="40.1853%" y="197" width="0.0441%" height="15" fill="rgb(238,129,25)" fg:x="911" fg:w="1"/><text x="40.4353%" y="207.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopFullUnrollPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (6 samples, 0.26%)</title><rect x="40.0088%" y="261" width="0.2647%" height="15" fill="rgb(238,22,31)" fg:x="907" fg:w="6"/><text x="40.2588%" y="271.50"></text></g><g><title>llvm::LoopFullUnrollPass::run (6 samples, 0.26%)</title><rect x="40.0088%" y="245" width="0.2647%" height="15" fill="rgb(222,174,48)" fg:x="907" fg:w="6"/><text x="40.2588%" y="255.50"></text></g><g><title>tryToUnrollLoop (6 samples, 0.26%)</title><rect x="40.0088%" y="229" width="0.2647%" height="15" fill="rgb(206,152,40)" fg:x="907" fg:w="6"/><text x="40.2588%" y="239.50"></text></g><g><title>llvm::gatherUnrollingPreferences (1 samples, 0.04%)</title><rect x="40.2294%" y="213" width="0.0441%" height="15" fill="rgb(218,99,54)" fg:x="912" fg:w="1"/><text x="40.4794%" y="223.50"></text></g><g><title>llvm::getOptionalIntLoopAttribute (1 samples, 0.04%)</title><rect x="40.2294%" y="197" width="0.0441%" height="15" fill="rgb(220,174,26)" fg:x="912" fg:w="1"/><text x="40.4794%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::computeExitCountExhaustively (1 samples, 0.04%)</title><rect x="40.3176%" y="149" width="0.0441%" height="15" fill="rgb(245,116,9)" fg:x="914" fg:w="1"/><text x="40.5676%" y="159.50"></text></g><g><title>canConstantEvolve (1 samples, 0.04%)</title><rect x="40.3176%" y="133" width="0.0441%" height="15" fill="rgb(209,72,35)" fg:x="914" fg:w="1"/><text x="40.5676%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::computeSCEVAtScope (1 samples, 0.04%)</title><rect x="40.3617%" y="133" width="0.0441%" height="15" fill="rgb(226,126,21)" fg:x="915" fg:w="1"/><text x="40.6117%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (1 samples, 0.04%)</title><rect x="40.3617%" y="117" width="0.0441%" height="15" fill="rgb(227,192,1)" fg:x="915" fg:w="1"/><text x="40.6117%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::createSCEV (1 samples, 0.04%)</title><rect x="40.3617%" y="101" width="0.0441%" height="15" fill="rgb(237,180,29)" fg:x="915" fg:w="1"/><text x="40.6117%" y="111.50"></text></g><g><title>llvm::ScalarEvolution::getGEPExpr (1 samples, 0.04%)</title><rect x="40.3617%" y="85" width="0.0441%" height="15" fill="rgb(230,197,35)" fg:x="915" fg:w="1"/><text x="40.6117%" y="95.50"></text></g><g><title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="40.3617%" y="69" width="0.0441%" height="15" fill="rgb(246,193,31)" fg:x="915" fg:w="1"/><text x="40.6117%" y="79.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="40.3617%" y="53" width="0.0441%" height="15" fill="rgb(241,36,4)" fg:x="915" fg:w="1"/><text x="40.6117%" y="63.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="40.3617%" y="37" width="0.0441%" height="15" fill="rgb(241,130,17)" fg:x="915" fg:w="1"/><text x="40.6117%" y="47.50"></text></g><g><title>llvm::ScalarEvolution::computeExitLimitFromICmp (3 samples, 0.13%)</title><rect x="40.3617%" y="149" width="0.1323%" height="15" fill="rgb(206,137,32)" fg:x="915" fg:w="3"/><text x="40.6117%" y="159.50"></text></g><g><title>llvm::ScalarEvolution::howFarToZero (2 samples, 0.09%)</title><rect x="40.4058%" y="133" width="0.0882%" height="15" fill="rgb(237,228,51)" fg:x="916" fg:w="2"/><text x="40.6558%" y="143.50"></text></g><g><title>llvm::ScalarEvolution::getUDivExpr (1 samples, 0.04%)</title><rect x="40.4499%" y="117" width="0.0441%" height="15" fill="rgb(243,6,42)" fg:x="917" fg:w="1"/><text x="40.6999%" y="127.50"></text></g><g><title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="40.4499%" y="101" width="0.0441%" height="15" fill="rgb(251,74,28)" fg:x="917" fg:w="1"/><text x="40.6999%" y="111.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="40.4499%" y="85" width="0.0441%" height="15" fill="rgb(218,20,49)" fg:x="917" fg:w="1"/><text x="40.6999%" y="95.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopIdiomRecognizePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (6 samples, 0.26%)</title><rect x="40.2735%" y="261" width="0.2647%" height="15" fill="rgb(238,28,14)" fg:x="913" fg:w="6"/><text x="40.5235%" y="271.50"></text></g><g><title>llvm::LoopIdiomRecognizePass::run (6 samples, 0.26%)</title><rect x="40.2735%" y="245" width="0.2647%" height="15" fill="rgb(229,40,46)" fg:x="913" fg:w="6"/><text x="40.5235%" y="255.50"></text></g><g><title>llvm::ScalarEvolution::hasLoopInvariantBackedgeTakenCount (6 samples, 0.26%)</title><rect x="40.2735%" y="229" width="0.2647%" height="15" fill="rgb(244,195,20)" fg:x="913" fg:w="6"/><text x="40.5235%" y="239.50"></text></g><g><title>llvm::ScalarEvolution::getBackedgeTakenInfo (6 samples, 0.26%)</title><rect x="40.2735%" y="213" width="0.2647%" height="15" fill="rgb(253,56,35)" fg:x="913" fg:w="6"/><text x="40.5235%" y="223.50"></text></g><g><title>llvm::ScalarEvolution::computeBackedgeTakenCount (6 samples, 0.26%)</title><rect x="40.2735%" y="197" width="0.2647%" height="15" fill="rgb(210,149,44)" fg:x="913" fg:w="6"/><text x="40.5235%" y="207.50"></text></g><g><title>llvm::ScalarEvolution::computeExitLimitFromCondCached (6 samples, 0.26%)</title><rect x="40.2735%" y="181" width="0.2647%" height="15" fill="rgb(240,135,12)" fg:x="913" fg:w="6"/><text x="40.5235%" y="191.50"></text></g><g><title>llvm::ScalarEvolution::computeExitLimitFromCondImpl (6 samples, 0.26%)</title><rect x="40.2735%" y="165" width="0.2647%" height="15" fill="rgb(251,24,50)" fg:x="913" fg:w="6"/><text x="40.5235%" y="175.50"></text></g><g><title>llvm::ScalarEvolution::createSCEVIter (1 samples, 0.04%)</title><rect x="40.4940%" y="149" width="0.0441%" height="15" fill="rgb(243,200,47)" fg:x="918" fg:w="1"/><text x="40.7440%" y="159.50"></text></g><g><title>llvm::PHINode::removeIncomingValue (1 samples, 0.04%)</title><rect x="40.5382%" y="213" width="0.0441%" height="15" fill="rgb(224,166,26)" fg:x="919" fg:w="1"/><text x="40.7882%" y="223.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="40.5382%" y="197" width="0.0441%" height="15" fill="rgb(233,0,47)" fg:x="919" fg:w="1"/><text x="40.7882%" y="207.50"></text></g><g><title>llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::applyUpdates (1 samples, 0.04%)</title><rect x="40.5823%" y="197" width="0.0441%" height="15" fill="rgb(253,80,5)" fg:x="920" fg:w="1"/><text x="40.8323%" y="207.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::ApplyUpdates (1 samples, 0.04%)</title><rect x="40.5823%" y="181" width="0.0441%" height="15" fill="rgb(214,133,25)" fg:x="920" fg:w="1"/><text x="40.8323%" y="191.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::DeleteReachable (1 samples, 0.04%)</title><rect x="40.5823%" y="165" width="0.0441%" height="15" fill="rgb(209,27,14)" fg:x="920" fg:w="1"/><text x="40.8323%" y="175.50"></text></g><g><title>llvm::SplitKnownCriticalEdge (2 samples, 0.09%)</title><rect x="40.5823%" y="213" width="0.0882%" height="15" fill="rgb(219,102,51)" fg:x="920" fg:w="2"/><text x="40.8323%" y="223.50"></text></g><g><title>std::__find_if&lt;llvm::SuccIterator&lt;llvm::Instruction, llvm::BasicBlock&gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;llvm::BasicBlock* const&gt; &gt; (1 samples, 0.04%)</title><rect x="40.6264%" y="197" width="0.0441%" height="15" fill="rgb(237,18,16)" fg:x="921" fg:w="1"/><text x="40.8764%" y="207.50"></text></g><g><title>llvm::PassManager&lt;llvm::Loop, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::runWithoutLoopNestPasses (44 samples, 1.94%)</title><rect x="38.7737%" y="277" width="1.9409%" height="15" fill="rgb(241,85,17)" fg:x="879" fg:w="44"/><text x="39.0237%" y="287.50">l..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LoopRotatePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (4 samples, 0.18%)</title><rect x="40.5382%" y="261" width="0.1764%" height="15" fill="rgb(236,90,42)" fg:x="919" fg:w="4"/><text x="40.7882%" y="271.50"></text></g><g><title>llvm::LoopRotatePass::run (4 samples, 0.18%)</title><rect x="40.5382%" y="245" width="0.1764%" height="15" fill="rgb(249,57,21)" fg:x="919" fg:w="4"/><text x="40.7882%" y="255.50"></text></g><g><title>llvm::LoopRotation (4 samples, 0.18%)</title><rect x="40.5382%" y="229" width="0.1764%" height="15" fill="rgb(243,12,36)" fg:x="919" fg:w="4"/><text x="40.7882%" y="239.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="40.6705%" y="213" width="0.0441%" height="15" fill="rgb(253,128,47)" fg:x="922" fg:w="1"/><text x="40.9205%" y="223.50"></text></g><g><title>llvm::PreservedAnalyses::intersect (1 samples, 0.04%)</title><rect x="40.7146%" y="277" width="0.0441%" height="15" fill="rgb(207,33,20)" fg:x="923" fg:w="1"/><text x="40.9646%" y="287.50"></text></g><g><title>llvm::AliasSetTracker::getAliasSetFor (1 samples, 0.04%)</title><rect x="40.8028%" y="261" width="0.0441%" height="15" fill="rgb(233,215,35)" fg:x="925" fg:w="1"/><text x="41.0528%" y="271.50"></text></g><g><title>llvm::BasicAAResult::aliasCheck (1 samples, 0.04%)</title><rect x="40.8028%" y="245" width="0.0441%" height="15" fill="rgb(249,188,52)" fg:x="925" fg:w="1"/><text x="41.0528%" y="255.50"></text></g><g><title>llvm::ObjectSizeOffsetVisitor::compute (1 samples, 0.04%)</title><rect x="40.8028%" y="229" width="0.0441%" height="15" fill="rgb(225,12,32)" fg:x="925" fg:w="1"/><text x="41.0528%" y="239.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.04%)</title><rect x="40.8028%" y="213" width="0.0441%" height="15" fill="rgb(247,98,14)" fg:x="925" fg:w="1"/><text x="41.0528%" y="223.50"></text></g><g><title>llvm::LoopBase&lt;llvm::BasicBlock, llvm::Loop&gt;::hasDedicatedExits (1 samples, 0.04%)</title><rect x="40.8469%" y="261" width="0.0441%" height="15" fill="rgb(247,219,48)" fg:x="926" fg:w="1"/><text x="41.0969%" y="271.50"></text></g><g><title>llvm::hoistRegion (2 samples, 0.09%)</title><rect x="40.8910%" y="261" width="0.0882%" height="15" fill="rgb(253,60,48)" fg:x="927" fg:w="2"/><text x="41.1410%" y="271.50"></text></g><g><title>llvm::ConstantFoldInstruction (1 samples, 0.04%)</title><rect x="40.9352%" y="245" width="0.0441%" height="15" fill="rgb(245,15,52)" fg:x="928" fg:w="1"/><text x="41.1852%" y="255.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (66 samples, 2.91%)</title><rect x="38.1562%" y="309" width="2.9113%" height="15" fill="rgb(220,133,28)" fg:x="865" fg:w="66"/><text x="38.4062%" y="319.50">ll..</text></g><g><title>llvm::FunctionToLoopPassAdaptor::run (66 samples, 2.91%)</title><rect x="38.1562%" y="293" width="2.9113%" height="15" fill="rgb(217,180,4)" fg:x="865" fg:w="66"/><text x="38.4062%" y="303.50">ll..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LICMPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (7 samples, 0.31%)</title><rect x="40.7587%" y="277" width="0.3088%" height="15" fill="rgb(251,24,1)" fg:x="924" fg:w="7"/><text x="41.0087%" y="287.50"></text></g><g><title>llvm::sinkRegion (2 samples, 0.09%)</title><rect x="40.9793%" y="261" width="0.0882%" height="15" fill="rgb(212,185,49)" fg:x="929" fg:w="2"/><text x="41.2293%" y="271.50"></text></g><g><title>llvm::TargetTransformInfo::Model&lt;llvm::X86TTIImpl&gt;::getUserCost (1 samples, 0.04%)</title><rect x="41.0234%" y="245" width="0.0441%" height="15" fill="rgb(215,175,22)" fg:x="930" fg:w="1"/><text x="41.2734%" y="255.50"></text></g><g><title>llvm::X86TTIImpl::getCastInstrCost (1 samples, 0.04%)</title><rect x="41.0234%" y="229" width="0.0441%" height="15" fill="rgb(250,205,14)" fg:x="930" fg:w="1"/><text x="41.2734%" y="239.50"></text></g><g><title>llvm::TargetLoweringBase::getTypeLegalizationCost (1 samples, 0.04%)</title><rect x="41.0234%" y="213" width="0.0441%" height="15" fill="rgb(225,211,22)" fg:x="930" fg:w="1"/><text x="41.2734%" y="223.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="41.0675%" y="277" width="0.1323%" height="15" fill="rgb(251,179,42)" fg:x="931" fg:w="3"/><text x="41.3175%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::MemoryDependenceAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (2 samples, 0.09%)</title><rect x="41.1116%" y="261" width="0.0882%" height="15" fill="rgb(208,216,51)" fg:x="932" fg:w="2"/><text x="41.3616%" y="271.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="41.1116%" y="245" width="0.0882%" height="15" fill="rgb(235,36,11)" fg:x="932" fg:w="2"/><text x="41.3616%" y="255.50"></text></g><g><title>llvm::GVNPass::ValueTable::phiTranslate (1 samples, 0.04%)</title><rect x="41.1998%" y="245" width="0.0441%" height="15" fill="rgb(213,189,28)" fg:x="934" fg:w="1"/><text x="41.4498%" y="255.50"></text></g><g><title>llvm::GVNPass::performPRE (2 samples, 0.09%)</title><rect x="41.1998%" y="261" width="0.0882%" height="15" fill="rgb(227,203,42)" fg:x="934" fg:w="2"/><text x="41.4498%" y="271.50"></text></g><g><title>llvm::GVNPass::assignBlockRPONumber (1 samples, 0.04%)</title><rect x="41.2439%" y="245" width="0.0441%" height="15" fill="rgb(244,72,36)" fg:x="935" fg:w="1"/><text x="41.4939%" y="255.50"></text></g><g><title>llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTraits&lt;llvm::Function*&gt; &gt;::Initialize (1 samples, 0.04%)</title><rect x="41.2439%" y="229" width="0.0441%" height="15" fill="rgb(213,53,17)" fg:x="935" fg:w="1"/><text x="41.4939%" y="239.50"></text></g><g><title>std::__copy_move_a2&lt;false, llvm::po_iterator&lt;llvm::Function*, llvm::SmallPtrSet&lt;llvm::BasicBlock*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::Function*&gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock*, std::allocator&lt;llvm::BasicBlock*&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="41.2439%" y="213" width="0.0441%" height="15" fill="rgb(207,167,3)" fg:x="935" fg:w="1"/><text x="41.4939%" y="223.50"></text></g><g><title>llvm::ConstantInt::get (2 samples, 0.09%)</title><rect x="41.5968%" y="229" width="0.0882%" height="15" fill="rgb(216,98,30)" fg:x="943" fg:w="2"/><text x="41.8468%" y="239.50"></text></g><g><title>llvm::GVNPass::ValueTable::createExtractvalueExpr (1 samples, 0.04%)</title><rect x="41.6850%" y="229" width="0.0441%" height="15" fill="rgb(236,123,15)" fg:x="945" fg:w="1"/><text x="41.9350%" y="239.50"></text></g><g><title>llvm::GVNPass::ValueTable::lookupOrAdd (10 samples, 0.44%)</title><rect x="41.3322%" y="245" width="0.4411%" height="15" fill="rgb(248,81,50)" fg:x="937" fg:w="10"/><text x="41.5822%" y="255.50"></text></g><g><title>llvm::GVNPass::ValueTable::lookupOrAddCall (1 samples, 0.04%)</title><rect x="41.7292%" y="229" width="0.0441%" height="15" fill="rgb(214,120,4)" fg:x="946" fg:w="1"/><text x="41.9792%" y="239.50"></text></g><g><title>llvm::GVNPass::ValueTable::createExpr (1 samples, 0.04%)</title><rect x="41.7292%" y="213" width="0.0441%" height="15" fill="rgb(208,179,34)" fg:x="946" fg:w="1"/><text x="41.9792%" y="223.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (1 samples, 0.04%)</title><rect x="41.7733%" y="229" width="0.0441%" height="15" fill="rgb(227,140,7)" fg:x="947" fg:w="1"/><text x="42.0233%" y="239.50"></text></g><g><title>llvm::PredIteratorCache::GetPreds (1 samples, 0.04%)</title><rect x="41.7733%" y="213" width="0.0441%" height="15" fill="rgb(214,22,6)" fg:x="947" fg:w="1"/><text x="42.0233%" y="223.50"></text></g><g><title>llvm::GVNPass::processNonLocalLoad (2 samples, 0.09%)</title><rect x="41.7733%" y="245" width="0.0882%" height="15" fill="rgb(207,137,27)" fg:x="947" fg:w="2"/><text x="42.0233%" y="255.50"></text></g><g><title>llvm::MemoryLocation::getOrNone (1 samples, 0.04%)</title><rect x="41.8174%" y="229" width="0.0441%" height="15" fill="rgb(210,8,46)" fg:x="948" fg:w="1"/><text x="42.0674%" y="239.50"></text></g><g><title>llvm::GVNPass::propagateEquality (3 samples, 0.13%)</title><rect x="41.8615%" y="245" width="0.1323%" height="15" fill="rgb(240,16,54)" fg:x="949" fg:w="3"/><text x="42.1115%" y="255.50"></text></g><g><title>llvm::BasicAAResult::aliasCheck (2 samples, 0.09%)</title><rect x="42.0379%" y="229" width="0.0882%" height="15" fill="rgb(211,209,29)" fg:x="953" fg:w="2"/><text x="42.2879%" y="239.50"></text></g><g><title>llvm::ObjectSizeOffsetVisitor::compute (1 samples, 0.04%)</title><rect x="42.0820%" y="213" width="0.0441%" height="15" fill="rgb(226,228,24)" fg:x="954" fg:w="1"/><text x="42.3320%" y="223.50"></text></g><g><title>llvm::MemoryDependenceResults::getDependency (4 samples, 0.18%)</title><rect x="41.9938%" y="245" width="0.1764%" height="15" fill="rgb(222,84,9)" fg:x="952" fg:w="4"/><text x="42.2438%" y="255.50"></text></g><g><title>llvm::MemoryLocation::get (1 samples, 0.04%)</title><rect x="42.1262%" y="229" width="0.0441%" height="15" fill="rgb(234,203,30)" fg:x="955" fg:w="1"/><text x="42.3762%" y="239.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.04%)</title><rect x="42.1262%" y="213" width="0.0441%" height="15" fill="rgb(238,109,14)" fg:x="955" fg:w="1"/><text x="42.3762%" y="223.50"></text></g><g><title>llvm::Value::replaceAllUsesWith (1 samples, 0.04%)</title><rect x="42.1703%" y="245" width="0.0441%" height="15" fill="rgb(233,206,34)" fg:x="956" fg:w="1"/><text x="42.4203%" y="255.50"></text></g><g><title>simplifyAddInst (1 samples, 0.04%)</title><rect x="42.3908%" y="229" width="0.0441%" height="15" fill="rgb(220,167,47)" fg:x="961" fg:w="1"/><text x="42.6408%" y="239.50"></text></g><g><title>llvm::GVNPass::processBlock (29 samples, 1.28%)</title><rect x="41.2880%" y="261" width="1.2792%" height="15" fill="rgb(238,105,10)" fg:x="936" fg:w="29"/><text x="41.5380%" y="271.50"></text></g><g><title>llvm::simplifyInstruction (8 samples, 0.35%)</title><rect x="42.2144%" y="245" width="0.3529%" height="15" fill="rgb(213,227,17)" fg:x="957" fg:w="8"/><text x="42.4644%" y="255.50"></text></g><g><title>simplifyICmpInst (3 samples, 0.13%)</title><rect x="42.4349%" y="229" width="0.1323%" height="15" fill="rgb(217,132,38)" fg:x="962" fg:w="3"/><text x="42.6849%" y="239.50"></text></g><g><title>isKnownNonZero (3 samples, 0.13%)</title><rect x="42.4349%" y="213" width="0.1323%" height="15" fill="rgb(242,146,4)" fg:x="962" fg:w="3"/><text x="42.6849%" y="223.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="42.5232%" y="197" width="0.0441%" height="15" fill="rgb(212,61,9)" fg:x="964" fg:w="1"/><text x="42.7732%" y="207.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::GVNPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (35 samples, 1.54%)</title><rect x="41.0675%" y="309" width="1.5439%" height="15" fill="rgb(247,126,22)" fg:x="931" fg:w="35"/><text x="41.3175%" y="319.50"></text></g><g><title>llvm::GVNPass::run (35 samples, 1.54%)</title><rect x="41.0675%" y="293" width="1.5439%" height="15" fill="rgb(220,196,2)" fg:x="931" fg:w="35"/><text x="41.3175%" y="303.50"></text></g><g><title>llvm::GVNPass::runImpl (32 samples, 1.41%)</title><rect x="41.1998%" y="277" width="1.4116%" height="15" fill="rgb(208,46,4)" fg:x="934" fg:w="32"/><text x="41.4498%" y="287.50"></text></g><g><title>llvm::MergeBlockIntoPredecessor (1 samples, 0.04%)</title><rect x="42.5673%" y="261" width="0.0441%" height="15" fill="rgb(252,104,46)" fg:x="965" fg:w="1"/><text x="42.8173%" y="271.50"></text></g><g><title>llvm::DomTreeUpdater::applyUpdates (1 samples, 0.04%)</title><rect x="42.5673%" y="245" width="0.0441%" height="15" fill="rgb(237,152,48)" fg:x="965" fg:w="1"/><text x="42.8173%" y="255.50"></text></g><g><title>llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::applyUpdates (1 samples, 0.04%)</title><rect x="42.5673%" y="229" width="0.0441%" height="15" fill="rgb(221,59,37)" fg:x="965" fg:w="1"/><text x="42.8173%" y="239.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::ApplyUpdates (1 samples, 0.04%)</title><rect x="42.5673%" y="213" width="0.0441%" height="15" fill="rgb(209,202,51)" fg:x="965" fg:w="1"/><text x="42.8173%" y="223.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::DeleteReachable (1 samples, 0.04%)</title><rect x="42.5673%" y="197" width="0.0441%" height="15" fill="rgb(228,81,30)" fg:x="965" fg:w="1"/><text x="42.8173%" y="207.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="42.6114%" y="309" width="0.0441%" height="15" fill="rgb(227,42,39)" fg:x="966" fg:w="1"/><text x="42.8614%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="43.3172%" y="277" width="0.1323%" height="15" fill="rgb(221,26,2)" fg:x="982" fg:w="3"/><text x="43.5672%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (2 samples, 0.09%)</title><rect x="43.3613%" y="261" width="0.0882%" height="15" fill="rgb(254,61,31)" fg:x="983" fg:w="2"/><text x="43.6113%" y="271.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (2 samples, 0.09%)</title><rect x="43.3613%" y="245" width="0.0882%" height="15" fill="rgb(222,173,38)" fg:x="983" fg:w="2"/><text x="43.6113%" y="255.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::runSemiNCA (2 samples, 0.09%)</title><rect x="43.3613%" y="229" width="0.0882%" height="15" fill="rgb(218,50,12)" fg:x="983" fg:w="2"/><text x="43.6113%" y="239.50"></text></g><g><title>llvm::ConstantFoldInstruction (2 samples, 0.09%)</title><rect x="44.3317%" y="261" width="0.0882%" height="15" fill="rgb(223,88,40)" fg:x="1005" fg:w="2"/><text x="44.5817%" y="271.50"></text></g><g><title>llvm::canConstantFoldCallTo (1 samples, 0.04%)</title><rect x="44.3758%" y="245" width="0.0441%" height="15" fill="rgb(237,54,19)" fg:x="1006" fg:w="1"/><text x="44.6258%" y="255.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (3 samples, 0.13%)</title><rect x="44.4199%" y="261" width="0.1323%" height="15" fill="rgb(251,129,25)" fg:x="1007" fg:w="3"/><text x="44.6699%" y="271.50"></text></g><g><title>llvm::InstCombinerImpl::mergeStoreIntoSuccessor (1 samples, 0.04%)</title><rect x="44.5523%" y="261" width="0.0441%" height="15" fill="rgb(238,97,19)" fg:x="1010" fg:w="1"/><text x="44.8023%" y="271.50"></text></g><g><title>llvm::InstCombinerImpl::visitAdd (2 samples, 0.09%)</title><rect x="44.5964%" y="261" width="0.0882%" height="15" fill="rgb(240,169,18)" fg:x="1011" fg:w="2"/><text x="44.8464%" y="271.50"></text></g><g><title>llvm::ConstantRange::unsignedAddMayOverflow (2 samples, 0.09%)</title><rect x="44.5964%" y="245" width="0.0882%" height="15" fill="rgb(230,187,49)" fg:x="1011" fg:w="2"/><text x="44.8464%" y="255.50"></text></g><g><title>llvm::InstCombinerImpl::SimplifyDemandedUseBits (2 samples, 0.09%)</title><rect x="44.6846%" y="245" width="0.0882%" height="15" fill="rgb(209,44,26)" fg:x="1013" fg:w="2"/><text x="44.9346%" y="255.50"></text></g><g><title>llvm::InstCombinerImpl::SimplifyDemandedUseBits (2 samples, 0.09%)</title><rect x="44.6846%" y="229" width="0.0882%" height="15" fill="rgb(244,0,6)" fg:x="1013" fg:w="2"/><text x="44.9346%" y="239.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="44.7287%" y="213" width="0.0441%" height="15" fill="rgb(248,18,21)" fg:x="1014" fg:w="1"/><text x="44.9787%" y="223.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="44.7287%" y="197" width="0.0441%" height="15" fill="rgb(245,180,19)" fg:x="1014" fg:w="1"/><text x="44.9787%" y="207.50"></text></g><g><title>llvm::InstCombinerImpl::visitAnd (3 samples, 0.13%)</title><rect x="44.6846%" y="261" width="0.1323%" height="15" fill="rgb(252,118,36)" fg:x="1013" fg:w="3"/><text x="44.9346%" y="271.50"></text></g><g><title>simplifyAndInst (1 samples, 0.04%)</title><rect x="44.7728%" y="245" width="0.0441%" height="15" fill="rgb(210,224,19)" fg:x="1015" fg:w="1"/><text x="45.0228%" y="255.50"></text></g><g><title>isKnownNonZero (1 samples, 0.04%)</title><rect x="44.9052%" y="245" width="0.0441%" height="15" fill="rgb(218,30,24)" fg:x="1018" fg:w="1"/><text x="45.1552%" y="255.50"></text></g><g><title>llvm::AssumptionCache::updateAffectedValues (1 samples, 0.04%)</title><rect x="44.9493%" y="245" width="0.0441%" height="15" fill="rgb(219,75,50)" fg:x="1019" fg:w="1"/><text x="45.1993%" y="255.50"></text></g><g><title>findAffectedValues (1 samples, 0.04%)</title><rect x="44.9493%" y="229" width="0.0441%" height="15" fill="rgb(234,72,50)" fg:x="1019" fg:w="1"/><text x="45.1993%" y="239.50"></text></g><g><title>llvm::InstCombinerImpl::visitCallInst (11 samples, 0.49%)</title><rect x="44.8169%" y="261" width="0.4852%" height="15" fill="rgb(219,100,48)" fg:x="1016" fg:w="11"/><text x="45.0669%" y="271.50"></text></g><g><title>llvm::LibCallSimplifier::optimizeCall (7 samples, 0.31%)</title><rect x="44.9934%" y="245" width="0.3088%" height="15" fill="rgb(253,5,41)" fg:x="1020" fg:w="7"/><text x="45.2434%" y="255.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.22%)</title><rect x="45.0816%" y="229" width="0.2206%" height="15" fill="rgb(247,181,11)" fg:x="1022" fg:w="5"/><text x="45.3316%" y="239.50"></text></g><g><title>llvm::InstCombinerImpl::visitMul (1 samples, 0.04%)</title><rect x="45.3022%" y="261" width="0.0441%" height="15" fill="rgb(222,223,25)" fg:x="1027" fg:w="1"/><text x="45.5522%" y="271.50"></text></g><g><title>llvm::computeOverflowForUnsignedMul (1 samples, 0.04%)</title><rect x="45.3022%" y="245" width="0.0441%" height="15" fill="rgb(214,198,28)" fg:x="1027" fg:w="1"/><text x="45.5522%" y="255.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="45.3022%" y="229" width="0.0441%" height="15" fill="rgb(230,46,43)" fg:x="1027" fg:w="1"/><text x="45.5522%" y="239.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="45.3022%" y="213" width="0.0441%" height="15" fill="rgb(233,65,53)" fg:x="1027" fg:w="1"/><text x="45.5522%" y="223.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="45.3022%" y="197" width="0.0441%" height="15" fill="rgb(221,121,27)" fg:x="1027" fg:w="1"/><text x="45.5522%" y="207.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="45.3022%" y="181" width="0.0441%" height="15" fill="rgb(247,70,47)" fg:x="1027" fg:w="1"/><text x="45.5522%" y="191.50"></text></g><g><title>llvm::InstCombinerImpl::visitOr (2 samples, 0.09%)</title><rect x="45.3463%" y="261" width="0.0882%" height="15" fill="rgb(228,85,35)" fg:x="1028" fg:w="2"/><text x="45.5963%" y="271.50"></text></g><g><title>llvm::recognizeBSwapOrBitReverseIdiom (2 samples, 0.09%)</title><rect x="45.3463%" y="245" width="0.0882%" height="15" fill="rgb(209,50,18)" fg:x="1028" fg:w="2"/><text x="45.5963%" y="255.50"></text></g><g><title>collectBitParts (2 samples, 0.09%)</title><rect x="45.3463%" y="229" width="0.0882%" height="15" fill="rgb(250,19,35)" fg:x="1028" fg:w="2"/><text x="45.5963%" y="239.50"></text></g><g><title>collectBitParts (1 samples, 0.04%)</title><rect x="45.3904%" y="213" width="0.0441%" height="15" fill="rgb(253,107,29)" fg:x="1029" fg:w="1"/><text x="45.6404%" y="223.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.04%)</title><rect x="45.3904%" y="197" width="0.0441%" height="15" fill="rgb(252,179,29)" fg:x="1029" fg:w="1"/><text x="45.6404%" y="207.50"></text></g><g><title>llvm::computeOverflowForSignedSub (1 samples, 0.04%)</title><rect x="45.4345%" y="245" width="0.0441%" height="15" fill="rgb(238,194,6)" fg:x="1030" fg:w="1"/><text x="45.6845%" y="255.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="45.4345%" y="229" width="0.0441%" height="15" fill="rgb(238,164,29)" fg:x="1030" fg:w="1"/><text x="45.6845%" y="239.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="45.4345%" y="213" width="0.0441%" height="15" fill="rgb(224,25,9)" fg:x="1030" fg:w="1"/><text x="45.6845%" y="223.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.04%)</title><rect x="45.4345%" y="197" width="0.0441%" height="15" fill="rgb(244,153,23)" fg:x="1030" fg:w="1"/><text x="45.6845%" y="207.50"></text></g><g><title>llvm::InstCombinerImpl::visitSub (2 samples, 0.09%)</title><rect x="45.4345%" y="261" width="0.0882%" height="15" fill="rgb(212,203,14)" fg:x="1030" fg:w="2"/><text x="45.6845%" y="271.50"></text></g><g><title>simplifySubInst (1 samples, 0.04%)</title><rect x="45.4786%" y="245" width="0.0441%" height="15" fill="rgb(220,164,20)" fg:x="1031" fg:w="1"/><text x="45.7286%" y="255.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="45.4786%" y="229" width="0.0441%" height="15" fill="rgb(222,203,48)" fg:x="1031" fg:w="1"/><text x="45.7286%" y="239.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="45.4786%" y="213" width="0.0441%" height="15" fill="rgb(215,159,22)" fg:x="1031" fg:w="1"/><text x="45.7286%" y="223.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="45.4786%" y="197" width="0.0441%" height="15" fill="rgb(216,183,47)" fg:x="1031" fg:w="1"/><text x="45.7286%" y="207.50"></text></g><g><title>computeKnownBitsFromAssume (1 samples, 0.04%)</title><rect x="45.4786%" y="181" width="0.0441%" height="15" fill="rgb(229,195,25)" fg:x="1031" fg:w="1"/><text x="45.7286%" y="191.50"></text></g><g><title>llvm::InstCombinerImpl::visitXor (1 samples, 0.04%)</title><rect x="45.5227%" y="261" width="0.0441%" height="15" fill="rgb(224,132,51)" fg:x="1032" fg:w="1"/><text x="45.7727%" y="271.50"></text></g><g><title>llvm::Instruction::copyMetadata (1 samples, 0.04%)</title><rect x="45.5668%" y="261" width="0.0441%" height="15" fill="rgb(240,63,7)" fg:x="1033" fg:w="1"/><text x="45.8168%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (68 samples, 3.00%)</title><rect x="42.6555%" y="309" width="2.9996%" height="15" fill="rgb(249,182,41)" fg:x="967" fg:w="68"/><text x="42.9055%" y="319.50">llv..</text></g><g><title>llvm::InstCombinePass::run (68 samples, 3.00%)</title><rect x="42.6555%" y="293" width="2.9996%" height="15" fill="rgb(243,47,26)" fg:x="967" fg:w="68"/><text x="42.9055%" y="303.50">llv..</text></g><g><title>llvm::InstCombinerImpl::run (50 samples, 2.21%)</title><rect x="43.4495%" y="277" width="2.2056%" height="15" fill="rgb(233,48,2)" fg:x="985" fg:w="50"/><text x="43.6995%" y="287.50">l..</text></g><g><title>llvm::simplifyGEPInst (1 samples, 0.04%)</title><rect x="45.6109%" y="261" width="0.0441%" height="15" fill="rgb(244,165,34)" fg:x="1034" fg:w="1"/><text x="45.8609%" y="271.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.04%)</title><rect x="45.6109%" y="245" width="0.0441%" height="15" fill="rgb(207,89,7)" fg:x="1034" fg:w="1"/><text x="45.8609%" y="255.50"></text></g><g><title>llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::applyUpdates (2 samples, 0.09%)</title><rect x="45.6551%" y="277" width="0.0882%" height="15" fill="rgb(244,117,36)" fg:x="1035" fg:w="2"/><text x="45.9051%" y="287.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::ApplyUpdates (1 samples, 0.04%)</title><rect x="45.6992%" y="261" width="0.0441%" height="15" fill="rgb(226,144,34)" fg:x="1036" fg:w="1"/><text x="45.9492%" y="271.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InsertUnreachable (1 samples, 0.04%)</title><rect x="45.6992%" y="245" width="0.0441%" height="15" fill="rgb(213,23,19)" fg:x="1036" fg:w="1"/><text x="45.9492%" y="255.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;::FindAndConstruct (1 samples, 0.04%)</title><rect x="45.6992%" y="229" width="0.0441%" height="15" fill="rgb(217,75,12)" fg:x="1036" fg:w="1"/><text x="45.9492%" y="239.50"></text></g><g><title>llvm::FindFunctionBackedges (1 samples, 0.04%)</title><rect x="45.8756%" y="261" width="0.0441%" height="15" fill="rgb(224,159,17)" fg:x="1040" fg:w="1"/><text x="46.1256%" y="271.50"></text></g><g><title>llvm::JumpThreadingPass::computeValueKnownInPredecessorsImpl (1 samples, 0.04%)</title><rect x="45.9638%" y="213" width="0.0441%" height="15" fill="rgb(217,118,1)" fg:x="1042" fg:w="1"/><text x="46.2138%" y="223.50"></text></g><g><title>llvm::LazyValueInfo::getConstantOnEdge (1 samples, 0.04%)</title><rect x="45.9638%" y="197" width="0.0441%" height="15" fill="rgb(232,180,48)" fg:x="1042" fg:w="1"/><text x="46.2138%" y="207.50"></text></g><g><title>llvm::JumpThreadingPass::computeValueKnownInPredecessorsImpl (2 samples, 0.09%)</title><rect x="45.9638%" y="245" width="0.0882%" height="15" fill="rgb(230,27,33)" fg:x="1042" fg:w="2"/><text x="46.2138%" y="255.50"></text></g><g><title>llvm::JumpThreadingPass::computeValueKnownInPredecessorsImpl (2 samples, 0.09%)</title><rect x="45.9638%" y="229" width="0.0882%" height="15" fill="rgb(205,31,21)" fg:x="1042" fg:w="2"/><text x="46.2138%" y="239.50"></text></g><g><title>llvm::LazyValueInfo::getConstant (1 samples, 0.04%)</title><rect x="46.0079%" y="213" width="0.0441%" height="15" fill="rgb(253,59,4)" fg:x="1043" fg:w="1"/><text x="46.2579%" y="223.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry&gt; &gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, void&gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry&gt; &gt; &gt; &gt;, llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry&gt; &gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, void&gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::BlockCacheEntry&gt; &gt; &gt; &gt;::grow (1 samples, 0.04%)</title><rect x="46.0079%" y="197" width="0.0441%" height="15" fill="rgb(224,201,9)" fg:x="1043" fg:w="1"/><text x="46.2579%" y="207.50"></text></g><g><title>getJumpThreadDuplicationCost (1 samples, 0.04%)</title><rect x="46.0521%" y="229" width="0.0441%" height="15" fill="rgb(229,206,30)" fg:x="1044" fg:w="1"/><text x="46.3021%" y="239.50"></text></g><g><title>llvm::JumpThreadingPass::processThreadableEdges (5 samples, 0.22%)</title><rect x="45.9197%" y="261" width="0.2206%" height="15" fill="rgb(212,67,47)" fg:x="1041" fg:w="5"/><text x="46.1697%" y="271.50"></text></g><g><title>llvm::JumpThreadingPass::tryThreadEdge (2 samples, 0.09%)</title><rect x="46.0521%" y="245" width="0.0882%" height="15" fill="rgb(211,96,50)" fg:x="1044" fg:w="2"/><text x="46.3021%" y="255.50"></text></g><g><title>llvm::JumpThreadingPass::threadEdge (1 samples, 0.04%)</title><rect x="46.0962%" y="229" width="0.0441%" height="15" fill="rgb(252,114,18)" fg:x="1045" fg:w="1"/><text x="46.3462%" y="239.50"></text></g><g><title>llvm::JumpThreadingPass::simplifyPartiallyRedundantLoad (1 samples, 0.04%)</title><rect x="46.1403%" y="261" width="0.0441%" height="15" fill="rgb(223,58,37)" fg:x="1046" fg:w="1"/><text x="46.3903%" y="271.50"></text></g><g><title>llvm::MemoryLocation::get (1 samples, 0.04%)</title><rect x="46.1403%" y="245" width="0.0441%" height="15" fill="rgb(237,70,4)" fg:x="1046" fg:w="1"/><text x="46.3903%" y="255.50"></text></g><g><title>llvm::LazyValueInfo::getPredicateAt (1 samples, 0.04%)</title><rect x="46.1844%" y="261" width="0.0441%" height="15" fill="rgb(244,85,46)" fg:x="1047" fg:w="1"/><text x="46.4344%" y="271.50"></text></g><g><title>llvm::LazyValueInfo::getPredicateOnEdge (1 samples, 0.04%)</title><rect x="46.1844%" y="245" width="0.0441%" height="15" fill="rgb(223,39,52)" fg:x="1047" fg:w="1"/><text x="46.4344%" y="255.50"></text></g><g><title>llvm::RemoveRedundantDbgInstrs (1 samples, 0.04%)</title><rect x="46.2285%" y="261" width="0.0441%" height="15" fill="rgb(218,200,14)" fg:x="1048" fg:w="1"/><text x="46.4785%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::JumpThreadingPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (15 samples, 0.66%)</title><rect x="45.6551%" y="309" width="0.6617%" height="15" fill="rgb(208,171,16)" fg:x="1035" fg:w="15"/><text x="45.9051%" y="319.50"></text></g><g><title>llvm::JumpThreadingPass::run (15 samples, 0.66%)</title><rect x="45.6551%" y="293" width="0.6617%" height="15" fill="rgb(234,200,18)" fg:x="1035" fg:w="15"/><text x="45.9051%" y="303.50"></text></g><g><title>llvm::JumpThreadingPass::runImpl (13 samples, 0.57%)</title><rect x="45.7433%" y="277" width="0.5734%" height="15" fill="rgb(228,45,11)" fg:x="1037" fg:w="13"/><text x="45.9933%" y="287.50"></text></g><g><title>llvm::TryToSimplifyUncondBranchFromEmptyBlock (1 samples, 0.04%)</title><rect x="46.2726%" y="261" width="0.0441%" height="15" fill="rgb(237,182,11)" fg:x="1049" fg:w="1"/><text x="46.5226%" y="271.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (7 samples, 0.31%)</title><rect x="46.3167%" y="277" width="0.3088%" height="15" fill="rgb(241,175,49)" fg:x="1050" fg:w="7"/><text x="46.5667%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::MemorySSAAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (5 samples, 0.22%)</title><rect x="46.4049%" y="261" width="0.2206%" height="15" fill="rgb(247,38,35)" fg:x="1052" fg:w="5"/><text x="46.6549%" y="271.50"></text></g><g><title>llvm::MemorySSA::buildMemorySSA (5 samples, 0.22%)</title><rect x="46.4049%" y="245" width="0.2206%" height="15" fill="rgb(228,39,49)" fg:x="1052" fg:w="5"/><text x="46.6549%" y="255.50"></text></g><g><title>llvm::IDFCalculatorBase&lt;llvm::BasicBlock, false&gt;::calculate (2 samples, 0.09%)</title><rect x="46.5373%" y="229" width="0.0882%" height="15" fill="rgb(226,101,26)" fg:x="1055" fg:w="2"/><text x="46.7873%" y="239.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::MemCpyOptPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (13 samples, 0.57%)</title><rect x="46.3167%" y="309" width="0.5734%" height="15" fill="rgb(206,141,19)" fg:x="1050" fg:w="13"/><text x="46.5667%" y="319.50"></text></g><g><title>llvm::MemCpyOptPass::run (13 samples, 0.57%)</title><rect x="46.3167%" y="293" width="0.5734%" height="15" fill="rgb(211,200,13)" fg:x="1050" fg:w="13"/><text x="46.5667%" y="303.50"></text></g><g><title>llvm::MemCpyOptPass::iterateOnFunction (6 samples, 0.26%)</title><rect x="46.6255%" y="277" width="0.2647%" height="15" fill="rgb(241,121,6)" fg:x="1057" fg:w="6"/><text x="46.8755%" y="287.50"></text></g><g><title>llvm::MemCpyOptPass::processMemCpy (5 samples, 0.22%)</title><rect x="46.6696%" y="261" width="0.2206%" height="15" fill="rgb(234,221,29)" fg:x="1058" fg:w="5"/><text x="46.9196%" y="271.50"></text></g><g><title>llvm::AAResults::getModRefInfo (3 samples, 0.13%)</title><rect x="46.7578%" y="245" width="0.1323%" height="15" fill="rgb(229,136,5)" fg:x="1060" fg:w="3"/><text x="47.0078%" y="255.50"></text></g><g><title>llvm::BasicAAResult::getModRefInfo (3 samples, 0.13%)</title><rect x="46.7578%" y="229" width="0.1323%" height="15" fill="rgb(238,36,11)" fg:x="1060" fg:w="3"/><text x="47.0078%" y="239.50"></text></g><g><title>llvm::BasicAAResult::aliasCheck (1 samples, 0.04%)</title><rect x="46.8461%" y="213" width="0.0441%" height="15" fill="rgb(251,55,41)" fg:x="1062" fg:w="1"/><text x="47.0961%" y="223.50"></text></g><g><title>llvm::ReassociatePass::BuildRankMap (2 samples, 0.09%)</title><rect x="46.9784%" y="277" width="0.0882%" height="15" fill="rgb(242,34,40)" fg:x="1065" fg:w="2"/><text x="47.2284%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::ReassociatePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (6 samples, 0.26%)</title><rect x="46.8902%" y="309" width="0.2647%" height="15" fill="rgb(215,42,17)" fg:x="1063" fg:w="6"/><text x="47.1402%" y="319.50"></text></g><g><title>llvm::ReassociatePass::run (6 samples, 0.26%)</title><rect x="46.8902%" y="293" width="0.2647%" height="15" fill="rgb(207,44,46)" fg:x="1063" fg:w="6"/><text x="47.1402%" y="303.50"></text></g><g><title>llvm::ReversePostOrderTraversal&lt;llvm::Function*, llvm::GraphTraits&lt;llvm::Function*&gt; &gt;::Initialize (2 samples, 0.09%)</title><rect x="47.0666%" y="277" width="0.0882%" height="15" fill="rgb(211,206,28)" fg:x="1067" fg:w="2"/><text x="47.3166%" y="287.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="47.1107%" y="261" width="0.0441%" height="15" fill="rgb(237,167,16)" fg:x="1068" fg:w="1"/><text x="47.3607%" y="271.50"></text></g><g><title>llvm::SCCPInstVisitor::markOverdefined (1 samples, 0.04%)</title><rect x="47.1989%" y="277" width="0.0441%" height="15" fill="rgb(233,66,6)" fg:x="1070" fg:w="1"/><text x="47.4489%" y="287.50"></text></g><g><title>llvm::SCCPInstVisitor::resolvedUndefsIn (1 samples, 0.04%)</title><rect x="47.2431%" y="277" width="0.0441%" height="15" fill="rgb(246,123,29)" fg:x="1071" fg:w="1"/><text x="47.4931%" y="287.50"></text></g><g><title>llvm::SCCPInstVisitor::handleCallArguments (1 samples, 0.04%)</title><rect x="47.3313%" y="261" width="0.0441%" height="15" fill="rgb(209,62,40)" fg:x="1073" fg:w="1"/><text x="47.5813%" y="271.50"></text></g><g><title>llvm::ConstantRange::add (1 samples, 0.04%)</title><rect x="47.4195%" y="245" width="0.0441%" height="15" fill="rgb(218,4,25)" fg:x="1075" fg:w="1"/><text x="47.6695%" y="255.50"></text></g><g><title>llvm::SCCPInstVisitor::solve (5 samples, 0.22%)</title><rect x="47.2872%" y="277" width="0.2206%" height="15" fill="rgb(253,91,49)" fg:x="1072" fg:w="5"/><text x="47.5372%" y="287.50"></text></g><g><title>llvm::SCCPInstVisitor::visitBinaryOperator (3 samples, 0.13%)</title><rect x="47.3754%" y="261" width="0.1323%" height="15" fill="rgb(228,155,29)" fg:x="1074" fg:w="3"/><text x="47.6254%" y="271.50"></text></g><g><title>llvm::ConstantRange::binaryAnd (1 samples, 0.04%)</title><rect x="47.4636%" y="245" width="0.0441%" height="15" fill="rgb(243,57,37)" fg:x="1076" fg:w="1"/><text x="47.7136%" y="255.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SCCPPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (9 samples, 0.40%)</title><rect x="47.1548%" y="309" width="0.3970%" height="15" fill="rgb(244,167,17)" fg:x="1069" fg:w="9"/><text x="47.4048%" y="319.50"></text></g><g><title>runSCCP (8 samples, 0.35%)</title><rect x="47.1989%" y="293" width="0.3529%" height="15" fill="rgb(207,181,38)" fg:x="1070" fg:w="8"/><text x="47.4489%" y="303.50"></text></g><g><title>llvm::SCCPInstVisitor::~SCCPInstVisitor (1 samples, 0.04%)</title><rect x="47.5077%" y="277" width="0.0441%" height="15" fill="rgb(211,8,23)" fg:x="1077" fg:w="1"/><text x="47.7577%" y="287.50"></text></g><g><title>llvm::PromoteMemToReg (3 samples, 0.13%)</title><rect x="47.5518%" y="277" width="0.1323%" height="15" fill="rgb(235,11,44)" fg:x="1078" fg:w="3"/><text x="47.8018%" y="287.50"></text></g><g><title>llvm::IDFCalculatorBase&lt;llvm::BasicBlock, false&gt;::calculate (1 samples, 0.04%)</title><rect x="47.6401%" y="261" width="0.0441%" height="15" fill="rgb(248,18,52)" fg:x="1080" fg:w="1"/><text x="47.8901%" y="271.50"></text></g><g><title>llvm::GEPOperator::accumulateConstantOffset (2 samples, 0.09%)</title><rect x="47.8165%" y="261" width="0.0882%" height="15" fill="rgb(208,4,7)" fg:x="1084" fg:w="2"/><text x="48.0665%" y="271.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SROAPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (9 samples, 0.40%)</title><rect x="47.5518%" y="309" width="0.3970%" height="15" fill="rgb(240,17,39)" fg:x="1078" fg:w="9"/><text x="47.8018%" y="319.50"></text></g><g><title>llvm::SROAPass::runImpl (9 samples, 0.40%)</title><rect x="47.5518%" y="293" width="0.3970%" height="15" fill="rgb(207,170,3)" fg:x="1078" fg:w="9"/><text x="47.8018%" y="303.50"></text></g><g><title>llvm::SROAPass::runOnAlloca (6 samples, 0.26%)</title><rect x="47.6842%" y="277" width="0.2647%" height="15" fill="rgb(236,100,52)" fg:x="1081" fg:w="6"/><text x="47.9342%" y="287.50"></text></g><g><title>llvm::SmallVectorBase&lt;unsigned int&gt;::grow_pod (1 samples, 0.04%)</title><rect x="47.9047%" y="261" width="0.0441%" height="15" fill="rgb(246,78,51)" fg:x="1086" fg:w="1"/><text x="48.1547%" y="271.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="47.9047%" y="245" width="0.0441%" height="15" fill="rgb(211,17,15)" fg:x="1086" fg:w="1"/><text x="48.1547%" y="255.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="47.9488%" y="293" width="0.0441%" height="15" fill="rgb(209,59,46)" fg:x="1087" fg:w="1"/><text x="48.1988%" y="303.50"></text></g><g><title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="48.6546%" y="277" width="0.0441%" height="15" fill="rgb(210,92,25)" fg:x="1103" fg:w="1"/><text x="48.9046%" y="287.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="48.6546%" y="261" width="0.0441%" height="15" fill="rgb(238,174,52)" fg:x="1103" fg:w="1"/><text x="48.9046%" y="271.50"></text></g><g><title>dominatesMergePoint (1 samples, 0.04%)</title><rect x="48.6987%" y="277" width="0.0441%" height="15" fill="rgb(230,73,7)" fg:x="1104" fg:w="1"/><text x="48.9487%" y="287.50"></text></g><g><title>llvm::ConstantFoldTerminator (1 samples, 0.04%)</title><rect x="48.7428%" y="277" width="0.0441%" height="15" fill="rgb(243,124,40)" fg:x="1105" fg:w="1"/><text x="48.9928%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SimplifyCFGPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (26 samples, 1.15%)</title><rect x="47.9488%" y="309" width="1.1469%" height="15" fill="rgb(244,170,11)" fg:x="1087" fg:w="26"/><text x="48.1988%" y="319.50"></text></g><g><title>simplifyFunctionCFG (25 samples, 1.10%)</title><rect x="47.9929%" y="293" width="1.1028%" height="15" fill="rgb(207,114,54)" fg:x="1088" fg:w="25"/><text x="48.2429%" y="303.50"></text></g><g><title>llvm::removeUnreachableBlocks (7 samples, 0.31%)</title><rect x="48.7869%" y="277" width="0.3088%" height="15" fill="rgb(205,42,20)" fg:x="1106" fg:w="7"/><text x="49.0369%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SpeculativeExecutionPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="49.0957%" y="309" width="0.0441%" height="15" fill="rgb(230,30,28)" fg:x="1113" fg:w="1"/><text x="49.3457%" y="319.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (373 samples, 16.45%)</title><rect x="32.8628%" y="325" width="16.4535%" height="15" fill="rgb(205,73,54)" fg:x="745" fg:w="373"/><text x="33.1128%" y="335.50">llvm::PassManager&lt;llvm::F..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::TailCallElimPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (4 samples, 0.18%)</title><rect x="49.1398%" y="309" width="0.1764%" height="15" fill="rgb(254,227,23)" fg:x="1114" fg:w="4"/><text x="49.3898%" y="319.50"></text></g><g><title>llvm::TailCallElimPass::run (4 samples, 0.18%)</title><rect x="49.1398%" y="293" width="0.1764%" height="15" fill="rgb(228,202,34)" fg:x="1114" fg:w="4"/><text x="49.3898%" y="303.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::CGSCCToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (385 samples, 16.98%)</title><rect x="32.4658%" y="357" width="16.9828%" height="15" fill="rgb(222,225,37)" fg:x="736" fg:w="385"/><text x="32.7158%" y="367.50">llvm::detail::PassModel&lt;ll..</text></g><g><title>llvm::CGSCCToFunctionPassAdaptor::run (385 samples, 16.98%)</title><rect x="32.4658%" y="341" width="16.9828%" height="15" fill="rgb(221,14,54)" fg:x="736" fg:w="385"/><text x="32.7158%" y="351.50">llvm::CGSCCToFunctionPassA..</text></g><g><title>updateCGAndAnalysisManagerForPass (3 samples, 0.13%)</title><rect x="49.3163%" y="325" width="0.1323%" height="15" fill="rgb(254,102,2)" fg:x="1118" fg:w="3"/><text x="49.5663%" y="335.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::clear (4 samples, 0.18%)</title><rect x="49.5368%" y="325" width="0.1764%" height="15" fill="rgb(232,104,17)" fg:x="1123" fg:w="4"/><text x="49.7868%" y="335.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;, llvm::OuterAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Module&gt;, llvm::Function&gt;::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="49.6692%" y="309" width="0.0441%" height="15" fill="rgb(250,220,14)" fg:x="1126" fg:w="1"/><text x="49.9192%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="49.7574%" y="229" width="0.0441%" height="15" fill="rgb(241,158,9)" fg:x="1128" fg:w="1"/><text x="50.0074%" y="239.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="49.7574%" y="213" width="0.0441%" height="15" fill="rgb(246,9,43)" fg:x="1128" fg:w="1"/><text x="50.0074%" y="223.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="49.7574%" y="197" width="0.0441%" height="15" fill="rgb(206,73,33)" fg:x="1128" fg:w="1"/><text x="50.0074%" y="207.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::runSemiNCA (1 samples, 0.04%)</title><rect x="49.7574%" y="181" width="0.0441%" height="15" fill="rgb(222,79,8)" fg:x="1128" fg:w="1"/><text x="50.0074%" y="191.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::LoopAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="49.7574%" y="245" width="0.1323%" height="15" fill="rgb(234,8,54)" fg:x="1128" fg:w="3"/><text x="50.0074%" y="255.50"></text></g><g><title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (2 samples, 0.09%)</title><rect x="49.8015%" y="229" width="0.0882%" height="15" fill="rgb(209,134,38)" fg:x="1129" fg:w="2"/><text x="50.0515%" y="239.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::FindRoots (1 samples, 0.04%)</title><rect x="49.8897%" y="213" width="0.0441%" height="15" fill="rgb(230,127,29)" fg:x="1131" fg:w="1"/><text x="50.1397%" y="223.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::moveFromOldBuckets (1 samples, 0.04%)</title><rect x="49.9338%" y="197" width="0.0441%" height="15" fill="rgb(242,44,41)" fg:x="1132" fg:w="1"/><text x="50.1838%" y="207.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::attachNewSubtree (2 samples, 0.09%)</title><rect x="49.9338%" y="213" width="0.0882%" height="15" fill="rgb(222,56,43)" fg:x="1132" fg:w="2"/><text x="50.1838%" y="223.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::getNodeForBlock (1 samples, 0.04%)</title><rect x="49.9779%" y="197" width="0.0441%" height="15" fill="rgb(238,39,47)" fg:x="1133" fg:w="1"/><text x="50.2279%" y="207.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (8 samples, 0.35%)</title><rect x="49.7133%" y="261" width="0.3529%" height="15" fill="rgb(226,79,43)" fg:x="1127" fg:w="8"/><text x="49.9633%" y="271.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (4 samples, 0.18%)</title><rect x="49.8897%" y="245" width="0.1764%" height="15" fill="rgb(242,105,53)" fg:x="1131" fg:w="4"/><text x="50.1397%" y="255.50"></text></g><g><title>llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt; (4 samples, 0.18%)</title><rect x="49.8897%" y="229" width="0.1764%" height="15" fill="rgb(251,132,46)" fg:x="1131" fg:w="4"/><text x="50.1397%" y="239.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::runSemiNCA (1 samples, 0.04%)</title><rect x="50.0221%" y="213" width="0.0441%" height="15" fill="rgb(231,77,14)" fg:x="1134" fg:w="1"/><text x="50.2721%" y="223.50"></text></g><g><title>llvm::BranchProbabilityInfo::calcEstimatedHeuristics (1 samples, 0.04%)</title><rect x="50.0662%" y="245" width="0.0441%" height="15" fill="rgb(240,135,9)" fg:x="1135" fg:w="1"/><text x="50.3162%" y="255.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (10 samples, 0.44%)</title><rect x="49.7133%" y="293" width="0.4411%" height="15" fill="rgb(248,109,14)" fg:x="1127" fg:w="10"/><text x="49.9633%" y="303.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (10 samples, 0.44%)</title><rect x="49.7133%" y="277" width="0.4411%" height="15" fill="rgb(227,146,52)" fg:x="1127" fg:w="10"/><text x="49.9633%" y="287.50"></text></g><g><title>llvm::BranchProbabilityInfo::calculate (2 samples, 0.09%)</title><rect x="50.0662%" y="261" width="0.0882%" height="15" fill="rgb(232,54,3)" fg:x="1135" fg:w="2"/><text x="50.3162%" y="271.50"></text></g><g><title>llvm::BranchProbabilityInfo::computeEestimateBlockWeight (1 samples, 0.04%)</title><rect x="50.1103%" y="245" width="0.0441%" height="15" fill="rgb(229,201,43)" fg:x="1136" fg:w="1"/><text x="50.3603%" y="255.50"></text></g><g><title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::computeMassInLoop (1 samples, 0.04%)</title><rect x="50.1544%" y="293" width="0.0441%" height="15" fill="rgb(252,161,33)" fg:x="1137" fg:w="1"/><text x="50.4044%" y="303.50"></text></g><g><title>llvm::BlockFrequencyInfoImplBase::distributeMass (1 samples, 0.04%)</title><rect x="50.1544%" y="277" width="0.0441%" height="15" fill="rgb(226,146,40)" fg:x="1137" fg:w="1"/><text x="50.4044%" y="287.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (12 samples, 0.53%)</title><rect x="49.7133%" y="325" width="0.5293%" height="15" fill="rgb(219,47,25)" fg:x="1127" fg:w="12"/><text x="49.9633%" y="335.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (12 samples, 0.53%)</title><rect x="49.7133%" y="309" width="0.5293%" height="15" fill="rgb(250,135,13)" fg:x="1127" fg:w="12"/><text x="49.9633%" y="319.50"></text></g><g><title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::tryToComputeMassInFunction (1 samples, 0.04%)</title><rect x="50.1985%" y="293" width="0.0441%" height="15" fill="rgb(219,229,18)" fg:x="1138" fg:w="1"/><text x="50.4485%" y="303.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (1 samples, 0.04%)</title><rect x="50.2426%" y="325" width="0.0441%" height="15" fill="rgb(217,152,27)" fg:x="1139" fg:w="1"/><text x="50.4926%" y="335.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::BlockFrequencyInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="50.2426%" y="309" width="0.0441%" height="15" fill="rgb(225,71,47)" fg:x="1139" fg:w="1"/><text x="50.4926%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;::clear (2 samples, 0.09%)</title><rect x="50.2867%" y="325" width="0.0882%" height="15" fill="rgb(220,139,14)" fg:x="1140" fg:w="2"/><text x="50.5367%" y="335.50"></text></g><g><title>llvm::Function::dropAllReferences (1 samples, 0.04%)</title><rect x="50.3749%" y="325" width="0.0441%" height="15" fill="rgb(247,54,32)" fg:x="1142" fg:w="1"/><text x="50.6249%" y="335.50"></text></g><g><title>llvm::BasicBlock::~BasicBlock (1 samples, 0.04%)</title><rect x="50.3749%" y="309" width="0.0441%" height="15" fill="rgb(252,131,39)" fg:x="1142" fg:w="1"/><text x="50.6249%" y="319.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="50.3749%" y="293" width="0.0441%" height="15" fill="rgb(210,108,39)" fg:x="1142" fg:w="1"/><text x="50.6249%" y="303.50"></text></g><g><title>llvm::Function::~Function (2 samples, 0.09%)</title><rect x="50.4191%" y="325" width="0.0882%" height="15" fill="rgb(205,23,29)" fg:x="1143" fg:w="2"/><text x="50.6691%" y="335.50"></text></g><g><title>llvm::GlobalsAAResult::DeletionCallbackHandle::deleted (1 samples, 0.04%)</title><rect x="50.4632%" y="309" width="0.0441%" height="15" fill="rgb(246,139,46)" fg:x="1144" fg:w="1"/><text x="50.7132%" y="319.50"></text></g><g><title>llvm::AssumptionCache::registerAssumption (1 samples, 0.04%)</title><rect x="51.2131%" y="309" width="0.0441%" height="15" fill="rgb(250,81,26)" fg:x="1161" fg:w="1"/><text x="51.4631%" y="319.50"></text></g><g><title>llvm::AssumptionCache::updateAffectedValues (1 samples, 0.04%)</title><rect x="51.2131%" y="293" width="0.0441%" height="15" fill="rgb(214,104,7)" fg:x="1161" fg:w="1"/><text x="51.4631%" y="303.50"></text></g><g><title>llvm::DenseMap&lt;llvm::AssumptionCache::AffectedValueCallbackVH, llvm::SmallVector&lt;llvm::AssumptionCache::ResultElem, 1u&gt;, llvm::DenseMapInfo&lt;llvm::Value*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AssumptionCache::AffectedValueCallbackVH, llvm::SmallVector&lt;llvm::AssumptionCache::ResultElem, 1u&gt; &gt; &gt;::grow (1 samples, 0.04%)</title><rect x="51.2131%" y="277" width="0.0441%" height="15" fill="rgb(233,189,8)" fg:x="1161" fg:w="1"/><text x="51.4631%" y="287.50"></text></g><g><title>llvm::BlockFrequencyInfo::setBlockFreq (3 samples, 0.13%)</title><rect x="51.2572%" y="309" width="0.1323%" height="15" fill="rgb(228,141,17)" fg:x="1162" fg:w="3"/><text x="51.5072%" y="319.50"></text></g><g><title>llvm::BlockFrequencyInfo::setBlockFreqAndScale (1 samples, 0.04%)</title><rect x="51.3895%" y="309" width="0.0441%" height="15" fill="rgb(247,157,1)" fg:x="1165" fg:w="1"/><text x="51.6395%" y="319.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Value*, llvm::ValueHandleBase*, llvm::DenseMapInfo&lt;llvm::Value*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueHandleBase*&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="52.0071%" y="293" width="0.0441%" height="15" fill="rgb(249,225,5)" fg:x="1179" fg:w="1"/><text x="52.2571%" y="303.50"></text></g><g><title>llvm::Instruction::clone (4 samples, 0.18%)</title><rect x="52.0512%" y="293" width="0.1764%" height="15" fill="rgb(242,55,13)" fg:x="1180" fg:w="4"/><text x="52.3012%" y="303.50"></text></g><g><title>llvm::ValueMap&lt;llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig&lt;llvm::Value const*, llvm::sys::SmartMutex&lt;false&gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="52.2276%" y="293" width="0.0441%" height="15" fill="rgb(230,49,50)" fg:x="1184" fg:w="1"/><text x="52.4776%" y="303.50"></text></g><g><title>llvm::ValueMapper::remapInstruction (7 samples, 0.31%)</title><rect x="52.2717%" y="293" width="0.3088%" height="15" fill="rgb(241,111,38)" fg:x="1185" fg:w="7"/><text x="52.5217%" y="303.50"></text></g><g><title>llvm::CloneAndPruneIntoFromInst (30 samples, 1.32%)</title><rect x="51.4336%" y="309" width="1.3233%" height="15" fill="rgb(252,155,4)" fg:x="1166" fg:w="30"/><text x="51.6836%" y="319.50"></text></g><g><title>llvm::simplifyInstruction (4 samples, 0.18%)</title><rect x="52.5805%" y="293" width="0.1764%" height="15" fill="rgb(212,69,32)" fg:x="1192" fg:w="4"/><text x="52.8305%" y="303.50"></text></g><g><title>simplifyICmpInst (3 samples, 0.13%)</title><rect x="52.6246%" y="277" width="0.1323%" height="15" fill="rgb(243,107,47)" fg:x="1193" fg:w="3"/><text x="52.8746%" y="287.50"></text></g><g><title>isKnownNonEqual (1 samples, 0.04%)</title><rect x="52.7128%" y="261" width="0.0441%" height="15" fill="rgb(247,130,12)" fg:x="1195" fg:w="1"/><text x="52.9628%" y="271.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="52.7128%" y="245" width="0.0441%" height="15" fill="rgb(233,74,16)" fg:x="1195" fg:w="1"/><text x="52.9628%" y="255.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="52.7128%" y="229" width="0.0441%" height="15" fill="rgb(208,58,18)" fg:x="1195" fg:w="1"/><text x="52.9628%" y="239.50"></text></g><g><title>llvm::DILocation::DILocation (1 samples, 0.04%)</title><rect x="52.8893%" y="293" width="0.0441%" height="15" fill="rgb(242,225,1)" fg:x="1199" fg:w="1"/><text x="53.1393%" y="303.50"></text></g><g><title>llvm::MDNode::MDNode (1 samples, 0.04%)</title><rect x="52.8893%" y="277" width="0.0441%" height="15" fill="rgb(249,39,40)" fg:x="1199" fg:w="1"/><text x="53.1393%" y="287.50"></text></g><g><title>llvm::DILocation::getImpl (5 samples, 0.22%)</title><rect x="52.7569%" y="309" width="0.2206%" height="15" fill="rgb(207,72,44)" fg:x="1196" fg:w="5"/><text x="53.0069%" y="319.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DILocation&gt;, llvm::detail::DenseSetPair&lt;llvm::DILocation*&gt; &gt;, llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DILocation&gt;, llvm::detail::DenseSetPair&lt;llvm::DILocation*&gt; &gt;::moveFromOldBuckets (1 samples, 0.04%)</title><rect x="52.9334%" y="293" width="0.0441%" height="15" fill="rgb(215,193,12)" fg:x="1200" fg:w="1"/><text x="53.1834%" y="303.50"></text></g><g><title>llvm::DebugLoc::appendInlinedAt (1 samples, 0.04%)</title><rect x="52.9775%" y="309" width="0.0441%" height="15" fill="rgb(248,41,39)" fg:x="1201" fg:w="1"/><text x="53.2275%" y="319.50"></text></g><g><title>llvm::Instruction::setMetadata (2 samples, 0.09%)</title><rect x="53.0216%" y="309" width="0.0882%" height="15" fill="rgb(253,85,4)" fg:x="1202" fg:w="2"/><text x="53.2716%" y="319.50"></text></g><g><title>llvm::MDNode::concatenate (1 samples, 0.04%)</title><rect x="53.1098%" y="309" width="0.0441%" height="15" fill="rgb(243,70,31)" fg:x="1204" fg:w="1"/><text x="53.3598%" y="319.50"></text></g><g><title>llvm::MDNode::deleteTemporary (1 samples, 0.04%)</title><rect x="53.1539%" y="309" width="0.0441%" height="15" fill="rgb(253,195,26)" fg:x="1205" fg:w="1"/><text x="53.4039%" y="319.50"></text></g><g><title>llvm::ReplaceableMetadataImpl::replaceAllUsesWith (1 samples, 0.04%)</title><rect x="53.1539%" y="293" width="0.0441%" height="15" fill="rgb(243,42,11)" fg:x="1205" fg:w="1"/><text x="53.4039%" y="303.50"></text></g><g><title>llvm::MDTuple::getImpl (5 samples, 0.22%)</title><rect x="53.1981%" y="309" width="0.2206%" height="15" fill="rgb(239,66,17)" fg:x="1206" fg:w="5"/><text x="53.4481%" y="319.50"></text></g><g><title>operator new (1 samples, 0.04%)</title><rect x="53.3745%" y="293" width="0.0441%" height="15" fill="rgb(217,132,21)" fg:x="1210" fg:w="1"/><text x="53.6245%" y="303.50"></text></g><g><title>llvm::PointerMayBeCaptured (1 samples, 0.04%)</title><rect x="53.4186%" y="309" width="0.0441%" height="15" fill="rgb(252,202,21)" fg:x="1211" fg:w="1"/><text x="53.6686%" y="319.50"></text></g><g><title>llvm::isPotentiallyReachable (1 samples, 0.04%)</title><rect x="53.4186%" y="293" width="0.0441%" height="15" fill="rgb(233,98,36)" fg:x="1211" fg:w="1"/><text x="53.6686%" y="303.50"></text></g><g><title>llvm::SymbolTableListTraits&lt;llvm::Instruction&gt;::setSymTabObject&lt;llvm::Function*&gt; (1 samples, 0.04%)</title><rect x="53.4627%" y="309" width="0.0441%" height="15" fill="rgb(216,153,54)" fg:x="1212" fg:w="1"/><text x="53.7127%" y="319.50"></text></g><g><title>llvm::InlineFunction (70 samples, 3.09%)</title><rect x="50.5073%" y="325" width="3.0878%" height="15" fill="rgb(250,99,7)" fg:x="1145" fg:w="70"/><text x="50.7573%" y="335.50">llv..</text></g><g><title>llvm::Value::replaceAllUsesWith (2 samples, 0.09%)</title><rect x="53.5068%" y="309" width="0.0882%" height="15" fill="rgb(207,56,50)" fg:x="1213" fg:w="2"/><text x="53.7568%" y="319.50"></text></g><g><title>llvm::getAttributeBasedInliningDecision (2 samples, 0.09%)</title><rect x="53.5951%" y="325" width="0.0882%" height="15" fill="rgb(244,61,34)" fg:x="1215" fg:w="2"/><text x="53.8451%" y="335.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::LoopAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (2 samples, 0.09%)</title><rect x="54.0803%" y="229" width="0.0882%" height="15" fill="rgb(241,50,38)" fg:x="1226" fg:w="2"/><text x="54.3303%" y="239.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="54.0803%" y="213" width="0.0882%" height="15" fill="rgb(212,166,30)" fg:x="1226" fg:w="2"/><text x="54.3303%" y="223.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="54.1244%" y="197" width="0.0441%" height="15" fill="rgb(249,127,32)" fg:x="1227" fg:w="1"/><text x="54.3744%" y="207.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="54.1244%" y="181" width="0.0441%" height="15" fill="rgb(209,103,0)" fg:x="1227" fg:w="1"/><text x="54.3744%" y="191.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::FindRoots (1 samples, 0.04%)</title><rect x="54.1685%" y="197" width="0.0441%" height="15" fill="rgb(238,209,51)" fg:x="1228" fg:w="1"/><text x="54.4185%" y="207.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::attachNewSubtree (1 samples, 0.04%)</title><rect x="54.2126%" y="197" width="0.0441%" height="15" fill="rgb(237,56,23)" fg:x="1229" fg:w="1"/><text x="54.4626%" y="207.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::getNodeForBlock (1 samples, 0.04%)</title><rect x="54.2126%" y="181" width="0.0441%" height="15" fill="rgb(215,153,46)" fg:x="1229" fg:w="1"/><text x="54.4626%" y="191.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (5 samples, 0.22%)</title><rect x="54.0803%" y="245" width="0.2206%" height="15" fill="rgb(224,49,31)" fg:x="1226" fg:w="5"/><text x="54.3303%" y="255.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::PostDominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="54.1685%" y="229" width="0.1323%" height="15" fill="rgb(250,18,42)" fg:x="1228" fg:w="3"/><text x="54.4185%" y="239.50"></text></g><g><title>llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt; (3 samples, 0.13%)</title><rect x="54.1685%" y="213" width="0.1323%" height="15" fill="rgb(215,176,39)" fg:x="1228" fg:w="3"/><text x="54.4185%" y="223.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::doFullDFSWalk&lt;bool (*)(llvm::BasicBlock*, llvm::BasicBlock*)&gt; (1 samples, 0.04%)</title><rect x="54.2567%" y="197" width="0.0441%" height="15" fill="rgb(223,77,29)" fg:x="1230" fg:w="1"/><text x="54.5067%" y="207.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (6 samples, 0.26%)</title><rect x="54.0803%" y="277" width="0.2647%" height="15" fill="rgb(234,94,52)" fg:x="1226" fg:w="6"/><text x="54.3303%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (6 samples, 0.26%)</title><rect x="54.0803%" y="261" width="0.2647%" height="15" fill="rgb(220,154,50)" fg:x="1226" fg:w="6"/><text x="54.3303%" y="271.50"></text></g><g><title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.04%)</title><rect x="54.3008%" y="245" width="0.0441%" height="15" fill="rgb(212,11,10)" fg:x="1231" fg:w="1"/><text x="54.5508%" y="255.50"></text></g><g><title>llvm::shouldInline (17 samples, 0.75%)</title><rect x="53.6833%" y="325" width="0.7499%" height="15" fill="rgb(205,166,19)" fg:x="1217" fg:w="17"/><text x="53.9333%" y="335.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (8 samples, 0.35%)</title><rect x="54.0803%" y="309" width="0.3529%" height="15" fill="rgb(244,198,16)" fg:x="1226" fg:w="8"/><text x="54.3303%" y="319.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (8 samples, 0.35%)</title><rect x="54.0803%" y="293" width="0.3529%" height="15" fill="rgb(219,69,12)" fg:x="1226" fg:w="8"/><text x="54.3303%" y="303.50"></text></g><g><title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::initializeRPOT (2 samples, 0.09%)</title><rect x="54.3449%" y="277" width="0.0882%" height="15" fill="rgb(245,30,7)" fg:x="1232" fg:w="2"/><text x="54.5949%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::InlinerPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (117 samples, 5.16%)</title><rect x="49.4486%" y="357" width="5.1610%" height="15" fill="rgb(218,221,48)" fg:x="1121" fg:w="117"/><text x="49.6986%" y="367.50">llvm::..</text></g><g><title>llvm::InlinerPass::run (117 samples, 5.16%)</title><rect x="49.4486%" y="341" width="5.1610%" height="15" fill="rgb(216,66,15)" fg:x="1121" fg:w="117"/><text x="49.6986%" y="351.50">llvm::..</text></g><g><title>updateCGAndAnalysisManagerForPass (4 samples, 0.18%)</title><rect x="54.4332%" y="325" width="0.1764%" height="15" fill="rgb(226,122,50)" fg:x="1234" fg:w="4"/><text x="54.6832%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="54.5655%" y="309" width="0.0441%" height="15" fill="rgb(239,156,16)" fg:x="1237" fg:w="1"/><text x="54.8155%" y="319.50"></text></g><g><title>determinePointerAccessAttrs (1 samples, 0.04%)</title><rect x="54.7861%" y="309" width="0.0441%" height="15" fill="rgb(224,27,38)" fg:x="1242" fg:w="1"/><text x="55.0361%" y="319.50"></text></g><g><title>llvm::SmallPtrSetImplBase::insert_imp_big (1 samples, 0.04%)</title><rect x="54.7861%" y="293" width="0.0441%" height="15" fill="rgb(224,39,27)" fg:x="1242" fg:w="1"/><text x="55.0361%" y="303.50"></text></g><g><title>addArgumentAttrs (6 samples, 0.26%)</title><rect x="54.6978%" y="325" width="0.2647%" height="15" fill="rgb(215,92,29)" fg:x="1240" fg:w="6"/><text x="54.9478%" y="335.50"></text></g><g><title>llvm::AttributeList::addAttributeAtIndex (3 samples, 0.13%)</title><rect x="54.8302%" y="309" width="0.1323%" height="15" fill="rgb(207,159,16)" fg:x="1243" fg:w="3"/><text x="55.0802%" y="319.50"></text></g><g><title>qsort_r (1 samples, 0.04%)</title><rect x="54.9184%" y="293" width="0.0441%" height="15" fill="rgb(238,163,47)" fg:x="1245" fg:w="1"/><text x="55.1684%" y="303.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="54.9184%" y="277" width="0.0441%" height="15" fill="rgb(219,91,49)" fg:x="1245" fg:w="1"/><text x="55.1684%" y="287.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="54.9184%" y="261" width="0.0441%" height="15" fill="rgb(227,167,31)" fg:x="1245" fg:w="1"/><text x="55.1684%" y="271.50"></text></g><g><title>llvm::array_pod_sort_comparator&lt;llvm::Attribute&gt; (1 samples, 0.04%)</title><rect x="54.9184%" y="245" width="0.0441%" height="15" fill="rgb(234,80,54)" fg:x="1245" fg:w="1"/><text x="55.1684%" y="255.50"></text></g><g><title>addArgumentReturnedAttrs (2 samples, 0.09%)</title><rect x="54.9625%" y="325" width="0.0882%" height="15" fill="rgb(212,114,2)" fg:x="1246" fg:w="2"/><text x="55.2125%" y="335.50"></text></g><g><title>llvm::GlobalValue::isInterposable (1 samples, 0.04%)</title><rect x="55.0066%" y="309" width="0.0441%" height="15" fill="rgb(234,50,24)" fg:x="1247" fg:w="1"/><text x="55.2566%" y="319.50"></text></g><g><title>addNoReturnAttrs (1 samples, 0.04%)</title><rect x="55.0507%" y="325" width="0.0441%" height="15" fill="rgb(221,68,8)" fg:x="1248" fg:w="1"/><text x="55.3007%" y="335.50"></text></g><g><title>llvm::GlobalValue::isInterposable (1 samples, 0.04%)</title><rect x="55.0507%" y="309" width="0.0441%" height="15" fill="rgb(254,180,31)" fg:x="1248" fg:w="1"/><text x="55.3007%" y="319.50"></text></g><g><title>addWillReturn (1 samples, 0.04%)</title><rect x="55.0948%" y="325" width="0.0441%" height="15" fill="rgb(247,130,50)" fg:x="1249" fg:w="1"/><text x="55.3448%" y="335.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::getModRefBehavior (1 samples, 0.04%)</title><rect x="55.2713%" y="293" width="0.0441%" height="15" fill="rgb(211,109,4)" fg:x="1253" fg:w="1"/><text x="55.5213%" y="303.50"></text></g><g><title>checkFunctionMemoryAccess (5 samples, 0.22%)</title><rect x="55.1390%" y="325" width="0.2206%" height="15" fill="rgb(238,50,21)" fg:x="1250" fg:w="5"/><text x="55.3890%" y="335.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::getModRefBehavior (2 samples, 0.09%)</title><rect x="55.2713%" y="309" width="0.0882%" height="15" fill="rgb(225,57,45)" fg:x="1253" fg:w="2"/><text x="55.5213%" y="319.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::GlobalsAAResult&gt;::getModRefBehavior (1 samples, 0.04%)</title><rect x="55.3154%" y="293" width="0.0441%" height="15" fill="rgb(209,196,50)" fg:x="1254" fg:w="1"/><text x="55.5654%" y="303.50"></text></g><g><title>createSCCNodeSet (2 samples, 0.09%)</title><rect x="55.3595%" y="325" width="0.0882%" height="15" fill="rgb(242,140,13)" fg:x="1255" fg:w="2"/><text x="55.6095%" y="335.50"></text></g><g><title>inferConvergent (1 samples, 0.04%)</title><rect x="55.4477%" y="325" width="0.0441%" height="15" fill="rgb(217,111,7)" fg:x="1257" fg:w="1"/><text x="55.6977%" y="335.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="55.4918%" y="325" width="0.0441%" height="15" fill="rgb(253,193,51)" fg:x="1258" fg:w="1"/><text x="55.7418%" y="335.50"></text></g><g><title>llvm::AttributeList::addAttributeAtIndex (1 samples, 0.04%)</title><rect x="55.5360%" y="325" width="0.0441%" height="15" fill="rgb(252,70,29)" fg:x="1259" fg:w="1"/><text x="55.7860%" y="335.50"></text></g><g><title>std::_Function_handler&lt;void (llvm::Function&amp;), addNoSyncAttr(llvm::SmallSetVector&lt;llvm::Function*, 8u&gt; const&amp;, llvm::SmallSet&lt;llvm::Function*, 8u, std::less&lt;llvm::Function*&gt; &gt;&amp;)::$_18&gt;::_M_invoke (3 samples, 0.13%)</title><rect x="55.5801%" y="325" width="0.1323%" height="15" fill="rgb(232,127,12)" fg:x="1260" fg:w="3"/><text x="55.8301%" y="335.50"></text></g><g><title>llvm::AttributeList::addAttributeAtIndex (3 samples, 0.13%)</title><rect x="55.5801%" y="309" width="0.1323%" height="15" fill="rgb(211,180,21)" fg:x="1260" fg:w="3"/><text x="55.8301%" y="319.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="55.6683%" y="293" width="0.0441%" height="15" fill="rgb(229,72,13)" fg:x="1262" fg:w="1"/><text x="55.9183%" y="303.50"></text></g><g><title>llvm::DevirtSCCRepeatedPass::run (551 samples, 24.31%)</title><rect x="31.4513%" y="389" width="24.3052%" height="15" fill="rgb(240,211,49)" fg:x="713" fg:w="551"/><text x="31.7013%" y="399.50">llvm::DevirtSCCRepeatedPass::run</text></g><g><title>llvm::PassManager&lt;llvm::LazyCallGraph::SCC, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (548 samples, 24.17%)</title><rect x="31.5836%" y="373" width="24.1729%" height="15" fill="rgb(219,149,40)" fg:x="716" fg:w="548"/><text x="31.8336%" y="383.50">llvm::PassManager&lt;llvm::LazyCallGraph:..</text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::PostOrderFunctionAttrsPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (26 samples, 1.15%)</title><rect x="54.6096%" y="357" width="1.1469%" height="15" fill="rgb(210,127,46)" fg:x="1238" fg:w="26"/><text x="54.8596%" y="367.50"></text></g><g><title>llvm::PostOrderFunctionAttrsPass::run (26 samples, 1.15%)</title><rect x="54.6096%" y="341" width="1.1469%" height="15" fill="rgb(220,106,7)" fg:x="1238" fg:w="26"/><text x="54.8596%" y="351.50"></text></g><g><title>std::_Function_handler&lt;void (llvm::Function&amp;), inferAttrsFromFunctionBodies(llvm::SmallSetVector&lt;llvm::Function*, 8u&gt; const&amp;, llvm::SmallSet&lt;llvm::Function*, 8u, std::less&lt;llvm::Function*&gt; &gt;&amp;)::$_14&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="55.7124%" y="325" width="0.0441%" height="15" fill="rgb(249,31,22)" fg:x="1263" fg:w="1"/><text x="55.9624%" y="335.50"></text></g><g><title>llvm::AttributeList::addAttributeAtIndex (1 samples, 0.04%)</title><rect x="55.7124%" y="309" width="0.0441%" height="15" fill="rgb(253,1,49)" fg:x="1263" fg:w="1"/><text x="55.9624%" y="319.50"></text></g><g><title>llvm::LazyCallGraph::buildRefSCCs (2 samples, 0.09%)</title><rect x="55.7565%" y="389" width="0.0882%" height="15" fill="rgb(227,144,33)" fg:x="1264" fg:w="2"/><text x="56.0065%" y="399.50"></text></g><g><title>llvm::LazyCallGraph::Node::populateSlow (2 samples, 0.09%)</title><rect x="55.7565%" y="373" width="0.0882%" height="15" fill="rgb(249,163,44)" fg:x="1264" fg:w="2"/><text x="56.0065%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToPostOrderCGSCCPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (558 samples, 24.61%)</title><rect x="31.2748%" y="421" width="24.6140%" height="15" fill="rgb(234,15,39)" fg:x="709" fg:w="558"/><text x="31.5248%" y="431.50">llvm::detail::PassModel&lt;llvm::Module, l..</text></g><g><title>llvm::ModuleToPostOrderCGSCCPassAdaptor::run (558 samples, 24.61%)</title><rect x="31.2748%" y="405" width="24.6140%" height="15" fill="rgb(207,66,16)" fg:x="709" fg:w="558"/><text x="31.5248%" y="415.50">llvm::ModuleToPostOrderCGSCCPassAdaptor..</text></g><g><title>llvm::PreservedAnalyses::intersect (1 samples, 0.04%)</title><rect x="55.8447%" y="389" width="0.0441%" height="15" fill="rgb(233,112,24)" fg:x="1266" fg:w="1"/><text x="56.0947%" y="399.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="55.8888%" y="357" width="0.1323%" height="15" fill="rgb(230,90,22)" fg:x="1267" fg:w="3"/><text x="56.1388%" y="367.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Module, llvm::CallGraphAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="55.8888%" y="341" width="0.1323%" height="15" fill="rgb(229,61,13)" fg:x="1267" fg:w="3"/><text x="56.1388%" y="351.50"></text></g><g><title>llvm::CallGraph::populateCallGraphNode (3 samples, 0.13%)</title><rect x="55.8888%" y="325" width="0.1323%" height="15" fill="rgb(225,57,24)" fg:x="1267" fg:w="3"/><text x="56.1388%" y="335.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleInlinerWrapperPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (568 samples, 25.06%)</title><rect x="31.0101%" y="469" width="25.0551%" height="15" fill="rgb(208,169,48)" fg:x="703" fg:w="568"/><text x="31.2601%" y="479.50">llvm::detail::PassModel&lt;llvm::Module, ll..</text></g><g><title>llvm::ModuleInlinerWrapperPass::run (568 samples, 25.06%)</title><rect x="31.0101%" y="453" width="25.0551%" height="15" fill="rgb(244,218,51)" fg:x="703" fg:w="568"/><text x="31.2601%" y="463.50">llvm::ModuleInlinerWrapperPass::run</text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (568 samples, 25.06%)</title><rect x="31.0101%" y="437" width="25.0551%" height="15" fill="rgb(214,148,10)" fg:x="703" fg:w="568"/><text x="31.2601%" y="447.50">llvm::PassManager&lt;llvm::Module, llvm::An..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::RequireAnalysisPass&lt;llvm::GlobalsAA, llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (4 samples, 0.18%)</title><rect x="55.8888%" y="421" width="0.1764%" height="15" fill="rgb(225,174,27)" fg:x="1267" fg:w="4"/><text x="56.1388%" y="431.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (4 samples, 0.18%)</title><rect x="55.8888%" y="405" width="0.1764%" height="15" fill="rgb(230,96,26)" fg:x="1267" fg:w="4"/><text x="56.1388%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Module, llvm::GlobalsAA, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;::run (4 samples, 0.18%)</title><rect x="55.8888%" y="389" width="0.1764%" height="15" fill="rgb(232,10,30)" fg:x="1267" fg:w="4"/><text x="56.1388%" y="399.50"></text></g><g><title>llvm::GlobalsAA::run (4 samples, 0.18%)</title><rect x="55.8888%" y="373" width="0.1764%" height="15" fill="rgb(222,8,50)" fg:x="1267" fg:w="4"/><text x="56.1388%" y="383.50"></text></g><g><title>llvm::GlobalsAAResult::AnalyzeCallGraph (1 samples, 0.04%)</title><rect x="56.0212%" y="357" width="0.0441%" height="15" fill="rgb(213,81,27)" fg:x="1270" fg:w="1"/><text x="56.2712%" y="367.50"></text></g><g><title>llvm::scc_iterator&lt;llvm::CallGraph*, llvm::GraphTraits&lt;llvm::CallGraph*&gt; &gt;::GetNextSCC (1 samples, 0.04%)</title><rect x="56.0212%" y="341" width="0.0441%" height="15" fill="rgb(245,50,10)" fg:x="1270" fg:w="1"/><text x="56.2712%" y="351.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::invalidate (2 samples, 0.09%)</title><rect x="56.0653%" y="437" width="0.0882%" height="15" fill="rgb(216,100,18)" fg:x="1271" fg:w="2"/><text x="56.3153%" y="447.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::DominatorTree, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="56.2858%" y="421" width="0.0441%" height="15" fill="rgb(236,147,54)" fg:x="1276" fg:w="1"/><text x="56.5358%" y="431.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::DominatorTree, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="56.3300%" y="421" width="0.0441%" height="15" fill="rgb(205,143,26)" fg:x="1277" fg:w="1"/><text x="56.5800%" y="431.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::CallSiteSplittingPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="56.3741%" y="421" width="0.0441%" height="15" fill="rgb(236,26,9)" fg:x="1278" fg:w="1"/><text x="56.6241%" y="431.50"></text></g><g><title>doCallSiteSplitting (1 samples, 0.04%)</title><rect x="56.3741%" y="405" width="0.0441%" height="15" fill="rgb(221,165,53)" fg:x="1278" fg:w="1"/><text x="56.6241%" y="415.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::EarlyCSEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (2 samples, 0.09%)</title><rect x="56.4182%" y="421" width="0.0882%" height="15" fill="rgb(214,110,17)" fg:x="1279" fg:w="2"/><text x="56.6682%" y="431.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="56.6387%" y="405" width="0.0882%" height="15" fill="rgb(237,197,12)" fg:x="1284" fg:w="2"/><text x="56.8887%" y="415.50"></text></g><g><title>llvm::Instruction::isIdenticalToWhenDefined (1 samples, 0.04%)</title><rect x="56.7270%" y="405" width="0.0441%" height="15" fill="rgb(205,84,17)" fg:x="1286" fg:w="1"/><text x="56.9770%" y="415.50"></text></g><g><title>llvm::ScopedHashTable&lt;(anonymous namespace)::SimpleValue, llvm::Value*, llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue, void&gt;, llvm::RecyclingAllocator&lt;llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul, 128ul&gt;, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;, 32ul, 8ul&gt; &gt;::insert (1 samples, 0.04%)</title><rect x="56.7711%" y="405" width="0.0441%" height="15" fill="rgb(237,18,45)" fg:x="1287" fg:w="1"/><text x="57.0211%" y="415.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="56.8152%" y="405" width="0.0441%" height="15" fill="rgb(221,87,14)" fg:x="1288" fg:w="1"/><text x="57.0652%" y="415.50"></text></g><g><title>simplifyICmpInst (2 samples, 0.09%)</title><rect x="56.9916%" y="389" width="0.0882%" height="15" fill="rgb(238,186,15)" fg:x="1292" fg:w="2"/><text x="57.2416%" y="399.50"></text></g><g><title>isKnownNonZero (2 samples, 0.09%)</title><rect x="56.9916%" y="373" width="0.0882%" height="15" fill="rgb(208,115,11)" fg:x="1292" fg:w="2"/><text x="57.2416%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::EarlyCSEPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (14 samples, 0.62%)</title><rect x="56.5064%" y="421" width="0.6176%" height="15" fill="rgb(254,175,0)" fg:x="1281" fg:w="14"/><text x="56.7564%" y="431.50"></text></g><g><title>llvm::simplifyInstruction (6 samples, 0.26%)</title><rect x="56.8593%" y="405" width="0.2647%" height="15" fill="rgb(227,24,42)" fg:x="1289" fg:w="6"/><text x="57.1093%" y="415.50"></text></g><g><title>simplifySubInst (1 samples, 0.04%)</title><rect x="57.0798%" y="389" width="0.0441%" height="15" fill="rgb(223,211,37)" fg:x="1294" fg:w="1"/><text x="57.3298%" y="399.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="57.0798%" y="373" width="0.0441%" height="15" fill="rgb(235,49,27)" fg:x="1294" fg:w="1"/><text x="57.3298%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="57.1240%" y="421" width="0.0441%" height="15" fill="rgb(254,97,51)" fg:x="1295" fg:w="1"/><text x="57.3740%" y="431.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::AssumptionAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="57.4768%" y="373" width="0.0441%" height="15" fill="rgb(249,51,40)" fg:x="1303" fg:w="1"/><text x="57.7268%" y="383.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="57.4768%" y="357" width="0.0441%" height="15" fill="rgb(210,128,45)" fg:x="1303" fg:w="1"/><text x="57.7268%" y="367.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::TargetIRAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="57.4768%" y="341" width="0.0441%" height="15" fill="rgb(224,137,50)" fg:x="1303" fg:w="1"/><text x="57.7268%" y="351.50"></text></g><g><title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis() const::$_0&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="57.4768%" y="325" width="0.0441%" height="15" fill="rgb(242,15,9)" fg:x="1303" fg:w="1"/><text x="57.7268%" y="335.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::runSemiNCA (1 samples, 0.04%)</title><rect x="57.7415%" y="341" width="0.0441%" height="15" fill="rgb(233,187,41)" fg:x="1309" fg:w="1"/><text x="57.9915%" y="351.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (9 samples, 0.40%)</title><rect x="57.4327%" y="389" width="0.3970%" height="15" fill="rgb(227,2,29)" fg:x="1302" fg:w="9"/><text x="57.6827%" y="399.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (7 samples, 0.31%)</title><rect x="57.5210%" y="373" width="0.3088%" height="15" fill="rgb(222,70,3)" fg:x="1304" fg:w="7"/><text x="57.7710%" y="383.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (7 samples, 0.31%)</title><rect x="57.5210%" y="357" width="0.3088%" height="15" fill="rgb(213,11,42)" fg:x="1304" fg:w="7"/><text x="57.7710%" y="367.50"></text></g><g><title>llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;::DomTreeNodeBase (1 samples, 0.04%)</title><rect x="57.7856%" y="341" width="0.0441%" height="15" fill="rgb(225,150,9)" fg:x="1310" fg:w="1"/><text x="58.0356%" y="351.50"></text></g><g><title>llvm::ConstantFoldInstruction (1 samples, 0.04%)</title><rect x="57.8297%" y="389" width="0.0441%" height="15" fill="rgb(230,162,45)" fg:x="1311" fg:w="1"/><text x="58.0797%" y="399.50"></text></g><g><title>llvm::InstCombinerImpl::mergeStoreIntoSuccessor (1 samples, 0.04%)</title><rect x="57.9180%" y="373" width="0.0441%" height="15" fill="rgb(222,14,52)" fg:x="1313" fg:w="1"/><text x="58.1680%" y="383.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="57.9621%" y="357" width="0.0441%" height="15" fill="rgb(254,198,14)" fg:x="1314" fg:w="1"/><text x="58.2121%" y="367.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="57.9621%" y="341" width="0.0441%" height="15" fill="rgb(220,217,30)" fg:x="1314" fg:w="1"/><text x="58.2121%" y="351.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="57.9621%" y="325" width="0.0441%" height="15" fill="rgb(215,146,41)" fg:x="1314" fg:w="1"/><text x="58.2121%" y="335.50"></text></g><g><title>isKnownNonZero (1 samples, 0.04%)</title><rect x="58.0062%" y="357" width="0.0441%" height="15" fill="rgb(217,27,36)" fg:x="1315" fg:w="1"/><text x="58.2562%" y="367.50"></text></g><g><title>llvm::AssumptionCache::scanFunction (1 samples, 0.04%)</title><rect x="58.0062%" y="341" width="0.0441%" height="15" fill="rgb(219,218,39)" fg:x="1315" fg:w="1"/><text x="58.2562%" y="351.50"></text></g><g><title>llvm::InstCombinerImpl::visitCallInst (3 samples, 0.13%)</title><rect x="57.9621%" y="373" width="0.1323%" height="15" fill="rgb(219,4,42)" fg:x="1314" fg:w="3"/><text x="58.2121%" y="383.50"></text></g><g><title>llvm::LibCallSimplifier::optimizeCall (1 samples, 0.04%)</title><rect x="58.0503%" y="357" width="0.0441%" height="15" fill="rgb(249,119,36)" fg:x="1316" fg:w="1"/><text x="58.3003%" y="367.50"></text></g><g><title>llvm::Attribute::getWithDereferenceableBytes (1 samples, 0.04%)</title><rect x="58.0503%" y="341" width="0.0441%" height="15" fill="rgb(209,23,33)" fg:x="1316" fg:w="1"/><text x="58.3003%" y="351.50"></text></g><g><title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="58.0503%" y="325" width="0.0441%" height="15" fill="rgb(211,10,0)" fg:x="1316" fg:w="1"/><text x="58.3003%" y="335.50"></text></g><g><title>llvm::FoldingSet&lt;llvm::AttributeImpl&gt;::NodeEquals (1 samples, 0.04%)</title><rect x="58.0503%" y="309" width="0.0441%" height="15" fill="rgb(208,99,37)" fg:x="1316" fg:w="1"/><text x="58.3003%" y="319.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="58.0503%" y="293" width="0.0441%" height="15" fill="rgb(213,132,31)" fg:x="1316" fg:w="1"/><text x="58.3003%" y="303.50"></text></g><g><title>llvm::InstCombinerImpl::visitXor (1 samples, 0.04%)</title><rect x="58.0944%" y="373" width="0.0441%" height="15" fill="rgb(243,129,40)" fg:x="1317" fg:w="1"/><text x="58.3444%" y="383.50"></text></g><g><title>simplifyXorInst (1 samples, 0.04%)</title><rect x="58.0944%" y="357" width="0.0441%" height="15" fill="rgb(210,66,33)" fg:x="1317" fg:w="1"/><text x="58.3444%" y="367.50"></text></g><g><title>llvm::isInstructionTriviallyDead (1 samples, 0.04%)</title><rect x="58.1385%" y="373" width="0.0441%" height="15" fill="rgb(209,189,4)" fg:x="1318" fg:w="1"/><text x="58.3885%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (26 samples, 1.15%)</title><rect x="57.1681%" y="421" width="1.1469%" height="15" fill="rgb(214,107,37)" fg:x="1296" fg:w="26"/><text x="57.4181%" y="431.50"></text></g><g><title>llvm::InstCombinePass::run (26 samples, 1.15%)</title><rect x="57.1681%" y="405" width="1.1469%" height="15" fill="rgb(245,88,54)" fg:x="1296" fg:w="26"/><text x="57.4181%" y="415.50"></text></g><g><title>llvm::InstCombinerImpl::run (10 samples, 0.44%)</title><rect x="57.8738%" y="389" width="0.4411%" height="15" fill="rgb(205,146,20)" fg:x="1312" fg:w="10"/><text x="58.1238%" y="399.50"></text></g><g><title>llvm::simplifyGEPInst (3 samples, 0.13%)</title><rect x="58.1826%" y="373" width="0.1323%" height="15" fill="rgb(220,161,25)" fg:x="1319" fg:w="3"/><text x="58.4326%" y="383.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.04%)</title><rect x="58.2708%" y="357" width="0.0441%" height="15" fill="rgb(215,152,15)" fg:x="1321" fg:w="1"/><text x="58.5208%" y="367.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::LowerExpectIntrinsicPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (5 samples, 0.22%)</title><rect x="58.3150%" y="421" width="0.2206%" height="15" fill="rgb(233,192,44)" fg:x="1322" fg:w="5"/><text x="58.5650%" y="431.50"></text></g><g><title>lowerExpectIntrinsic (5 samples, 0.22%)</title><rect x="58.3150%" y="405" width="0.2206%" height="15" fill="rgb(240,170,46)" fg:x="1322" fg:w="5"/><text x="58.5650%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (4 samples, 0.18%)</title><rect x="58.5355%" y="405" width="0.1764%" height="15" fill="rgb(207,104,33)" fg:x="1327" fg:w="4"/><text x="58.7855%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (4 samples, 0.18%)</title><rect x="58.5355%" y="389" width="0.1764%" height="15" fill="rgb(219,21,39)" fg:x="1327" fg:w="4"/><text x="58.7855%" y="399.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (4 samples, 0.18%)</title><rect x="58.5355%" y="373" width="0.1764%" height="15" fill="rgb(214,133,29)" fg:x="1327" fg:w="4"/><text x="58.7855%" y="383.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::runSemiNCA (2 samples, 0.09%)</title><rect x="58.6237%" y="357" width="0.0882%" height="15" fill="rgb(226,93,6)" fg:x="1329" fg:w="2"/><text x="58.8737%" y="367.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Value*, llvm::ValueHandleBase*, llvm::DenseMapInfo&lt;llvm::Value*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, llvm::ValueHandleBase*&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="58.8443%" y="389" width="0.0441%" height="15" fill="rgb(252,222,34)" fg:x="1334" fg:w="1"/><text x="59.0943%" y="399.50"></text></g><g><title>llvm::DILocation::getMergedLocation (1 samples, 0.04%)</title><rect x="58.9766%" y="373" width="0.0441%" height="15" fill="rgb(252,92,48)" fg:x="1337" fg:w="1"/><text x="59.2266%" y="383.50"></text></g><g><title>std::_Rb_tree&lt;std::pair&lt;llvm::DIScope*, llvm::DILocation*&gt;, std::pair&lt;llvm::DIScope*, llvm::DILocation*&gt;, std::_Identity&lt;std::pair&lt;llvm::DIScope*, llvm::DILocation*&gt; &gt;, std::less&lt;std::pair&lt;llvm::DIScope*, llvm::DILocation*&gt; &gt;, std::allocator&lt;std::pair&lt;llvm::DIScope*, llvm::DILocation*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;llvm::DIScope*, llvm::DILocation*&gt; const&amp;&gt; (1 samples, 0.04%)</title><rect x="58.9766%" y="357" width="0.0441%" height="15" fill="rgb(245,223,24)" fg:x="1337" fg:w="1"/><text x="59.2266%" y="367.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.04%)</title><rect x="58.9766%" y="341" width="0.0441%" height="15" fill="rgb(205,176,3)" fg:x="1337" fg:w="1"/><text x="59.2266%" y="351.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AllocaInst*, unsigned int, llvm::DenseMapInfo&lt;llvm::AllocaInst*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AllocaInst*, unsigned int&gt; &gt;, llvm::AllocaInst*, unsigned int, llvm::DenseMapInfo&lt;llvm::AllocaInst*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AllocaInst*, unsigned int&gt; &gt;::InsertIntoBucketImpl&lt;llvm::AllocaInst*&gt; (1 samples, 0.04%)</title><rect x="59.0207%" y="373" width="0.0441%" height="15" fill="rgb(235,151,15)" fg:x="1338" fg:w="1"/><text x="59.2707%" y="383.50"></text></g><g><title>llvm::IDFCalculatorBase&lt;llvm::BasicBlock, false&gt;::calculate (2 samples, 0.09%)</title><rect x="59.0648%" y="373" width="0.0882%" height="15" fill="rgb(237,209,11)" fg:x="1339" fg:w="2"/><text x="59.3148%" y="383.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="59.1531%" y="373" width="0.0441%" height="15" fill="rgb(243,227,24)" fg:x="1341" fg:w="1"/><text x="59.4031%" y="383.50"></text></g><g><title>llvm::PromoteMemToReg (8 samples, 0.35%)</title><rect x="58.8884%" y="389" width="0.3529%" height="15" fill="rgb(239,193,16)" fg:x="1335" fg:w="8"/><text x="59.1384%" y="399.50"></text></g><g><title>llvm::Value::replaceAllUsesWith (1 samples, 0.04%)</title><rect x="59.1972%" y="373" width="0.0441%" height="15" fill="rgb(231,27,9)" fg:x="1342" fg:w="1"/><text x="59.4472%" y="383.50"></text></g><g><title>llvm::SROAPass::runOnAlloca (2 samples, 0.09%)</title><rect x="59.2413%" y="389" width="0.0882%" height="15" fill="rgb(219,169,10)" fg:x="1343" fg:w="2"/><text x="59.4913%" y="399.50"></text></g><g><title>llvm::GEPOperator::accumulateConstantOffset (1 samples, 0.04%)</title><rect x="59.2854%" y="373" width="0.0441%" height="15" fill="rgb(244,229,43)" fg:x="1344" fg:w="1"/><text x="59.5354%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SROAPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (19 samples, 0.84%)</title><rect x="58.5355%" y="421" width="0.8381%" height="15" fill="rgb(254,38,20)" fg:x="1327" fg:w="19"/><text x="58.7855%" y="431.50"></text></g><g><title>llvm::SROAPass::runImpl (15 samples, 0.66%)</title><rect x="58.7120%" y="405" width="0.6617%" height="15" fill="rgb(250,47,30)" fg:x="1331" fg:w="15"/><text x="58.9620%" y="415.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="59.3295%" y="389" width="0.0441%" height="15" fill="rgb(224,124,36)" fg:x="1345" fg:w="1"/><text x="59.5795%" y="399.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::AssumptionAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="59.4618%" y="389" width="0.0441%" height="15" fill="rgb(246,68,51)" fg:x="1348" fg:w="1"/><text x="59.7118%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="59.5501%" y="325" width="0.0441%" height="15" fill="rgb(253,43,49)" fg:x="1350" fg:w="1"/><text x="59.8001%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="59.5501%" y="309" width="0.0441%" height="15" fill="rgb(219,54,36)" fg:x="1350" fg:w="1"/><text x="59.8001%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="59.5501%" y="293" width="0.0441%" height="15" fill="rgb(227,133,34)" fg:x="1350" fg:w="1"/><text x="59.8001%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="59.5501%" y="277" width="0.0441%" height="15" fill="rgb(247,227,15)" fg:x="1350" fg:w="1"/><text x="59.8001%" y="287.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (6 samples, 0.26%)</title><rect x="59.3736%" y="405" width="0.2647%" height="15" fill="rgb(229,96,14)" fg:x="1346" fg:w="6"/><text x="59.6236%" y="415.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::TargetIRAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="59.5060%" y="389" width="0.1323%" height="15" fill="rgb(220,79,17)" fg:x="1349" fg:w="3"/><text x="59.7560%" y="399.50"></text></g><g><title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis() const::$_0&gt;::_M_invoke (2 samples, 0.09%)</title><rect x="59.5501%" y="373" width="0.0882%" height="15" fill="rgb(205,131,53)" fg:x="1350" fg:w="2"/><text x="59.8001%" y="383.50"></text></g><g><title>llvm::X86Subtarget::X86Subtarget (2 samples, 0.09%)</title><rect x="59.5501%" y="357" width="0.0882%" height="15" fill="rgb(209,50,29)" fg:x="1350" fg:w="2"/><text x="59.8001%" y="367.50"></text></g><g><title>llvm::X86LegalizerInfo::X86LegalizerInfo (2 samples, 0.09%)</title><rect x="59.5501%" y="341" width="0.0882%" height="15" fill="rgb(245,86,46)" fg:x="1350" fg:w="2"/><text x="59.8001%" y="351.50"></text></g><g><title>llvm::LegacyLegalizerInfo::setAction (1 samples, 0.04%)</title><rect x="59.5942%" y="325" width="0.0441%" height="15" fill="rgb(235,66,46)" fg:x="1351" fg:w="1"/><text x="59.8442%" y="335.50"></text></g><g><title>llvm::DenseMap&lt;llvm::LLT, llvm::LegacyLegalizeActions::LegacyLegalizeAction, llvm::DenseMapInfo&lt;llvm::LLT, void&gt;, llvm::detail::DenseMapPair&lt;llvm::LLT, llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="59.5942%" y="309" width="0.0441%" height="15" fill="rgb(232,148,31)" fg:x="1351" fg:w="1"/><text x="59.8442%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="59.5942%" y="293" width="0.0441%" height="15" fill="rgb(217,149,8)" fg:x="1351" fg:w="1"/><text x="59.8442%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="59.5942%" y="277" width="0.0441%" height="15" fill="rgb(209,183,11)" fg:x="1351" fg:w="1"/><text x="59.8442%" y="287.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="59.7265%" y="389" width="0.0441%" height="15" fill="rgb(208,55,20)" fg:x="1354" fg:w="1"/><text x="59.9765%" y="399.50"></text></g><g><title>computeKnownBitsFromAssume (1 samples, 0.04%)</title><rect x="59.7265%" y="373" width="0.0441%" height="15" fill="rgb(218,39,14)" fg:x="1354" fg:w="1"/><text x="59.9765%" y="383.50"></text></g><g><title>llvm::AssumptionCache::scanFunction (1 samples, 0.04%)</title><rect x="59.7265%" y="357" width="0.0441%" height="15" fill="rgb(216,169,33)" fg:x="1354" fg:w="1"/><text x="59.9765%" y="367.50"></text></g><g><title>llvm::DeleteDeadBlocks (1 samples, 0.04%)</title><rect x="59.7706%" y="389" width="0.0441%" height="15" fill="rgb(233,80,24)" fg:x="1355" fg:w="1"/><text x="60.0206%" y="399.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (87 samples, 3.84%)</title><rect x="56.1535%" y="437" width="3.8377%" height="15" fill="rgb(213,179,31)" fg:x="1273" fg:w="87"/><text x="56.4035%" y="447.50">llvm..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::SimplifyCFGPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (14 samples, 0.62%)</title><rect x="59.3736%" y="421" width="0.6176%" height="15" fill="rgb(209,19,5)" fg:x="1346" fg:w="14"/><text x="59.6236%" y="431.50"></text></g><g><title>simplifyFunctionCFG (8 samples, 0.35%)</title><rect x="59.6383%" y="405" width="0.3529%" height="15" fill="rgb(219,18,35)" fg:x="1352" fg:w="8"/><text x="59.8883%" y="415.50"></text></g><g><title>llvm::removeUnreachableBlocks (4 samples, 0.18%)</title><rect x="59.8147%" y="389" width="0.1764%" height="15" fill="rgb(209,169,16)" fg:x="1356" fg:w="4"/><text x="60.0647%" y="399.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (715 samples, 31.54%)</title><rect x="28.4958%" y="485" width="31.5395%" height="15" fill="rgb(245,90,51)" fg:x="646" fg:w="715"/><text x="28.7458%" y="495.50">llvm::PassManager&lt;llvm::Module, llvm::AnalysisManag..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (90 samples, 3.97%)</title><rect x="56.0653%" y="469" width="3.9700%" height="15" fill="rgb(220,99,45)" fg:x="1271" fg:w="90"/><text x="56.3153%" y="479.50">llvm..</text></g><g><title>llvm::ModuleToFunctionPassAdaptor::run (90 samples, 3.97%)</title><rect x="56.0653%" y="453" width="3.9700%" height="15" fill="rgb(249,89,25)" fg:x="1271" fg:w="90"/><text x="56.3153%" y="463.50">llvm..</text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::PromotePass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::name (1 samples, 0.04%)</title><rect x="59.9912%" y="437" width="0.0441%" height="15" fill="rgb(239,193,0)" fg:x="1360" fg:w="1"/><text x="60.2412%" y="447.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="59.9912%" y="421" width="0.0441%" height="15" fill="rgb(231,126,1)" fg:x="1360" fg:w="1"/><text x="60.2412%" y="431.50"></text></g><g><title>llvm::StandardInstrumentations::StandardInstrumentations (2 samples, 0.09%)</title><rect x="60.0353%" y="485" width="0.0882%" height="15" fill="rgb(243,166,3)" fg:x="1361" fg:w="2"/><text x="60.2853%" y="495.50"></text></g><g><title>llvm::TimerGroup::TimerGroup (1 samples, 0.04%)</title><rect x="60.0794%" y="469" width="0.0441%" height="15" fill="rgb(223,22,34)" fg:x="1362" fg:w="1"/><text x="60.3294%" y="479.50"></text></g><g><title>llvm::UpgradeIntrinsicCall (2 samples, 0.09%)</title><rect x="60.1235%" y="469" width="0.0882%" height="15" fill="rgb(251,52,51)" fg:x="1363" fg:w="2"/><text x="60.3735%" y="479.50"></text></g><g><title>llvm::MetadataTracking::track (2 samples, 0.09%)</title><rect x="60.1235%" y="453" width="0.0882%" height="15" fill="rgb(221,165,28)" fg:x="1363" fg:w="2"/><text x="60.3735%" y="463.50"></text></g><g><title>llvm::Intrinsic::getAttributes (1 samples, 0.04%)</title><rect x="60.3000%" y="453" width="0.0441%" height="15" fill="rgb(218,121,47)" fg:x="1367" fg:w="1"/><text x="60.5500%" y="463.50"></text></g><g><title>llvm::AttributeList::get (1 samples, 0.04%)</title><rect x="60.3000%" y="437" width="0.0441%" height="15" fill="rgb(209,120,9)" fg:x="1367" fg:w="1"/><text x="60.5500%" y="447.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="60.3000%" y="421" width="0.0441%" height="15" fill="rgb(236,68,12)" fg:x="1367" fg:w="1"/><text x="60.5500%" y="431.50"></text></g><g><title>llvm::UpgradeCallsToIntrinsic (6 samples, 0.26%)</title><rect x="60.1235%" y="485" width="0.2647%" height="15" fill="rgb(225,194,26)" fg:x="1363" fg:w="6"/><text x="60.3735%" y="495.50"></text></g><g><title>llvm::UpgradeIntrinsicFunction (4 samples, 0.18%)</title><rect x="60.2117%" y="469" width="0.1764%" height="15" fill="rgb(231,84,39)" fg:x="1365" fg:w="4"/><text x="60.4617%" y="479.50"></text></g><g><title>llvm_regcomp (1 samples, 0.04%)</title><rect x="60.3441%" y="453" width="0.0441%" height="15" fill="rgb(210,11,45)" fg:x="1368" fg:w="1"/><text x="60.5941%" y="463.50"></text></g><g><title>LLVMRustOptimize (729 samples, 32.16%)</title><rect x="28.2753%" y="501" width="32.1570%" height="15" fill="rgb(224,54,52)" fg:x="641" fg:w="729"/><text x="28.5253%" y="511.50">LLVMRustOptimize</text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::~PassModel (1 samples, 0.04%)</title><rect x="60.3882%" y="485" width="0.0441%" height="15" fill="rgb(238,102,14)" fg:x="1369" fg:w="1"/><text x="60.6382%" y="495.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::~PassModel (1 samples, 0.04%)</title><rect x="60.3882%" y="469" width="0.0441%" height="15" fill="rgb(243,160,52)" fg:x="1369" fg:w="1"/><text x="60.6382%" y="479.50"></text></g><g><title>[anon] (1 samples, 0.04%)</title><rect x="60.4323%" y="501" width="0.0441%" height="15" fill="rgb(216,114,19)" fg:x="1370" fg:w="1"/><text x="60.6823%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="60.4323%" y="485" width="0.0441%" height="15" fill="rgb(244,166,37)" fg:x="1370" fg:w="1"/><text x="60.6823%" y="495.50"></text></g><g><title>[libLLVM-15-rust-1.68.2-stable.so] (2 samples, 0.09%)</title><rect x="60.4764%" y="501" width="0.0882%" height="15" fill="rgb(246,29,44)" fg:x="1371" fg:w="2"/><text x="60.7264%" y="511.50"></text></g><g><title>[librustc_driver-93862cade34bf92c.so] (1 samples, 0.04%)</title><rect x="60.5646%" y="501" width="0.0441%" height="15" fill="rgb(215,56,53)" fg:x="1373" fg:w="1"/><text x="60.8146%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.13%)</title><rect x="60.6087%" y="485" width="0.1323%" height="15" fill="rgb(217,60,2)" fg:x="1374" fg:w="3"/><text x="60.8587%" y="495.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.04%)</title><rect x="60.7411%" y="485" width="0.0441%" height="15" fill="rgb(207,26,24)" fg:x="1377" fg:w="1"/><text x="60.9911%" y="495.50"></text></g><g><title>llvm::DevirtSCCRepeatedPass::run (1 samples, 0.04%)</title><rect x="60.7852%" y="485" width="0.0441%" height="15" fill="rgb(252,210,15)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="495.50"></text></g><g><title>llvm::PassManager&lt;llvm::LazyCallGraph::SCC, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (1 samples, 0.04%)</title><rect x="60.7852%" y="469" width="0.0441%" height="15" fill="rgb(253,209,26)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="479.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::CGSCCToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (1 samples, 0.04%)</title><rect x="60.7852%" y="453" width="0.0441%" height="15" fill="rgb(238,170,14)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="463.50"></text></g><g><title>llvm::CGSCCToFunctionPassAdaptor::run (1 samples, 0.04%)</title><rect x="60.7852%" y="437" width="0.0441%" height="15" fill="rgb(216,178,15)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="447.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="60.7852%" y="421" width="0.0441%" height="15" fill="rgb(250,197,2)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="431.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::GVNPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="60.7852%" y="405" width="0.0441%" height="15" fill="rgb(212,70,42)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="415.50"></text></g><g><title>llvm::GVNPass::run (1 samples, 0.04%)</title><rect x="60.7852%" y="389" width="0.0441%" height="15" fill="rgb(227,213,9)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="399.50"></text></g><g><title>llvm::GVNPass::runImpl (1 samples, 0.04%)</title><rect x="60.7852%" y="373" width="0.0441%" height="15" fill="rgb(245,99,25)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="383.50"></text></g><g><title>llvm::GVNPass::processBlock (1 samples, 0.04%)</title><rect x="60.7852%" y="357" width="0.0441%" height="15" fill="rgb(250,82,29)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="367.50"></text></g><g><title>llvm::GVNPass::processNonLocalLoad (1 samples, 0.04%)</title><rect x="60.7852%" y="341" width="0.0441%" height="15" fill="rgb(241,226,54)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="351.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (1 samples, 0.04%)</title><rect x="60.7852%" y="325" width="0.0441%" height="15" fill="rgb(221,99,41)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="335.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (1 samples, 0.04%)</title><rect x="60.7852%" y="309" width="0.0441%" height="15" fill="rgb(213,90,21)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="319.50"></text></g><g><title>llvm::BasicAAResult::aliasCheck (1 samples, 0.04%)</title><rect x="60.7852%" y="293" width="0.0441%" height="15" fill="rgb(205,208,24)" fg:x="1378" fg:w="1"/><text x="61.0352%" y="303.50"></text></g><g><title>llvm::AAResults::callCapturesBefore (1 samples, 0.04%)</title><rect x="60.8734%" y="277" width="0.0441%" height="15" fill="rgb(246,31,12)" fg:x="1380" fg:w="1"/><text x="61.1234%" y="287.50"></text></g><g><title>llvm::PointerMayBeCaptured (1 samples, 0.04%)</title><rect x="60.8734%" y="261" width="0.0441%" height="15" fill="rgb(213,154,6)" fg:x="1380" fg:w="1"/><text x="61.1234%" y="271.50"></text></g><g><title>llvm::ModuleToPostOrderCGSCCPassAdaptor::run (3 samples, 0.13%)</title><rect x="60.8293%" y="485" width="0.1323%" height="15" fill="rgb(222,163,29)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="495.50"></text></g><g><title>llvm::DevirtSCCRepeatedPass::run (3 samples, 0.13%)</title><rect x="60.8293%" y="469" width="0.1323%" height="15" fill="rgb(227,201,8)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="479.50"></text></g><g><title>llvm::PassManager&lt;llvm::LazyCallGraph::SCC, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (3 samples, 0.13%)</title><rect x="60.8293%" y="453" width="0.1323%" height="15" fill="rgb(233,9,32)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="463.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::CGSCCToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (3 samples, 0.13%)</title><rect x="60.8293%" y="437" width="0.1323%" height="15" fill="rgb(217,54,24)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="447.50"></text></g><g><title>llvm::CGSCCToFunctionPassAdaptor::run (3 samples, 0.13%)</title><rect x="60.8293%" y="421" width="0.1323%" height="15" fill="rgb(235,192,0)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="431.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (3 samples, 0.13%)</title><rect x="60.8293%" y="405" width="0.1323%" height="15" fill="rgb(235,45,9)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="415.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::GVNPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (3 samples, 0.13%)</title><rect x="60.8293%" y="389" width="0.1323%" height="15" fill="rgb(246,42,40)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="399.50"></text></g><g><title>llvm::GVNPass::run (3 samples, 0.13%)</title><rect x="60.8293%" y="373" width="0.1323%" height="15" fill="rgb(248,111,24)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="383.50"></text></g><g><title>llvm::GVNPass::runImpl (3 samples, 0.13%)</title><rect x="60.8293%" y="357" width="0.1323%" height="15" fill="rgb(249,65,22)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="367.50"></text></g><g><title>llvm::GVNPass::processBlock (3 samples, 0.13%)</title><rect x="60.8293%" y="341" width="0.1323%" height="15" fill="rgb(238,111,51)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="351.50"></text></g><g><title>llvm::GVNPass::processNonLocalLoad (3 samples, 0.13%)</title><rect x="60.8293%" y="325" width="0.1323%" height="15" fill="rgb(250,118,22)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="335.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (3 samples, 0.13%)</title><rect x="60.8293%" y="309" width="0.1323%" height="15" fill="rgb(234,84,26)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="319.50"></text></g><g><title>llvm::MemoryDependenceResults::getNonLocalPointerDepFromBB (3 samples, 0.13%)</title><rect x="60.8293%" y="293" width="0.1323%" height="15" fill="rgb(243,172,12)" fg:x="1379" fg:w="3"/><text x="61.0793%" y="303.50"></text></g><g><title>llvm::PHITransAddr::PHITranslateSubExpr (1 samples, 0.04%)</title><rect x="60.9175%" y="277" width="0.0441%" height="15" fill="rgb(236,150,49)" fg:x="1381" fg:w="1"/><text x="61.1675%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::CGSCCToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (1 samples, 0.04%)</title><rect x="60.9616%" y="357" width="0.0441%" height="15" fill="rgb(225,197,26)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="367.50"></text></g><g><title>llvm::CGSCCToFunctionPassAdaptor::run (1 samples, 0.04%)</title><rect x="60.9616%" y="341" width="0.0441%" height="15" fill="rgb(214,17,42)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="351.50"></text></g><g><title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="60.9616%" y="325" width="0.0441%" height="15" fill="rgb(224,165,40)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="335.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Function, llvm::FunctionToLoopPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (1 samples, 0.04%)</title><rect x="60.9616%" y="309" width="0.0441%" height="15" fill="rgb(246,100,4)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="319.50"></text></g><g><title>llvm::FunctionToLoopPassAdaptor::run (1 samples, 0.04%)</title><rect x="60.9616%" y="293" width="0.0441%" height="15" fill="rgb(222,103,0)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="303.50"></text></g><g><title>llvm::PassManager&lt;llvm::Loop, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::runWithoutLoopNestPasses (1 samples, 0.04%)</title><rect x="60.9616%" y="277" width="0.0441%" height="15" fill="rgb(227,189,26)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="287.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Loop, llvm::LICMPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults&amp;&gt;, llvm::LoopStandardAnalysisResults&amp;, llvm::LPMUpdater&amp;&gt;::run (1 samples, 0.04%)</title><rect x="60.9616%" y="261" width="0.0441%" height="15" fill="rgb(214,202,17)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="271.50"></text></g><g><title>llvm::MemorySSA::ensureOptimizedUses (1 samples, 0.04%)</title><rect x="60.9616%" y="245" width="0.0441%" height="15" fill="rgb(229,111,3)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="255.50"></text></g><g><title>llvm::MemorySSA::OptimizeUses::optimizeUses (1 samples, 0.04%)</title><rect x="60.9616%" y="229" width="0.0441%" height="15" fill="rgb(229,172,15)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="239.50"></text></g><g><title>llvm::AAResults::getModRefInfo (1 samples, 0.04%)</title><rect x="60.9616%" y="213" width="0.0441%" height="15" fill="rgb(230,224,35)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="223.50"></text></g><g><title>llvm::BasicAAResult::aliasCheck (1 samples, 0.04%)</title><rect x="60.9616%" y="197" width="0.0441%" height="15" fill="rgb(251,141,6)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="207.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.04%)</title><rect x="60.9616%" y="181" width="0.0441%" height="15" fill="rgb(225,208,6)" fg:x="1382" fg:w="1"/><text x="61.2116%" y="191.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (2 samples, 0.09%)</title><rect x="60.9616%" y="485" width="0.0882%" height="15" fill="rgb(246,181,16)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="495.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleInlinerWrapperPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (2 samples, 0.09%)</title><rect x="60.9616%" y="469" width="0.0882%" height="15" fill="rgb(227,129,36)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="479.50"></text></g><g><title>llvm::ModuleInlinerWrapperPass::run (2 samples, 0.09%)</title><rect x="60.9616%" y="453" width="0.0882%" height="15" fill="rgb(248,117,24)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="463.50"></text></g><g><title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (2 samples, 0.09%)</title><rect x="60.9616%" y="437" width="0.0882%" height="15" fill="rgb(214,185,35)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="447.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ModuleToPostOrderCGSCCPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (2 samples, 0.09%)</title><rect x="60.9616%" y="421" width="0.0882%" height="15" fill="rgb(236,150,34)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="431.50"></text></g><g><title>llvm::ModuleToPostOrderCGSCCPassAdaptor::run (2 samples, 0.09%)</title><rect x="60.9616%" y="405" width="0.0882%" height="15" fill="rgb(243,228,27)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="415.50"></text></g><g><title>llvm::DevirtSCCRepeatedPass::run (2 samples, 0.09%)</title><rect x="60.9616%" y="389" width="0.0882%" height="15" fill="rgb(245,77,44)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="399.50"></text></g><g><title>llvm::PassManager&lt;llvm::LazyCallGraph::SCC, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (2 samples, 0.09%)</title><rect x="60.9616%" y="373" width="0.0882%" height="15" fill="rgb(235,214,42)" fg:x="1382" fg:w="2"/><text x="61.2116%" y="383.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::InlinerPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (1 samples, 0.04%)</title><rect x="61.0057%" y="357" width="0.0441%" height="15" fill="rgb(221,74,3)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="367.50"></text></g><g><title>llvm::InlinerPass::run (1 samples, 0.04%)</title><rect x="61.0057%" y="341" width="0.0441%" height="15" fill="rgb(206,121,29)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="351.50"></text></g><g><title>llvm::shouldInline (1 samples, 0.04%)</title><rect x="61.0057%" y="325" width="0.0441%" height="15" fill="rgb(249,131,53)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="335.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="61.0057%" y="309" width="0.0441%" height="15" fill="rgb(236,170,29)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="319.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="61.0057%" y="293" width="0.0441%" height="15" fill="rgb(247,96,15)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="303.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="61.0057%" y="277" width="0.0441%" height="15" fill="rgb(211,210,7)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="287.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="61.0057%" y="261" width="0.0441%" height="15" fill="rgb(240,88,50)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="271.50"></text></g><g><title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.04%)</title><rect x="61.0057%" y="245" width="0.0441%" height="15" fill="rgb(209,229,26)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="255.50"></text></g><g><title>llvm::BranchProbabilityInfo::computeEestimateBlockWeight (1 samples, 0.04%)</title><rect x="61.0057%" y="229" width="0.0441%" height="15" fill="rgb(210,68,23)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="239.50"></text></g><g><title>std::copy&lt;llvm::po_iterator&lt;llvm::Function const*, llvm::SmallPtrSet&lt;llvm::BasicBlock const*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock const*, std::allocator&lt;llvm::BasicBlock const*&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="61.0057%" y="213" width="0.0441%" height="15" fill="rgb(229,180,13)" fg:x="1383" fg:w="1"/><text x="61.2557%" y="223.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::LazyCallGraph::SCC, llvm::OpenMPOptCGSCCPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (1 samples, 0.04%)</title><rect x="61.0498%" y="485" width="0.0441%" height="15" fill="rgb(236,53,44)" fg:x="1384" fg:w="1"/><text x="61.2998%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.53%)</title><rect x="60.6087%" y="501" width="0.5293%" height="15" fill="rgb(244,214,29)" fg:x="1374" fg:w="12"/><text x="60.8587%" y="511.50"></text></g><g><title>std::__copy_move_a2&lt;false, llvm::po_iterator&lt;llvm::BasicBlock const*, llvm::SmallPtrSet&lt;llvm::BasicBlock const*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::BasicBlock const*&gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock const*, std::allocator&lt;llvm::BasicBlock const*&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="61.0940%" y="485" width="0.0441%" height="15" fill="rgb(220,75,29)" fg:x="1385" fg:w="1"/><text x="61.3440%" y="495.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;llvm::APInt const, llvm::SmallVector&lt;llvm::SCEV const*, 4u&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;llvm::APInt const, llvm::SmallVector&lt;llvm::SCEV const*, 4u&gt; &gt; &gt; (2 samples, 0.09%)</title><rect x="61.1381%" y="501" width="0.0882%" height="15" fill="rgb(214,183,37)" fg:x="1386" fg:w="2"/><text x="61.3881%" y="511.50"></text></g><g><title>llvm::ScalarEvolution::isImpliedCondOperandsHelper (2 samples, 0.09%)</title><rect x="61.1381%" y="485" width="0.0882%" height="15" fill="rgb(239,117,29)" fg:x="1386" fg:w="2"/><text x="61.3881%" y="495.50"></text></g><g><title>llvm::ScalarEvolution::isKnownViaNonRecursiveReasoning (2 samples, 0.09%)</title><rect x="61.1381%" y="469" width="0.0882%" height="15" fill="rgb(237,171,35)" fg:x="1386" fg:w="2"/><text x="61.3881%" y="479.50"></text></g><g><title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="61.1822%" y="453" width="0.0441%" height="15" fill="rgb(229,178,53)" fg:x="1387" fg:w="1"/><text x="61.4322%" y="463.50"></text></g><g><title>llvm::ConstantRange::sadd_sat (1 samples, 0.04%)</title><rect x="61.1822%" y="437" width="0.0441%" height="15" fill="rgb(210,102,19)" fg:x="1387" fg:w="1"/><text x="61.4322%" y="447.50"></text></g><g><title>llvm::APInt::sadd_sat (1 samples, 0.04%)</title><rect x="61.1822%" y="421" width="0.0441%" height="15" fill="rgb(235,127,22)" fg:x="1387" fg:w="1"/><text x="61.4322%" y="431.50"></text></g><g><title>llvm::APInt::sadd_ov (1 samples, 0.04%)</title><rect x="61.1822%" y="405" width="0.0441%" height="15" fill="rgb(244,31,31)" fg:x="1387" fg:w="1"/><text x="61.4322%" y="415.50"></text></g><g><title>__libc_calloc (1 samples, 0.04%)</title><rect x="61.2263%" y="501" width="0.0441%" height="15" fill="rgb(231,43,21)" fg:x="1388" fg:w="1"/><text x="61.4763%" y="511.50"></text></g><g><title>__libc_free (21 samples, 0.93%)</title><rect x="61.2704%" y="501" width="0.9263%" height="15" fill="rgb(217,131,35)" fg:x="1389" fg:w="21"/><text x="61.5204%" y="511.50"></text></g><g><title>__libc_malloc (11 samples, 0.49%)</title><rect x="62.1967%" y="501" width="0.4852%" height="15" fill="rgb(221,149,4)" fg:x="1410" fg:w="11"/><text x="62.4467%" y="511.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="62.7702%" y="485" width="0.0441%" height="15" fill="rgb(232,170,28)" fg:x="1423" fg:w="1"/><text x="63.0202%" y="495.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.22%)</title><rect x="62.6820%" y="501" width="0.2206%" height="15" fill="rgb(238,56,10)" fg:x="1421" fg:w="5"/><text x="62.9320%" y="511.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.09%)</title><rect x="62.8143%" y="485" width="0.0882%" height="15" fill="rgb(235,196,14)" fg:x="1424" fg:w="2"/><text x="63.0643%" y="495.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.04%)</title><rect x="62.9025%" y="501" width="0.0441%" height="15" fill="rgb(216,45,48)" fg:x="1426" fg:w="1"/><text x="63.1525%" y="511.50"></text></g><g><title>_rjem_je_arena_nthreads_get (1 samples, 0.04%)</title><rect x="62.9466%" y="501" width="0.0441%" height="15" fill="rgb(238,213,17)" fg:x="1427" fg:w="1"/><text x="63.1966%" y="511.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.04%)</title><rect x="62.9907%" y="501" width="0.0441%" height="15" fill="rgb(212,13,2)" fg:x="1428" fg:w="1"/><text x="63.2407%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="62.9907%" y="485" width="0.0441%" height="15" fill="rgb(240,114,20)" fg:x="1428" fg:w="1"/><text x="63.2407%" y="495.50"></text></g><g><title>_rjem_je_ecache_alloc (1 samples, 0.04%)</title><rect x="63.0348%" y="501" width="0.0441%" height="15" fill="rgb(228,41,40)" fg:x="1429" fg:w="1"/><text x="63.2848%" y="511.50"></text></g><g><title>_rjem_je_edata_avail_remove (1 samples, 0.04%)</title><rect x="63.0790%" y="501" width="0.0441%" height="15" fill="rgb(244,132,35)" fg:x="1430" fg:w="1"/><text x="63.3290%" y="511.50"></text></g><g><title>_rjem_je_edata_heap_insert (1 samples, 0.04%)</title><rect x="63.1231%" y="501" width="0.0441%" height="15" fill="rgb(253,189,4)" fg:x="1431" fg:w="1"/><text x="63.3731%" y="511.50"></text></g><g><title>_rjem_je_edata_heap_remove (1 samples, 0.04%)</title><rect x="63.1672%" y="501" width="0.0441%" height="15" fill="rgb(224,37,19)" fg:x="1432" fg:w="1"/><text x="63.4172%" y="511.50"></text></g><g><title>_rjem_je_emap_register_interior (1 samples, 0.04%)</title><rect x="63.2113%" y="501" width="0.0441%" height="15" fill="rgb(235,223,18)" fg:x="1433" fg:w="1"/><text x="63.4613%" y="511.50"></text></g><g><title>_rjem_je_emap_update_edata_state (1 samples, 0.04%)</title><rect x="63.2554%" y="501" width="0.0441%" height="15" fill="rgb(235,163,25)" fg:x="1434" fg:w="1"/><text x="63.5054%" y="511.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.04%)</title><rect x="63.2995%" y="501" width="0.0441%" height="15" fill="rgb(217,145,28)" fg:x="1435" fg:w="1"/><text x="63.5495%" y="511.50"></text></g><g><title>_rjem_je_eset_remove (2 samples, 0.09%)</title><rect x="63.3436%" y="501" width="0.0882%" height="15" fill="rgb(223,223,32)" fg:x="1436" fg:w="2"/><text x="63.5936%" y="511.50"></text></g><g><title>_rjem_je_free_default (1 samples, 0.04%)</title><rect x="63.4318%" y="501" width="0.0441%" height="15" fill="rgb(227,189,39)" fg:x="1438" fg:w="1"/><text x="63.6818%" y="511.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.04%)</title><rect x="63.4760%" y="501" width="0.0441%" height="15" fill="rgb(248,10,22)" fg:x="1439" fg:w="1"/><text x="63.7260%" y="511.50"></text></g><g><title>_rjem_je_pa_alloc (1 samples, 0.04%)</title><rect x="63.5201%" y="501" width="0.0441%" height="15" fill="rgb(248,46,39)" fg:x="1440" fg:w="1"/><text x="63.7701%" y="511.50"></text></g><g><title>_rjem_je_pa_dalloc (1 samples, 0.04%)</title><rect x="63.5642%" y="501" width="0.0441%" height="15" fill="rgb(248,113,48)" fg:x="1441" fg:w="1"/><text x="63.8142%" y="511.50"></text></g><g><title>_rjem_je_peak_alloc_event_handler (1 samples, 0.04%)</title><rect x="63.6083%" y="501" width="0.0441%" height="15" fill="rgb(245,16,25)" fg:x="1442" fg:w="1"/><text x="63.8583%" y="511.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="63.9612%" y="485" width="0.0882%" height="15" fill="rgb(249,152,16)" fg:x="1450" fg:w="2"/><text x="64.2112%" y="495.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (10 samples, 0.44%)</title><rect x="63.6524%" y="501" width="0.4411%" height="15" fill="rgb(250,16,1)" fg:x="1443" fg:w="10"/><text x="63.9024%" y="511.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="64.0494%" y="485" width="0.0441%" height="15" fill="rgb(249,138,3)" fg:x="1452" fg:w="1"/><text x="64.2994%" y="495.50"></text></g><g><title>_rjem_je_te_event_trigger (4 samples, 0.18%)</title><rect x="64.0935%" y="501" width="0.1764%" height="15" fill="rgb(227,71,41)" fg:x="1453" fg:w="4"/><text x="64.3435%" y="511.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.09%)</title><rect x="64.2700%" y="501" width="0.0882%" height="15" fill="rgb(209,184,23)" fg:x="1457" fg:w="2"/><text x="64.5200%" y="511.50"></text></g><g><title>llvm::DenseMap&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::shrink_and_clear (2 samples, 0.09%)</title><rect x="64.3582%" y="469" width="0.0882%" height="15" fill="rgb(223,215,31)" fg:x="1459" fg:w="2"/><text x="64.6082%" y="479.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::AssumptionAnalysis, llvm::AssumptionCache, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (2 samples, 0.09%)</title><rect x="64.3582%" y="453" width="0.0882%" height="15" fill="rgb(210,146,28)" fg:x="1459" fg:w="2"/><text x="64.6082%" y="463.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::~AnalysisManager (3 samples, 0.13%)</title><rect x="64.3582%" y="501" width="0.1323%" height="15" fill="rgb(209,183,41)" fg:x="1459" fg:w="3"/><text x="64.6082%" y="511.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Module, llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Function&gt;, llvm::Module&gt;, llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Function&gt;, llvm::Module&gt;::Result, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator, true&gt;::~AnalysisResultModel (3 samples, 0.13%)</title><rect x="64.3582%" y="485" width="0.1323%" height="15" fill="rgb(209,224,45)" fg:x="1459" fg:w="3"/><text x="64.6082%" y="495.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::Function*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::Function*, std::__cxx11::list&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisResultConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.04%)</title><rect x="64.4464%" y="469" width="0.0441%" height="15" fill="rgb(224,209,51)" fg:x="1461" fg:w="1"/><text x="64.6964%" y="479.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::BlockFrequencyInfo, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::~AnalysisResultModel (1 samples, 0.04%)</title><rect x="64.4464%" y="453" width="0.0441%" height="15" fill="rgb(223,17,39)" fg:x="1461" fg:w="1"/><text x="64.6964%" y="463.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::AnalysisKey*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;, llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::AnalysisKey*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::AnalysisKey*, std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;, std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::InsertIntoBucket&lt;llvm::AnalysisKey*&gt; (1 samples, 0.04%)</title><rect x="64.4905%" y="501" width="0.0441%" height="15" fill="rgb(234,204,37)" fg:x="1462" fg:w="1"/><text x="64.7405%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="64.4905%" y="485" width="0.0441%" height="15" fill="rgb(236,120,5)" fg:x="1462" fg:w="1"/><text x="64.7405%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="64.4905%" y="469" width="0.0441%" height="15" fill="rgb(248,97,27)" fg:x="1462" fg:w="1"/><text x="64.7405%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="64.4905%" y="453" width="0.0441%" height="15" fill="rgb(240,66,17)" fg:x="1462" fg:w="1"/><text x="64.7405%" y="463.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCSection*, unsigned int, llvm::DenseMapInfo&lt;llvm::MCSection*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::MCSection*, unsigned int&gt; &gt;, llvm::MCSection*, unsigned int, llvm::DenseMapInfo&lt;llvm::MCSection*, void&gt;, llvm::detail::DenseMapPair&lt;llvm::MCSection*, unsigned int&gt; &gt;::try_emplace&lt;unsigned int const&amp;&gt; (1 samples, 0.04%)</title><rect x="64.5346%" y="501" width="0.0441%" height="15" fill="rgb(210,79,3)" fg:x="1463" fg:w="1"/><text x="64.7846%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitAllocaInst (4 samples, 0.18%)</title><rect x="64.5787%" y="501" width="0.1764%" height="15" fill="rgb(214,176,27)" fg:x="1464" fg:w="4"/><text x="64.8287%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitICmpInst (2 samples, 0.09%)</title><rect x="64.7552%" y="501" width="0.0882%" height="15" fill="rgb(235,185,3)" fg:x="1468" fg:w="2"/><text x="65.0052%" y="511.50"></text></g><g><title>llvm::PatternMatch::cstval_pred_ty&lt;llvm::PatternMatch::is_zero_int, llvm::ConstantInt&gt;::match&lt;llvm::Value&gt; (1 samples, 0.04%)</title><rect x="64.7993%" y="485" width="0.0441%" height="15" fill="rgb(227,24,12)" fg:x="1469" fg:w="1"/><text x="65.0493%" y="495.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="65.0199%" y="453" width="0.0441%" height="15" fill="rgb(252,169,48)" fg:x="1474" fg:w="1"/><text x="65.2699%" y="463.50"></text></g><g><title>llvm::InstCombinerImpl::visitLoadInst (6 samples, 0.26%)</title><rect x="64.8434%" y="501" width="0.2647%" height="15" fill="rgb(212,65,1)" fg:x="1470" fg:w="6"/><text x="65.0934%" y="511.50"></text></g><g><title>computeKnownBits (2 samples, 0.09%)</title><rect x="65.0199%" y="485" width="0.0882%" height="15" fill="rgb(242,39,24)" fg:x="1474" fg:w="2"/><text x="65.2699%" y="495.50"></text></g><g><title>computeKnownBitsFromOperator (2 samples, 0.09%)</title><rect x="65.0199%" y="469" width="0.0882%" height="15" fill="rgb(249,32,23)" fg:x="1474" fg:w="2"/><text x="65.2699%" y="479.50"></text></g><g><title>llvm::KnownBits::computeForAddSub (1 samples, 0.04%)</title><rect x="65.0640%" y="453" width="0.0441%" height="15" fill="rgb(251,195,23)" fg:x="1475" fg:w="1"/><text x="65.3140%" y="463.50"></text></g><g><title>llvm::InstCombinerImpl::SimplifyDemandedUseBits (3 samples, 0.13%)</title><rect x="65.1963%" y="485" width="0.1323%" height="15" fill="rgb(236,174,8)" fg:x="1478" fg:w="3"/><text x="65.4463%" y="495.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="65.2845%" y="469" width="0.0441%" height="15" fill="rgb(220,197,8)" fg:x="1480" fg:w="1"/><text x="65.5345%" y="479.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="65.2845%" y="453" width="0.0441%" height="15" fill="rgb(240,108,37)" fg:x="1480" fg:w="1"/><text x="65.5345%" y="463.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="65.2845%" y="437" width="0.0441%" height="15" fill="rgb(232,176,24)" fg:x="1480" fg:w="1"/><text x="65.5345%" y="447.50"></text></g><g><title>computeKnownBitsFromOperator (1 samples, 0.04%)</title><rect x="65.2845%" y="421" width="0.0441%" height="15" fill="rgb(243,35,29)" fg:x="1480" fg:w="1"/><text x="65.5345%" y="431.50"></text></g><g><title>isKnownNonZero (5 samples, 0.22%)</title><rect x="65.4169%" y="469" width="0.2206%" height="15" fill="rgb(210,37,18)" fg:x="1483" fg:w="5"/><text x="65.6669%" y="479.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="65.5933%" y="453" width="0.0441%" height="15" fill="rgb(224,184,40)" fg:x="1487" fg:w="1"/><text x="65.8433%" y="463.50"></text></g><g><title>computeKnownBits (1 samples, 0.04%)</title><rect x="65.5933%" y="437" width="0.0441%" height="15" fill="rgb(236,39,29)" fg:x="1487" fg:w="1"/><text x="65.8433%" y="447.50"></text></g><g><title>computeKnownBitsFromAssume (1 samples, 0.04%)</title><rect x="65.5933%" y="421" width="0.0441%" height="15" fill="rgb(232,48,39)" fg:x="1487" fg:w="1"/><text x="65.8433%" y="431.50"></text></g><g><title>llvm::isValidAssumeForContext (1 samples, 0.04%)</title><rect x="65.6374%" y="469" width="0.0441%" height="15" fill="rgb(236,34,42)" fg:x="1488" fg:w="1"/><text x="65.8874%" y="479.50"></text></g><g><title>llvm::InstCombinerImpl::visitPHINode (14 samples, 0.62%)</title><rect x="65.1081%" y="501" width="0.6176%" height="15" fill="rgb(243,106,37)" fg:x="1476" fg:w="14"/><text x="65.3581%" y="511.50"></text></g><g><title>simplifyICmpInst (9 samples, 0.40%)</title><rect x="65.3286%" y="485" width="0.3970%" height="15" fill="rgb(218,96,6)" fg:x="1481" fg:w="9"/><text x="65.5786%" y="495.50"></text></g><g><title>simplifyICmpInst (1 samples, 0.04%)</title><rect x="65.6815%" y="469" width="0.0441%" height="15" fill="rgb(235,130,12)" fg:x="1489" fg:w="1"/><text x="65.9315%" y="479.50"></text></g><g><title>llvm::ConstantRange::makeExactICmpRegion (1 samples, 0.04%)</title><rect x="65.6815%" y="453" width="0.0441%" height="15" fill="rgb(231,95,0)" fg:x="1489" fg:w="1"/><text x="65.9315%" y="463.50"></text></g><g><title>llvm::ConstantRange::ConstantRange (1 samples, 0.04%)</title><rect x="65.6815%" y="437" width="0.0441%" height="15" fill="rgb(228,12,23)" fg:x="1489" fg:w="1"/><text x="65.9315%" y="447.50"></text></g><g><title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::pointsToConstantMemory (1 samples, 0.04%)</title><rect x="65.7697%" y="485" width="0.0441%" height="15" fill="rgb(216,12,1)" fg:x="1491" fg:w="1"/><text x="66.0197%" y="495.50"></text></g><g><title>llvm::InstCombinerImpl::visitStoreInst (4 samples, 0.18%)</title><rect x="65.7256%" y="501" width="0.1764%" height="15" fill="rgb(219,59,3)" fg:x="1490" fg:w="4"/><text x="65.9756%" y="511.50"></text></g><g><title>llvm::InstCombinerImpl::visitAllocSite (2 samples, 0.09%)</title><rect x="65.8139%" y="485" width="0.0882%" height="15" fill="rgb(215,208,46)" fg:x="1492" fg:w="2"/><text x="66.0639%" y="495.50"></text></g><g><title>llvm::Instruction::applyMergedLocation (1 samples, 0.04%)</title><rect x="65.9021%" y="501" width="0.0441%" height="15" fill="rgb(254,224,29)" fg:x="1494" fg:w="1"/><text x="66.1521%" y="511.50"></text></g><g><title>llvm::DILocation::getMergedLocation (1 samples, 0.04%)</title><rect x="65.9021%" y="485" width="0.0441%" height="15" fill="rgb(232,14,29)" fg:x="1494" fg:w="1"/><text x="66.1521%" y="495.50"></text></g><g><title>llvm::KnownBits::byteSwap (1 samples, 0.04%)</title><rect x="65.9462%" y="501" width="0.0441%" height="15" fill="rgb(208,45,52)" fg:x="1495" fg:w="1"/><text x="66.1962%" y="511.50"></text></g><g><title>llvm::LoopBase&lt;llvm::BasicBlock, llvm::Loop&gt;::getUniqueNonLatchExitBlocks (1 samples, 0.04%)</title><rect x="65.9462%" y="485" width="0.0441%" height="15" fill="rgb(234,191,28)" fg:x="1495" fg:w="1"/><text x="66.1962%" y="495.50"></text></g><g><title>llvm::LibCallsShrinkWrapPass::run (1 samples, 0.04%)</title><rect x="65.9903%" y="501" width="0.0441%" height="15" fill="rgb(244,67,43)" fg:x="1496" fg:w="1"/><text x="66.2403%" y="511.50"></text></g><g><title>llvm::LiveRangeEdit::anyRematerializable (5 samples, 0.22%)</title><rect x="66.0344%" y="501" width="0.2206%" height="15" fill="rgb(236,189,24)" fg:x="1497" fg:w="5"/><text x="66.2844%" y="511.50"></text></g><g><title>computeKnownBits (4 samples, 0.18%)</title><rect x="66.0785%" y="485" width="0.1764%" height="15" fill="rgb(239,214,33)" fg:x="1498" fg:w="4"/><text x="66.3285%" y="495.50"></text></g><g><title>computeKnownBitsFromOperator (2 samples, 0.09%)</title><rect x="66.1667%" y="469" width="0.0882%" height="15" fill="rgb(226,176,41)" fg:x="1500" fg:w="2"/><text x="66.4167%" y="479.50"></text></g><g><title>llvm::Type::getPrimitiveSizeInBits (1 samples, 0.04%)</title><rect x="66.2109%" y="453" width="0.0441%" height="15" fill="rgb(248,47,8)" fg:x="1501" fg:w="1"/><text x="66.4609%" y="463.50"></text></g><g><title>llvm::AllocaInst::AllocaInst (2 samples, 0.09%)</title><rect x="66.4314%" y="485" width="0.0882%" height="15" fill="rgb(218,81,44)" fg:x="1506" fg:w="2"/><text x="66.6814%" y="495.50"></text></g><g><title>llvm::ConstantInt::get (2 samples, 0.09%)</title><rect x="66.4314%" y="469" width="0.0882%" height="15" fill="rgb(213,98,6)" fg:x="1506" fg:w="2"/><text x="66.6814%" y="479.50"></text></g><g><title>llvm::ConstantInt::get (1 samples, 0.04%)</title><rect x="66.5196%" y="485" width="0.0441%" height="15" fill="rgb(222,85,22)" fg:x="1508" fg:w="1"/><text x="66.7696%" y="495.50"></text></g><g><title>llvm::IRBuilderBase::CreateLifetimeEnd (3 samples, 0.13%)</title><rect x="66.5637%" y="485" width="0.1323%" height="15" fill="rgb(239,46,39)" fg:x="1509" fg:w="3"/><text x="66.8137%" y="495.50"></text></g><g><title>llvm::Intrinsic::getDeclaration (3 samples, 0.13%)</title><rect x="66.5637%" y="469" width="0.1323%" height="15" fill="rgb(237,12,29)" fg:x="1509" fg:w="3"/><text x="66.8137%" y="479.50"></text></g><g><title>getMangledTypeStr[abi:cxx11] (1 samples, 0.04%)</title><rect x="66.8725%" y="453" width="0.0441%" height="15" fill="rgb(214,77,8)" fg:x="1516" fg:w="1"/><text x="67.1225%" y="463.50"></text></g><g><title>llvm::IRBuilderBase::CreateLifetimeStart (6 samples, 0.26%)</title><rect x="66.6961%" y="485" width="0.2647%" height="15" fill="rgb(217,168,37)" fg:x="1512" fg:w="6"/><text x="66.9461%" y="495.50"></text></g><g><title>llvm::Intrinsic::getDeclaration (6 samples, 0.26%)</title><rect x="66.6961%" y="469" width="0.2647%" height="15" fill="rgb(221,217,23)" fg:x="1512" fg:w="6"/><text x="66.9461%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.04%)</title><rect x="66.9166%" y="453" width="0.0441%" height="15" fill="rgb(243,229,36)" fg:x="1517" fg:w="1"/><text x="67.1666%" y="463.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.04%)</title><rect x="66.9166%" y="437" width="0.0441%" height="15" fill="rgb(251,163,40)" fg:x="1517" fg:w="1"/><text x="67.1666%" y="447.50"></text></g><g><title>llvm::MetadataTracking::track (2 samples, 0.09%)</title><rect x="66.9607%" y="485" width="0.0882%" height="15" fill="rgb(237,222,12)" fg:x="1518" fg:w="2"/><text x="67.2107%" y="495.50"></text></g><g><title>llvm::Twine::printOneChild (1 samples, 0.04%)</title><rect x="67.0490%" y="485" width="0.0441%" height="15" fill="rgb(248,132,6)" fg:x="1520" fg:w="1"/><text x="67.2990%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="67.0490%" y="469" width="0.0441%" height="15" fill="rgb(227,167,50)" fg:x="1520" fg:w="1"/><text x="67.2990%" y="479.50"></text></g><g><title>llvm::sroa::AllocaSliceRewriter::visitLoadInst (2 samples, 0.09%)</title><rect x="67.0931%" y="485" width="0.0882%" height="15" fill="rgb(242,84,37)" fg:x="1521" fg:w="2"/><text x="67.3431%" y="495.50"></text></g><g><title>llvm::Value::setMetadata (1 samples, 0.04%)</title><rect x="67.1372%" y="469" width="0.0441%" height="15" fill="rgb(212,4,50)" fg:x="1522" fg:w="1"/><text x="67.3872%" y="479.50"></text></g><g><title>getAdjustedPtr (2 samples, 0.09%)</title><rect x="67.2254%" y="469" width="0.0882%" height="15" fill="rgb(230,228,32)" fg:x="1524" fg:w="2"/><text x="67.4754%" y="479.50"></text></g><g><title>llvm::sroa::AllocaSliceRewriter::visitMemTransferInst (6 samples, 0.26%)</title><rect x="67.1813%" y="485" width="0.2647%" height="15" fill="rgb(248,217,23)" fg:x="1523" fg:w="6"/><text x="67.4313%" y="495.50"></text></g><g><title>llvm::Instruction::copyMetadata (3 samples, 0.13%)</title><rect x="67.3136%" y="469" width="0.1323%" height="15" fill="rgb(238,197,32)" fg:x="1526" fg:w="3"/><text x="67.5636%" y="479.50"></text></g><g><title>llvm::SROAPass::rewritePartition (29 samples, 1.28%)</title><rect x="66.2550%" y="501" width="1.2792%" height="15" fill="rgb(236,106,1)" fg:x="1502" fg:w="29"/><text x="66.5050%" y="511.50"></text></g><g><title>llvm::sroa::AllocaSliceRewriter::visitStoreInst (2 samples, 0.09%)</title><rect x="67.4460%" y="485" width="0.0882%" height="15" fill="rgb(219,228,13)" fg:x="1529" fg:w="2"/><text x="67.6960%" y="495.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.04%)</title><rect x="67.4901%" y="469" width="0.0441%" height="15" fill="rgb(238,30,35)" fg:x="1530" fg:w="1"/><text x="67.7401%" y="479.50"></text></g><g><title>llvm::SROAPass::splitAlloca (2 samples, 0.09%)</title><rect x="67.5342%" y="501" width="0.0882%" height="15" fill="rgb(236,70,23)" fg:x="1531" fg:w="2"/><text x="67.7842%" y="511.50"></text></g><g><title>llvm::DataLayout::getTypeSizeInBits (2 samples, 0.09%)</title><rect x="67.5342%" y="485" width="0.0882%" height="15" fill="rgb(249,104,48)" fg:x="1531" fg:w="2"/><text x="67.7842%" y="495.50"></text></g><g><title>llvm::ScalarEvolution::isImpliedCondBalancedTypes (1 samples, 0.04%)</title><rect x="67.6224%" y="501" width="0.0441%" height="15" fill="rgb(254,117,50)" fg:x="1533" fg:w="1"/><text x="67.8724%" y="511.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.04%)</title><rect x="67.6665%" y="501" width="0.0441%" height="15" fill="rgb(223,152,4)" fg:x="1534" fg:w="1"/><text x="67.9165%" y="511.50"></text></g><g><title>llvm::AAManager::getFunctionAAResultImpl&lt;llvm::BasicAA&gt; (3 samples, 0.13%)</title><rect x="67.7106%" y="469" width="0.1323%" height="15" fill="rgb(245,6,2)" fg:x="1535" fg:w="3"/><text x="67.9606%" y="479.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="67.7106%" y="453" width="0.1323%" height="15" fill="rgb(249,150,24)" fg:x="1535" fg:w="3"/><text x="67.9606%" y="463.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BasicAA, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (2 samples, 0.09%)</title><rect x="67.7547%" y="437" width="0.0882%" height="15" fill="rgb(228,185,42)" fg:x="1536" fg:w="2"/><text x="68.0047%" y="447.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (2 samples, 0.09%)</title><rect x="67.7547%" y="421" width="0.0882%" height="15" fill="rgb(226,39,33)" fg:x="1536" fg:w="2"/><text x="68.0047%" y="431.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::DominatorTreeAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="67.7989%" y="405" width="0.0441%" height="15" fill="rgb(221,166,19)" fg:x="1537" fg:w="1"/><text x="68.0489%" y="415.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="67.7989%" y="389" width="0.0441%" height="15" fill="rgb(209,109,2)" fg:x="1537" fg:w="1"/><text x="68.0489%" y="399.50"></text></g><g><title>llvm::AAManager::getFunctionAAResultImpl&lt;llvm::ScopedNoAliasAA&gt; (1 samples, 0.04%)</title><rect x="67.8430%" y="469" width="0.0441%" height="15" fill="rgb(252,216,26)" fg:x="1538" fg:w="1"/><text x="68.0930%" y="479.50"></text></g><g><title>llvm::AAManager::getFunctionAAResultImpl&lt;llvm::TypeBasedAA&gt; (1 samples, 0.04%)</title><rect x="67.8871%" y="469" width="0.0441%" height="15" fill="rgb(227,173,36)" fg:x="1539" fg:w="1"/><text x="68.1371%" y="479.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::AAManager, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (6 samples, 0.26%)</title><rect x="67.7106%" y="501" width="0.2647%" height="15" fill="rgb(209,90,7)" fg:x="1535" fg:w="6"/><text x="67.9606%" y="511.50"></text></g><g><title>llvm::AAManager::run (6 samples, 0.26%)</title><rect x="67.7106%" y="485" width="0.2647%" height="15" fill="rgb(250,194,11)" fg:x="1535" fg:w="6"/><text x="67.9606%" y="495.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="67.9312%" y="469" width="0.0441%" height="15" fill="rgb(220,72,50)" fg:x="1540" fg:w="1"/><text x="68.1812%" y="479.50"></text></g><g><title>llvm::detail::AnalysisResultModel&lt;llvm::Function, llvm::AAManager, llvm::AAResults, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator, true&gt;::invalidate (1 samples, 0.04%)</title><rect x="67.9753%" y="501" width="0.0441%" height="15" fill="rgb(222,106,48)" fg:x="1541" fg:w="1"/><text x="68.2253%" y="511.50"></text></g><g><title>findRefEdges (1 samples, 0.04%)</title><rect x="68.1959%" y="405" width="0.0441%" height="15" fill="rgb(216,220,45)" fg:x="1546" fg:w="1"/><text x="68.4459%" y="415.50"></text></g><g><title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (2 samples, 0.09%)</title><rect x="68.2400%" y="405" width="0.0882%" height="15" fill="rgb(234,112,18)" fg:x="1547" fg:w="2"/><text x="68.4900%" y="415.50"></text></g><g><title>llvm::ModuleSummaryIndex::addGlobalValueSummary (1 samples, 0.04%)</title><rect x="68.3282%" y="405" width="0.0441%" height="15" fill="rgb(206,179,9)" fg:x="1549" fg:w="1"/><text x="68.5782%" y="415.50"></text></g><g><title>llvm::MD5::final (1 samples, 0.04%)</title><rect x="68.3282%" y="389" width="0.0441%" height="15" fill="rgb(215,115,40)" fg:x="1549" fg:w="1"/><text x="68.5782%" y="399.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (1 samples, 0.04%)</title><rect x="68.3723%" y="325" width="0.0441%" height="15" fill="rgb(222,69,34)" fg:x="1550" fg:w="1"/><text x="68.6223%" y="335.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::LoopAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (1 samples, 0.04%)</title><rect x="68.3723%" y="309" width="0.0441%" height="15" fill="rgb(209,161,10)" fg:x="1550" fg:w="1"/><text x="68.6223%" y="319.50"></text></g><g><title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (1 samples, 0.04%)</title><rect x="68.3723%" y="293" width="0.0441%" height="15" fill="rgb(217,6,38)" fg:x="1550" fg:w="1"/><text x="68.6223%" y="303.50"></text></g><g><title>llvm::BranchProbabilityInfo::SccInfo::SccInfo (1 samples, 0.04%)</title><rect x="68.4164%" y="309" width="0.0441%" height="15" fill="rgb(229,229,48)" fg:x="1551" fg:w="1"/><text x="68.6664%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (3 samples, 0.13%)</title><rect x="68.3723%" y="357" width="0.1323%" height="15" fill="rgb(225,21,28)" fg:x="1550" fg:w="3"/><text x="68.6223%" y="367.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BranchProbabilityAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (3 samples, 0.13%)</title><rect x="68.3723%" y="341" width="0.1323%" height="15" fill="rgb(206,33,13)" fg:x="1550" fg:w="3"/><text x="68.6223%" y="351.50"></text></g><g><title>llvm::BranchProbabilityInfo::calculate (2 samples, 0.09%)</title><rect x="68.4164%" y="325" width="0.0882%" height="15" fill="rgb(242,178,17)" fg:x="1551" fg:w="2"/><text x="68.6664%" y="335.50"></text></g><g><title>llvm::BranchProbabilityInfo::computeEestimateBlockWeight (1 samples, 0.04%)</title><rect x="68.4605%" y="309" width="0.0441%" height="15" fill="rgb(220,162,5)" fg:x="1552" fg:w="1"/><text x="68.7105%" y="319.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Module&gt;::getResultImpl (12 samples, 0.53%)</title><rect x="68.0194%" y="469" width="0.5293%" height="15" fill="rgb(210,33,43)" fg:x="1542" fg:w="12"/><text x="68.2694%" y="479.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Module, llvm::ModuleSummaryIndexAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;::Invalidator&gt;::run (12 samples, 0.53%)</title><rect x="68.0194%" y="453" width="0.5293%" height="15" fill="rgb(216,116,54)" fg:x="1542" fg:w="12"/><text x="68.2694%" y="463.50"></text></g><g><title>llvm::ModuleSummaryIndexAnalysis::run (12 samples, 0.53%)</title><rect x="68.0194%" y="437" width="0.5293%" height="15" fill="rgb(249,92,24)" fg:x="1542" fg:w="12"/><text x="68.2694%" y="447.50"></text></g><g><title>llvm::buildModuleSummaryIndex (12 samples, 0.53%)</title><rect x="68.0194%" y="421" width="0.5293%" height="15" fill="rgb(231,189,14)" fg:x="1542" fg:w="12"/><text x="68.2694%" y="431.50"></text></g><g><title>llvm::function_ref&lt;llvm::BlockFrequencyInfo&amp; (llvm::Function&amp;)&gt;::callback_fn&lt;llvm::GlobalOptPass::run(llvm::Module&amp;, llvm::AnalysisManager&lt;llvm::Module&gt;&amp;)::$_3&gt; (4 samples, 0.18%)</title><rect x="68.3723%" y="405" width="0.1764%" height="15" fill="rgb(230,8,41)" fg:x="1550" fg:w="4"/><text x="68.6223%" y="415.50"></text></g><g><title>llvm::AnalysisManager&lt;llvm::Function&gt;::getResultImpl (4 samples, 0.18%)</title><rect x="68.3723%" y="389" width="0.1764%" height="15" fill="rgb(249,7,27)" fg:x="1550" fg:w="4"/><text x="68.6223%" y="399.50"></text></g><g><title>llvm::detail::AnalysisPassModel&lt;llvm::Function, llvm::BlockFrequencyAnalysis, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;::run (4 samples, 0.18%)</title><rect x="68.3723%" y="373" width="0.1764%" height="15" fill="rgb(232,86,5)" fg:x="1550" fg:w="4"/><text x="68.6223%" y="383.50"></text></g><g><title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::tryToComputeMassInFunction (1 samples, 0.04%)</title><rect x="68.5046%" y="357" width="0.0441%" height="15" fill="rgb(224,175,18)" fg:x="1553" fg:w="1"/><text x="68.7546%" y="367.50"></text></g><g><title>llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVector&lt;unsigned int, 64u&gt; &gt; (1 samples, 0.04%)</title><rect x="68.7693%" y="437" width="0.0441%" height="15" fill="rgb(220,129,12)" fg:x="1559" fg:w="1"/><text x="69.0193%" y="447.50"></text></g><g><title>llvm::BitstreamWriter::EmitRecord&lt;llvm::SmallVector&lt;unsigned long, 64u&gt; &gt; (1 samples, 0.04%)</title><rect x="68.8134%" y="437" width="0.0441%" height="15" fill="rgb(210,19,36)" fg:x="1560" fg:w="1"/><text x="69.0634%" y="447.50"></text></g><g><title>llvm::BitstreamWriter::ExitBlock (1 samples, 0.04%)</title><rect x="68.8575%" y="437" width="0.0441%" height="15" fill="rgb(219,96,14)" fg:x="1561" fg:w="1"/><text x="69.1075%" y="447.50"></text></g><g><title>std::vector&lt;std::shared_ptr&lt;llvm::BitCodeAbbrev&gt;, std::allocator&lt;std::shared_ptr&lt;llvm::BitCodeAbbrev&gt; &gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="68.8575%" y="421" width="0.0441%" height="15" fill="rgb(249,106,1)" fg:x="1561" fg:w="1"/><text x="69.1075%" y="431.50"></text></g><g><title>llvm::SHA1::update (5 samples, 0.22%)</title><rect x="68.9016%" y="437" width="0.2206%" height="15" fill="rgb(249,155,20)" fg:x="1562" fg:w="5"/><text x="69.1516%" y="447.50"></text></g><g><title>llvm::SHA1::hashBlock (5 samples, 0.22%)</title><rect x="68.9016%" y="421" width="0.2206%" height="15" fill="rgb(244,168,9)" fg:x="1562" fg:w="5"/><text x="69.1516%" y="431.50"></text></g><g><title>llvm::ValueEnumerator::EnumerateAttributes (2 samples, 0.09%)</title><rect x="69.2104%" y="421" width="0.0882%" height="15" fill="rgb(216,23,50)" fg:x="1569" fg:w="2"/><text x="69.4604%" y="431.50"></text></g><g><title>llvm::ValueEnumerator::EnumerateMetadata (1 samples, 0.04%)</title><rect x="69.2986%" y="421" width="0.0441%" height="15" fill="rgb(224,219,20)" fg:x="1571" fg:w="1"/><text x="69.5486%" y="431.50"></text></g><g><title>llvm::ValueEnumerator::enumerateMetadataImpl (1 samples, 0.04%)</title><rect x="69.2986%" y="405" width="0.0441%" height="15" fill="rgb(222,156,15)" fg:x="1571" fg:w="1"/><text x="69.5486%" y="415.50"></text></g><g><title>llvm::ValueEnumerator::EnumerateOperandType (1 samples, 0.04%)</title><rect x="69.3427%" y="421" width="0.0441%" height="15" fill="rgb(231,97,17)" fg:x="1572" fg:w="1"/><text x="69.5927%" y="431.50"></text></g><g><title>llvm::ValueEnumerator::EnumerateValue (1 samples, 0.04%)</title><rect x="69.3869%" y="421" width="0.0441%" height="15" fill="rgb(218,70,48)" fg:x="1573" fg:w="1"/><text x="69.6369%" y="431.50"></text></g><g><title>llvm::ValueEnumerator::ValueEnumerator (9 samples, 0.40%)</title><rect x="69.1222%" y="437" width="0.3970%" height="15" fill="rgb(212,196,52)" fg:x="1567" fg:w="9"/><text x="69.3722%" y="447.50"></text></g><g><title>llvm::ValueEnumerator::organizeMetadata (2 samples, 0.09%)</title><rect x="69.4310%" y="421" width="0.0882%" height="15" fill="rgb(243,203,18)" fg:x="1574" fg:w="2"/><text x="69.6810%" y="431.50"></text></g><g><title>std::__introsort_loop&lt;llvm::ValueEnumerator::MDIndex*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;llvm::ValueEnumerator::organizeMetadata()::$_3&gt; &gt; (2 samples, 0.09%)</title><rect x="69.4310%" y="405" width="0.0882%" height="15" fill="rgb(252,125,41)" fg:x="1574" fg:w="2"/><text x="69.6810%" y="415.50"></text></g><g><title>llvm::ValueEnumerator::incorporateFunction (2 samples, 0.09%)</title><rect x="69.5192%" y="437" width="0.0882%" height="15" fill="rgb(223,180,33)" fg:x="1576" fg:w="2"/><text x="69.7692%" y="447.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.04%)</title><rect x="69.6074%" y="437" width="0.0441%" height="15" fill="rgb(254,159,46)" fg:x="1578" fg:w="1"/><text x="69.8574%" y="447.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.04%)</title><rect x="69.6074%" y="421" width="0.0441%" height="15" fill="rgb(254,38,10)" fg:x="1578" fg:w="1"/><text x="69.8574%" y="431.50"></text></g><g><title>llvm::BitcodeWriter::writeModule (26 samples, 1.15%)</title><rect x="68.5487%" y="453" width="1.1469%" height="15" fill="rgb(208,217,32)" fg:x="1554" fg:w="26"/><text x="68.7987%" y="463.50"></text></g><g><title>std::vector&lt;std::shared_ptr&lt;llvm::BitCodeAbbrev&gt;, std::allocator&lt;std::shared_ptr&lt;llvm::BitCodeAbbrev&gt; &gt; &gt;::_M_realloc_insert&lt;std::shared_ptr&lt;llvm::BitCodeAbbrev&gt; &gt; (1 samples, 0.04%)</title><rect x="69.6515%" y="437" width="0.0441%" height="15" fill="rgb(221,120,13)" fg:x="1579" fg:w="1"/><text x="69.9015%" y="447.50"></text></g><g><title>llvm::detail::PassModel&lt;llvm::Module, llvm::ThinLTOBitcodeWriterPass, llvm::PreservedAnalyses, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (40 samples, 1.76%)</title><rect x="68.0194%" y="501" width="1.7644%" height="15" fill="rgb(246,54,52)" fg:x="1542" fg:w="40"/><text x="68.2694%" y="511.50"></text></g><g><title>llvm::ThinLTOBitcodeWriterPass::run (40 samples, 1.76%)</title><rect x="68.0194%" y="485" width="1.7644%" height="15" fill="rgb(242,34,25)" fg:x="1542" fg:w="40"/><text x="68.2694%" y="495.50"></text></g><g><title>llvm::WriteBitcodeToFile (28 samples, 1.24%)</title><rect x="68.5487%" y="469" width="1.2351%" height="15" fill="rgb(247,209,9)" fg:x="1554" fg:w="28"/><text x="68.7987%" y="479.50"></text></g><g><title>llvm::BitcodeWriter::writeSymtab (2 samples, 0.09%)</title><rect x="69.6956%" y="453" width="0.0882%" height="15" fill="rgb(228,71,26)" fg:x="1580" fg:w="2"/><text x="69.9456%" y="463.50"></text></g><g><title>llvm::irsymtab::build (2 samples, 0.09%)</title><rect x="69.6956%" y="437" width="0.0882%" height="15" fill="rgb(222,145,49)" fg:x="1580" fg:w="2"/><text x="69.9456%" y="447.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="69.6956%" y="421" width="0.0882%" height="15" fill="rgb(218,121,17)" fg:x="1580" fg:w="2"/><text x="69.9456%" y="431.50"></text></g><g><title>operator new (1 samples, 0.04%)</title><rect x="69.7839%" y="501" width="0.0441%" height="15" fill="rgb(244,50,7)" fg:x="1582" fg:w="1"/><text x="70.0339%" y="511.50"></text></g><g><title>pac_alloc_impl (1 samples, 0.04%)</title><rect x="69.8280%" y="501" width="0.0441%" height="15" fill="rgb(246,229,37)" fg:x="1583" fg:w="1"/><text x="70.0780%" y="511.50"></text></g><g><title>llvm::MetadataAsValue::~MetadataAsValue (1 samples, 0.04%)</title><rect x="70.3132%" y="453" width="0.0441%" height="15" fill="rgb(225,18,5)" fg:x="1594" fg:w="1"/><text x="70.5632%" y="463.50"></text></g><g><title>LLVMContextDispose (11 samples, 0.49%)</title><rect x="69.9162%" y="485" width="0.4852%" height="15" fill="rgb(213,204,8)" fg:x="1585" fg:w="11"/><text x="70.1662%" y="495.50"></text></g><g><title>llvm::LLVMContextImpl::~LLVMContextImpl (11 samples, 0.49%)</title><rect x="69.9162%" y="469" width="0.4852%" height="15" fill="rgb(238,103,6)" fg:x="1585" fg:w="11"/><text x="70.1662%" y="479.50"></text></g><g><title>llvm::Module::~Module (1 samples, 0.04%)</title><rect x="70.3573%" y="453" width="0.0441%" height="15" fill="rgb(222,25,35)" fg:x="1595" fg:w="1"/><text x="70.6073%" y="463.50"></text></g><g><title>llvm::Module::dropAllReferences (1 samples, 0.04%)</title><rect x="70.3573%" y="437" width="0.0441%" height="15" fill="rgb(213,203,35)" fg:x="1595" fg:w="1"/><text x="70.6073%" y="447.50"></text></g><g><title>llvm::BasicBlock::~BasicBlock (1 samples, 0.04%)</title><rect x="70.3573%" y="421" width="0.0441%" height="15" fill="rgb(221,79,53)" fg:x="1595" fg:w="1"/><text x="70.6073%" y="431.50"></text></g><g><title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="70.3573%" y="405" width="0.0441%" height="15" fill="rgb(243,200,35)" fg:x="1595" fg:w="1"/><text x="70.6073%" y="415.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item::&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt; (13 samples, 0.57%)</title><rect x="69.8721%" y="501" width="0.5734%" height="15" fill="rgb(248,60,25)" fg:x="1584" fg:w="13"/><text x="70.1221%" y="511.50"></text></g><g><title>llvm::X86TargetMachine::~X86TargetMachine (1 samples, 0.04%)</title><rect x="70.4014%" y="485" width="0.0441%" height="15" fill="rgb(227,53,46)" fg:x="1596" fg:w="1"/><text x="70.6514%" y="495.50"></text></g><g><title>llvm::SROAPass::presplitLoadsAndStores (1 samples, 0.04%)</title><rect x="70.5337%" y="485" width="0.0441%" height="15" fill="rgb(216,120,32)" fg:x="1599" fg:w="1"/><text x="70.7837%" y="495.50"></text></g><g><title>std::__copy_move_a2&lt;false, llvm::po_iterator&lt;llvm::BasicBlock const*, llvm::SmallPtrSet&lt;llvm::BasicBlock const*, 8u&gt;, false, llvm::GraphTraits&lt;llvm::BasicBlock const*&gt; &gt;, std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock const*, std::allocator&lt;llvm::BasicBlock const*&gt; &gt; &gt; &gt; (4 samples, 0.18%)</title><rect x="70.4455%" y="501" width="0.1764%" height="15" fill="rgb(220,134,1)" fg:x="1597" fg:w="4"/><text x="70.6955%" y="511.50"></text></g><g><title>qsort_r (1 samples, 0.04%)</title><rect x="70.5779%" y="485" width="0.0441%" height="15" fill="rgb(237,168,5)" fg:x="1600" fg:w="1"/><text x="70.8279%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="70.5779%" y="469" width="0.0441%" height="15" fill="rgb(231,100,33)" fg:x="1600" fg:w="1"/><text x="70.8279%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="70.5779%" y="453" width="0.0441%" height="15" fill="rgb(236,177,47)" fg:x="1600" fg:w="1"/><text x="70.8279%" y="463.50"></text></g><g><title>opt_maze_solver (962 samples, 42.43%)</title><rect x="28.2311%" y="517" width="42.4349%" height="15" fill="rgb(235,7,49)" fg:x="640" fg:w="962"/><text x="28.4811%" y="527.50">opt_maze_solver</text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.04%)</title><rect x="70.6220%" y="501" width="0.0441%" height="15" fill="rgb(232,119,22)" fg:x="1601" fg:w="1"/><text x="70.8720%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="70.6220%" y="485" width="0.0441%" height="15" fill="rgb(254,73,53)" fg:x="1601" fg:w="1"/><text x="70.8720%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="70.6220%" y="469" width="0.0441%" height="15" fill="rgb(251,35,20)" fg:x="1601" fg:w="1"/><text x="70.8720%" y="479.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.04%)</title><rect x="70.6220%" y="453" width="0.0441%" height="15" fill="rgb(241,119,20)" fg:x="1601" fg:w="1"/><text x="70.8720%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (1 samples, 0.04%)</title><rect x="70.6220%" y="437" width="0.0441%" height="15" fill="rgb(207,102,14)" fg:x="1601" fg:w="1"/><text x="70.8720%" y="447.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.04%)</title><rect x="70.6220%" y="421" width="0.0441%" height="15" fill="rgb(248,201,50)" fg:x="1601" fg:w="1"/><text x="70.8720%" y="431.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="70.6220%" y="405" width="0.0441%" height="15" fill="rgb(222,185,44)" fg:x="1601" fg:w="1"/><text x="70.8720%" y="415.50"></text></g><g><title>&lt;&amp;mut &lt;rustc_trait_selection::traits::select::SelectionContext&gt;::collect_predicates_for_types::{closure#0} as core::ops::function::FnOnce&lt;(&amp;rustc_middle::ty::Ty,)&gt;&gt;::call_once (1 samples, 0.04%)</title><rect x="70.6661%" y="501" width="0.0441%" height="15" fill="rgb(218,107,18)" fg:x="1602" fg:w="1"/><text x="70.9161%" y="511.50"></text></g><g><title>&lt;&amp;mut rustc_symbol_mangling::legacy::SymbolPrinter as rustc_middle::ty::print::Printer&gt;::print_def_path (5 samples, 0.22%)</title><rect x="70.7102%" y="501" width="0.2206%" height="15" fill="rgb(237,177,39)" fg:x="1603" fg:w="5"/><text x="70.9602%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;(rustc_middle::mir::BasicBlock, core::iter::adapters::chain::Chain&lt;core::option::IntoIter&lt;rustc_middle::mir::BasicBlock&gt;, core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::mir::BasicBlock&gt;&gt;&gt;)&gt;&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="70.9307%" y="501" width="0.0441%" height="15" fill="rgb(246,69,6)" fg:x="1608" fg:w="1"/><text x="71.1807%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;ena::unify::VarValue&lt;rustc_middle::infer::unify_key::RegionVidKey&gt;&gt;&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="70.9749%" y="501" width="0.0441%" height="15" fill="rgb(234,208,37)" fg:x="1609" fg:w="1"/><text x="71.2249%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;ena::unify::VarValue&lt;rustc_type_ir::TyVid&gt;&gt;&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="71.0190%" y="501" width="0.0441%" height="15" fill="rgb(225,4,6)" fg:x="1610" fg:w="1"/><text x="71.2690%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;rustc_middle::traits::ObligationCauseCode&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="71.0631%" y="501" width="0.0441%" height="15" fill="rgb(233,45,0)" fg:x="1611" fg:w="1"/><text x="71.3131%" y="511.50"></text></g><g><title>&lt;alloc::string::String as &lt;alloc::ffi::c_str::CString&gt;::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.04%)</title><rect x="71.1072%" y="501" width="0.0441%" height="15" fill="rgb(226,136,5)" fg:x="1612" fg:w="1"/><text x="71.3572%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;&amp;rustc_middle::infer::canonical::QueryRegionConstraints&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;&amp;rustc_middle::infer::canonical::QueryRegionConstraints, core::iter::adapters::flatten::FlatMap&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::cloned::Cloned&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;, core::option::IntoIter&lt;rustc_middle::ty::Ty&gt;&gt;, core::iter::adapters::chain::Chain&lt;core::iter::adapters::chain::Chain&lt;core::option::IntoIter&lt;&amp;rustc_middle::infer::canonical::QueryRegionConstraints&gt;, core::option::IntoIter&lt;&amp;rustc_middle::infer::canonical::QueryRegionConstraints&gt;&gt;, core::option::IntoIter&lt;&amp;rustc_middle::infer::canonical::QueryRegionConstraints&gt;&gt;, &lt;rustc_borrowck::type_check::free_region_relations::UniversalRegionRelationsBuilder&gt;::create::{closure#0}&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="71.1513%" y="501" width="0.0441%" height="15" fill="rgb(211,91,47)" fg:x="1613" fg:w="1"/><text x="71.4013%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(rustc_span::def_id::CrateNum, std::path::PathBuf)&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.1954%" y="501" width="0.0441%" height="15" fill="rgb(242,88,51)" fg:x="1614" fg:w="1"/><text x="71.4454%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="71.1954%" y="485" width="0.0441%" height="15" fill="rgb(230,91,28)" fg:x="1614" fg:w="1"/><text x="71.4454%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem), core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="71.2395%" y="501" width="0.0441%" height="15" fill="rgb(254,186,29)" fg:x="1615" fg:w="1"/><text x="71.4895%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_abi::LayoutS&lt;rustc_target::abi::VariantIdx&gt;&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;rustc_abi::LayoutS&lt;rustc_target::abi::VariantIdx&gt;, core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;alloc::vec::Vec&lt;rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;&gt;&gt;&gt;, &lt;rustc_index::vec::IndexVec&lt;rustc_target::abi::VariantIdx, alloc::vec::Vec&lt;rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;&gt;&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::layout_of_struct_or_enum&lt;rustc_target::abi::VariantIdx, rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#6}, core::iter::adapters::flatten::Flatten&lt;core::option::IntoIter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexVec&lt;rustc_target::abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#7}::{closure#0}&gt;&gt;&gt;&gt;::{closure#6}&gt;, core::option::Option&lt;core::convert::Infallible&gt;&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="71.2836%" y="501" width="0.0441%" height="15" fill="rgb(238,6,4)" fg:x="1616" fg:w="1"/><text x="71.5336%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="71.2836%" y="485" width="0.0441%" height="15" fill="rgb(221,151,16)" fg:x="1616" fg:w="1"/><text x="71.5336%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_infer::traits::Obligation&lt;rustc_middle::ty::Predicate&gt;&gt; as alloc::vec::spec_extend::SpecExtend&lt;rustc_infer::traits::Obligation&lt;rustc_middle::ty::Predicate&gt;, core::iter::adapters::map::Map&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::sty::Binder&lt;rustc_middle::ty::sty::ExistentialPredicate&gt;&gt;&gt;, &lt;rustc_middle::ty::list::List&lt;rustc_middle::ty::sty::Binder&lt;rustc_middle::ty::sty::ExistentialPredicate&gt;&gt;&gt;::auto_traits::{closure#0}&gt;, core::option::IntoIter&lt;rustc_span::def_id::DefId&gt;&gt;, &lt;rustc_trait_selection::traits::wf::WfPredicates&gt;::compute::{closure#0}&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="71.3277%" y="501" width="0.0441%" height="15" fill="rgb(251,143,52)" fg:x="1617" fg:w="1"/><text x="71.5777%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::mir::BasicBlockData&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="71.3719%" y="501" width="0.0882%" height="15" fill="rgb(206,90,15)" fg:x="1618" fg:w="2"/><text x="71.6219%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::mir::BasicBlockData&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="71.4601%" y="501" width="0.0441%" height="15" fill="rgb(218,35,8)" fg:x="1620" fg:w="1"/><text x="71.7101%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;rustc_middle::mir::Statement&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.04%)</title><rect x="71.5042%" y="501" width="0.0441%" height="15" fill="rgb(239,215,6)" fg:x="1621" fg:w="1"/><text x="71.7542%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;, core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, core::option::IntoIter&lt;rustc_middle::ty::Ty&gt;&gt;&gt;, rustc_ty_utils::abi::fn_abi_new_uncached::{closure#1}&gt;, core::result::Result&lt;core::convert::Infallible, rustc_middle::ty::layout::FnAbiError&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="71.5483%" y="501" width="0.1323%" height="15" fill="rgb(245,116,39)" fg:x="1622" fg:w="3"/><text x="71.7983%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;alloc::vec::Vec&lt;rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;&gt;&gt;&gt;, &lt;rustc_index::vec::IndexVec&lt;rustc_target::abi::VariantIdx, alloc::vec::Vec&lt;rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;&gt;&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::layout_of_struct_or_enum&lt;rustc_target::abi::VariantIdx, rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#6}, core::iter::adapters::flatten::Flatten&lt;core::option::IntoIter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;&gt;, &lt;rustc_index::vec::IndexVec&lt;rustc_target::abi::VariantIdx, rustc_middle::ty::VariantDef&gt;&gt;::iter_enumerated::{closure#0}&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::discriminants::{closure#0}&gt;, rustc_ty_utils::layout::layout_of_uncached::{closure#7}::{closure#0}&gt;&gt;&gt;&gt;::{closure#6}&gt;, core::option::Option&lt;core::convert::Infallible&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="71.6806%" y="501" width="0.0441%" height="15" fill="rgb(242,65,28)" fg:x="1625" fg:w="1"/><text x="71.9306%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;, alloc::vec::into_iter::IntoIter&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;&gt;, core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::mir::Local as rustc_index::vec::Idx&gt;::new&gt;, rustc_codegen_ssa::mir::codegen_mir&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#3}&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;, &lt;alloc::vec::Vec&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;&gt;::extend_trusted&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;, alloc::vec::into_iter::IntoIter&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;&gt;, core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::mir::Local as rustc_index::vec::Idx&gt;::new&gt;, rustc_codegen_ssa::mir::codegen_mir&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#3}&gt;&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="71.7247%" y="501" width="0.0441%" height="15" fill="rgb(252,132,53)" fg:x="1626" fg:w="1"/><text x="71.9747%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::mir::Local as rustc_index::vec::Idx&gt;::new&gt;&gt;, rustc_codegen_ssa::mir::arg_local_refs&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;, &lt;alloc::vec::Vec&lt;rustc_codegen_ssa::mir::LocalRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::mir::Local as rustc_index::vec::Idx&gt;::new&gt;&gt;, rustc_codegen_ssa::mir::arg_local_refs&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="71.7689%" y="501" width="0.0441%" height="15" fill="rgb(224,159,50)" fg:x="1627" fg:w="1"/><text x="72.0189%" y="511.50"></text></g><g><title>LLVMGetParam (1 samples, 0.04%)</title><rect x="71.7689%" y="485" width="0.0441%" height="15" fill="rgb(224,93,4)" fg:x="1627" fg:w="1"/><text x="72.0189%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;(rustc_middle::mir::mono::MonoItem, (rustc_middle::mir::mono::Linkage, rustc_middle::mir::mono::Visibility))&gt;, &lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::{closure#1}&gt;&gt;, &lt;[(rustc_middle::mir::mono::MonoItem, (rustc_middle::mir::mono::Linkage, rustc_middle::mir::mono::Visibility))]&gt;::sort_by_cached_key&lt;&lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::ItemSortKey, &lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::{closure#1}&gt;::{closure#3}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;(&lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::ItemSortKey, usize), &lt;alloc::vec::Vec&lt;(&lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::ItemSortKey, usize)&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;(rustc_middle::mir::mono::MonoItem, (rustc_middle::mir::mono::Linkage, rustc_middle::mir::mono::Visibility))&gt;, &lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::{closure#1}&gt;&gt;, &lt;[(rustc_middle::mir::mono::MonoItem, (rustc_middle::mir::mono::Linkage, rustc_middle::mir::mono::Visibility))]&gt;::sort_by_cached_key&lt;&lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::ItemSortKey, &lt;rustc_middle::mir::mono::CodegenUnit&gt;::items_in_deterministic_order::{closure#1}&gt;::{closure#3}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="71.8130%" y="501" width="0.0441%" height="15" fill="rgb(208,81,34)" fg:x="1628" fg:w="1"/><text x="72.0630%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::all_fields::{closure#0}&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::needs_drop_raw::{closure#0}&gt;::{closure#0}::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_ty_utils::needs_drop::drop_tys_helper::with_query_cache&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;rustc_middle::ty::VariantDef&gt;, core::slice::iter::Iter&lt;rustc_middle::ty::FieldDef&gt;, &lt;rustc_middle::ty::adt::AdtDef&gt;::all_fields::{closure#0}&gt;, rustc_ty_utils::needs_drop::drop_tys_helper&lt;rustc_ty_utils::needs_drop::needs_drop_raw::{closure#0}&gt;::{closure#0}::{closure#0}&gt;&gt;::{closure#0}, core::result::Result&lt;alloc::vec::Vec&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::util::AlwaysRequiresDrop&gt;&gt; (1 samples, 0.04%)</title><rect x="71.8571%" y="501" width="0.0441%" height="15" fill="rgb(233,92,54)" fg:x="1629" fg:w="1"/><text x="72.1071%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::ty::sty::RegionVid as rustc_index::vec::Idx&gt;::new&gt;, &lt;rustc_data_structures::graph::scc::SccsConstruction&lt;rustc_borrowck::constraints::graph::RegionGraph&lt;rustc_borrowck::constraints::graph::Normal&gt;, rustc_borrowck::constraints::ConstraintSccIndex&gt;&gt;::construct::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_borrowck::constraints::ConstraintSccIndex, &lt;alloc::vec::Vec&lt;rustc_borrowck::constraints::ConstraintSccIndex&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;, &lt;rustc_middle::ty::sty::RegionVid as rustc_index::vec::Idx&gt;::new&gt;, &lt;rustc_data_structures::graph::scc::SccsConstruction&lt;rustc_borrowck::constraints::graph::RegionGraph&lt;rustc_borrowck::constraints::graph::Normal&gt;, rustc_borrowck::constraints::ConstraintSccIndex&gt;&gt;::construct::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="71.9012%" y="501" width="0.0441%" height="15" fill="rgb(237,21,14)" fg:x="1630" fg:w="1"/><text x="72.1512%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::mir::LocalDecl&gt;, rustc_codegen_ssa::mir::analyze::non_ssa_locals&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_codegen_ssa::mir::analyze::LocalKind, &lt;alloc::vec::Vec&lt;rustc_codegen_ssa::mir::analyze::LocalKind&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::mir::LocalDecl&gt;, rustc_codegen_ssa::mir::analyze::non_ssa_locals&lt;rustc_codegen_llvm::builder::Builder&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (4 samples, 0.18%)</title><rect x="71.9453%" y="501" width="0.1764%" height="15" fill="rgb(249,128,51)" fg:x="1631" fg:w="4"/><text x="72.1953%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::ty::closure::CapturedPlace&gt;, &lt;rustc_hir_typeck::writeback::WritebackCx&gt;::visit_min_capture_map::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::fold::&lt;(), core::iter::traits::iterator::Iterator::for_each::call&lt;rustc_middle::ty::closure::CapturedPlace, &lt;alloc::vec::Vec&lt;rustc_middle::ty::closure::CapturedPlace&gt;&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_middle::ty::closure::CapturedPlace&gt;, &lt;rustc_hir_typeck::writeback::WritebackCx&gt;::visit_min_capture_map::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="72.1217%" y="501" width="0.0441%" height="15" fill="rgb(223,129,24)" fg:x="1635" fg:w="1"/><text x="72.3717%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;rustc_middle::ty::ParamEnvAnd&lt;rustc_middle::ty::Ty&gt;, (bool, rustc_query_system::dep_graph::graph::DepNodeIndex), core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt;::insert (1 samples, 0.04%)</title><rect x="72.1659%" y="501" width="0.0441%" height="15" fill="rgb(231,168,25)" fg:x="1636" fg:w="1"/><text x="72.4159%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(&amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt;, (core::option::Option&lt;rustc_span::def_id::CrateNum&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex))&gt;&gt;::reserve_rehash::&lt;hashbrown::map::make_hasher&lt;&amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt;, &amp;rustc_middle::ty::list::List&lt;rustc_middle::ty::subst::GenericArg&gt;, (core::option::Option&lt;rustc_span::def_id::CrateNum&gt;, rustc_query_system::dep_graph::graph::DepNodeIndex), core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="72.2100%" y="501" width="0.0441%" height="15" fill="rgb(224,39,20)" fg:x="1637" fg:w="1"/><text x="72.4600%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;((rustc_middle::ty::Ty, core::option::Option&lt;rustc_target::abi::VariantIdx&gt;), rustc_codegen_llvm::context::TypeLowering)&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="72.2541%" y="501" width="0.0441%" height="15" fill="rgb(225,152,53)" fg:x="1638" fg:w="1"/><text x="72.5041%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;(rustc_middle::mir::BasicBlock, ())&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="72.2982%" y="501" width="0.0441%" height="15" fill="rgb(252,17,24)" fg:x="1639" fg:w="1"/><text x="72.5482%" y="511.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;rustc_middle::mir::interpret::AllocId, ()&gt;&gt;::insert_full (1 samples, 0.04%)</title><rect x="72.3423%" y="501" width="0.0441%" height="15" fill="rgb(250,114,30)" fg:x="1640" fg:w="1"/><text x="72.5923%" y="511.50"></text></g><g><title>&lt;libloading::os::unix::Library&gt;::open::&lt;std::path::PathBuf&gt; (1 samples, 0.04%)</title><rect x="72.3864%" y="501" width="0.0441%" height="15" fill="rgb(229,5,4)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="511.50"></text></g><g><title>dlopen (1 samples, 0.04%)</title><rect x="72.3864%" y="485" width="0.0441%" height="15" fill="rgb(225,176,49)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="495.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="469" width="0.0441%" height="15" fill="rgb(224,221,49)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="479.50"></text></g><g><title>_dl_catch_error (1 samples, 0.04%)</title><rect x="72.3864%" y="453" width="0.0441%" height="15" fill="rgb(253,169,27)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="463.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="72.3864%" y="437" width="0.0441%" height="15" fill="rgb(211,206,16)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="447.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="421" width="0.0441%" height="15" fill="rgb(244,87,35)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="431.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="405" width="0.0441%" height="15" fill="rgb(246,28,10)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="415.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="72.3864%" y="389" width="0.0441%" height="15" fill="rgb(229,12,44)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="399.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="373" width="0.0441%" height="15" fill="rgb(210,145,37)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="383.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="357" width="0.0441%" height="15" fill="rgb(227,112,52)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="367.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="341" width="0.0441%" height="15" fill="rgb(238,155,34)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="351.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="325" width="0.0441%" height="15" fill="rgb(239,226,36)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="335.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="72.3864%" y="309" width="0.0441%" height="15" fill="rgb(230,16,23)" fg:x="1641" fg:w="1"/><text x="72.6364%" y="319.50"></text></g><g><title>&lt;memmap2::unix::MmapInner as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="72.4305%" y="501" width="0.0441%" height="15" fill="rgb(236,171,36)" fg:x="1642" fg:w="1"/><text x="72.6805%" y="511.50"></text></g><g><title>__munmap (1 samples, 0.04%)</title><rect x="72.4305%" y="485" width="0.0441%" height="15" fill="rgb(221,22,14)" fg:x="1642" fg:w="1"/><text x="72.6805%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="72.4305%" y="469" width="0.0441%" height="15" fill="rgb(242,43,11)" fg:x="1642" fg:w="1"/><text x="72.6805%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="72.4305%" y="453" width="0.0441%" height="15" fill="rgb(232,69,23)" fg:x="1642" fg:w="1"/><text x="72.6805%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="72.4305%" y="437" width="0.0441%" height="15" fill="rgb(216,180,54)" fg:x="1642" fg:w="1"/><text x="72.6805%" y="447.50"></text></g><g><title>&lt;rustc_abi::ReprOptions as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.04%)</title><rect x="72.4746%" y="501" width="0.0441%" height="15" fill="rgb(216,5,24)" fg:x="1643" fg:w="1"/><text x="72.7246%" y="511.50"></text></g><g><title>&lt;rustc_ast::ast::Ty as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="72.5187%" y="501" width="0.0441%" height="15" fill="rgb(225,89,9)" fg:x="1644" fg:w="1"/><text x="72.7687%" y="511.50"></text></g><g><title>&lt;rustc_ast_lowering::LoweringContext&gt;::lower_expr_mut (2 samples, 0.09%)</title><rect x="72.5629%" y="501" width="0.0882%" height="15" fill="rgb(243,75,33)" fg:x="1645" fg:w="2"/><text x="72.8129%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="72.6070%" y="485" width="0.0441%" height="15" fill="rgb(247,141,45)" fg:x="1646" fg:w="1"/><text x="72.8570%" y="495.50"></text></g><g><title>&lt;rustc_ast_lowering::LoweringContext&gt;::lower_path_segment (1 samples, 0.04%)</title><rect x="72.6511%" y="501" width="0.0441%" height="15" fill="rgb(232,177,36)" fg:x="1647" fg:w="1"/><text x="72.9011%" y="511.50"></text></g><g><title>&lt;rustc_ast_passes::ast_validation::AstValidator as rustc_ast::visit::Visitor&gt;::visit_expr (1 samples, 0.04%)</title><rect x="72.6952%" y="501" width="0.0441%" height="15" fill="rgb(219,125,36)" fg:x="1648" fg:w="1"/><text x="72.9452%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::MirBorrowckCtxt as rustc_mir_dataflow::framework::visitor::ResultsVisitor&gt;::visit_statement_before_primary_effect (1 samples, 0.04%)</title><rect x="72.7393%" y="501" width="0.0441%" height="15" fill="rgb(227,94,9)" fg:x="1649" fg:w="1"/><text x="72.9893%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::MirBorrowckCtxt as rustc_mir_dataflow::framework::visitor::ResultsVisitor&gt;::visit_terminator_before_primary_effect (1 samples, 0.04%)</title><rect x="72.7834%" y="501" width="0.0441%" height="15" fill="rgb(240,34,52)" fg:x="1650" fg:w="1"/><text x="73.0334%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::borrow_set::BorrowSet&gt;::build (1 samples, 0.04%)</title><rect x="72.8275%" y="501" width="0.0441%" height="15" fill="rgb(216,45,12)" fg:x="1651" fg:w="1"/><text x="73.0775%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::region_infer::RegionInferenceContext&gt;::new (1 samples, 0.04%)</title><rect x="72.8716%" y="501" width="0.0441%" height="15" fill="rgb(246,21,19)" fg:x="1652" fg:w="1"/><text x="73.1216%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::type_check::TypeVerifier as rustc_middle::mir::visit::Visitor&gt;::visit_body (1 samples, 0.04%)</title><rect x="72.9157%" y="501" width="0.0441%" height="15" fill="rgb(213,98,42)" fg:x="1653" fg:w="1"/><text x="73.1657%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::type_check::TypeVerifier as rustc_middle::mir::visit::Visitor&gt;::visit_constant (2 samples, 0.09%)</title><rect x="72.9599%" y="501" width="0.0882%" height="15" fill="rgb(250,136,47)" fg:x="1654" fg:w="2"/><text x="73.2099%" y="511.50"></text></g><g><title>&lt;rustc_borrowck::used_muts::GatherUsedMutsVisitor as rustc_middle::mir::visit::Visitor&gt;::visit_body (1 samples, 0.04%)</title><rect x="73.0481%" y="501" width="0.0441%" height="15" fill="rgb(251,124,27)" fg:x="1656" fg:w="1"/><text x="73.2981%" y="511.50"></text></g><g><title>LLVMMDNodeInContext (2 samples, 0.09%)</title><rect x="73.1363%" y="485" width="0.0882%" height="15" fill="rgb(229,180,14)" fg:x="1658" fg:w="2"/><text x="73.3863%" y="495.50"></text></g><g><title>llvm::MDTuple::getImpl (1 samples, 0.04%)</title><rect x="73.1804%" y="469" width="0.0441%" height="15" fill="rgb(245,216,25)" fg:x="1659" fg:w="1"/><text x="73.4304%" y="479.50"></text></g><g><title>&lt;rustc_codegen_llvm::builder::Builder as rustc_codegen_ssa::traits::builder::BuilderMethods&gt;::load_operand (5 samples, 0.22%)</title><rect x="73.0922%" y="501" width="0.2206%" height="15" fill="rgb(251,43,5)" fg:x="1657" fg:w="5"/><text x="73.3422%" y="511.50"></text></g><g><title>LLVMSetMetadata (2 samples, 0.09%)</title><rect x="73.2245%" y="485" width="0.0882%" height="15" fill="rgb(250,128,24)" fg:x="1660" fg:w="2"/><text x="73.4745%" y="495.50"></text></g><g><title>llvm::Instruction::setMetadata (2 samples, 0.09%)</title><rect x="73.2245%" y="469" width="0.0882%" height="15" fill="rgb(217,117,27)" fg:x="1660" fg:w="2"/><text x="73.4745%" y="479.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods&gt;::dbg_scope_fn (6 samples, 0.26%)</title><rect x="73.3127%" y="501" width="0.2647%" height="15" fill="rgb(245,147,4)" fg:x="1662" fg:w="6"/><text x="73.5627%" y="511.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods&gt;::dbg_scope_fn::get_containing_scope (2 samples, 0.09%)</title><rect x="73.5774%" y="501" width="0.0882%" height="15" fill="rgb(242,201,35)" fg:x="1668" fg:w="2"/><text x="73.8274%" y="511.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::debuginfo::DebugInfoMethods&gt;::dbg_scope_fn (2 samples, 0.09%)</title><rect x="73.6656%" y="501" width="0.0882%" height="15" fill="rgb(218,181,1)" fg:x="1670" fg:w="2"/><text x="73.9156%" y="511.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="73.6656%" y="485" width="0.0882%" height="15" fill="rgb(222,6,29)" fg:x="1670" fg:w="2"/><text x="73.9156%" y="495.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::declare::PreDefineMethods&gt;::predefine_fn (1 samples, 0.04%)</title><rect x="73.7539%" y="501" width="0.0441%" height="15" fill="rgb(208,186,3)" fg:x="1672" fg:w="1"/><text x="74.0039%" y="511.50"></text></g><g><title>&lt;rustc_codegen_llvm::context::CodegenCx as rustc_codegen_ssa::traits::type_::DerivedTypeMethods&gt;::type_has_metadata (2 samples, 0.09%)</title><rect x="73.7980%" y="501" width="0.0882%" height="15" fill="rgb(216,36,26)" fg:x="1673" fg:w="2"/><text x="74.0480%" y="511.50"></text></g><g><title>LLVMConstInt (1 samples, 0.04%)</title><rect x="74.8125%" y="485" width="0.0441%" height="15" fill="rgb(248,201,23)" fg:x="1696" fg:w="1"/><text x="75.0625%" y="495.50"></text></g><g><title>&lt;rustc_codegen_ssa::mir::FunctionCx&lt;rustc_codegen_llvm::builder::Builder&gt;&gt;::codegen_block (26 samples, 1.15%)</title><rect x="73.8862%" y="501" width="1.1469%" height="15" fill="rgb(251,170,31)" fg:x="1675" fg:w="26"/><text x="74.1362%" y="511.50"></text></g><g><title>llvm::MetadataAsValue::get (4 samples, 0.18%)</title><rect x="74.8566%" y="485" width="0.1764%" height="15" fill="rgb(207,110,25)" fg:x="1697" fg:w="4"/><text x="75.1066%" y="495.50"></text></g><g><title>llvm::MetadataAsValue::MetadataAsValue (2 samples, 0.09%)</title><rect x="74.9449%" y="469" width="0.0882%" height="15" fill="rgb(250,54,15)" fg:x="1699" fg:w="2"/><text x="75.1949%" y="479.50"></text></g><g><title>&lt;rustc_codegen_ssa::mir::FunctionCx&lt;rustc_codegen_llvm::builder::Builder&gt;&gt;::codegen_intrinsic_call::{closure#0} (1 samples, 0.04%)</title><rect x="75.0331%" y="501" width="0.0441%" height="15" fill="rgb(227,68,33)" fg:x="1701" fg:w="1"/><text x="75.2831%" y="511.50"></text></g><g><title>&lt;rustc_codegen_ssa::mir::FunctionCx&lt;rustc_codegen_llvm::builder::Builder&gt;&gt;::codegen_place (1 samples, 0.04%)</title><rect x="75.0772%" y="501" width="0.0441%" height="15" fill="rgb(238,34,41)" fg:x="1702" fg:w="1"/><text x="75.3272%" y="511.50"></text></g><g><title>&lt;rustc_codegen_ssa::mir::place::PlaceRef&lt;&amp;rustc_codegen_llvm::llvm_::ffi::Value&gt;&gt;::project_field::&lt;rustc_codegen_llvm::builder::Builder&gt; (2 samples, 0.09%)</title><rect x="75.1213%" y="501" width="0.0882%" height="15" fill="rgb(220,11,15)" fg:x="1703" fg:w="2"/><text x="75.3713%" y="511.50"></text></g><g><title>LLVMBuildStructGEP2 (1 samples, 0.04%)</title><rect x="75.1654%" y="485" width="0.0441%" height="15" fill="rgb(246,111,35)" fg:x="1704" fg:w="1"/><text x="75.4154%" y="495.50"></text></g><g><title>llvm::ConstantInt::get (1 samples, 0.04%)</title><rect x="75.1654%" y="469" width="0.0441%" height="15" fill="rgb(209,88,53)" fg:x="1704" fg:w="1"/><text x="75.4154%" y="479.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::copy_op_no_validate (1 samples, 0.04%)</title><rect x="75.2095%" y="501" width="0.0441%" height="15" fill="rgb(231,185,47)" fg:x="1705" fg:w="1"/><text x="75.4595%" y="511.50"></text></g><g><title>&lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::statement (1 samples, 0.04%)</title><rect x="75.2536%" y="501" width="0.0441%" height="15" fill="rgb(233,154,1)" fg:x="1706" fg:w="1"/><text x="75.5036%" y="511.50"></text></g><g><title>&lt;rustc_const_eval::interpret::intern::InternVisitor&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt; as rustc_const_eval::interpret::visitor::ValueVisitor&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::walk_aggregate::&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;u64&gt;, &lt;rustc_const_eval::interpret::eval_context::InterpCx&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::operand_array_fields::{closure#0}&gt;, &lt;rustc_const_eval::interpret::intern::InternVisitor&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt; as rustc_const_eval::interpret::visitor::ValueVisitor&lt;rustc_const_eval::const_eval::machine::CompileTimeInterpreter&gt;&gt;::walk_value::{closure#1}&gt;&gt; (1 samples, 0.04%)</title><rect x="75.2978%" y="501" width="0.0441%" height="15" fill="rgb(225,15,46)" fg:x="1707" fg:w="1"/><text x="75.5478%" y="511.50"></text></g><g><title>&lt;rustc_const_eval::interpret::validity::ValidityVisitor&lt;rustc_mir_transform::const_prop::ConstPropMachine&gt;&gt;::try_visit_primitive (1 samples, 0.04%)</title><rect x="75.3419%" y="501" width="0.0441%" height="15" fill="rgb(211,135,41)" fg:x="1708" fg:w="1"/><text x="75.5919%" y="511.50"></text></g><g><title>&lt;rustc_const_eval::transform::check_consts::resolver::FlowSensitiveAnalysis&lt;rustc_const_eval::transform::check_consts::qualifs::CustomEq&gt; as rustc_mir_dataflow::framework::Analysis&gt;::apply_statement_effect (1 samples, 0.04%)</title><rect x="75.3860%" y="501" width="0.0441%" height="15" fill="rgb(208,54,0)" fg:x="1709" fg:w="1"/><text x="75.6360%" y="511.50"></text></g><g><title>&lt;rustc_data_structures::graph::iterate::TriColorDepthFirstSearch&lt;rustc_middle::mir::basic_blocks::BasicBlocks&gt;&gt;::run_from_start::&lt;rustc_data_structures::graph::iterate::CycleDetector&gt; (1 samples, 0.04%)</title><rect x="75.4301%" y="501" width="0.0441%" height="15" fill="rgb(244,136,14)" fg:x="1710" fg:w="1"/><text x="75.6801%" y="511.50"></text></g><g><title>&lt;rustc_data_structures::intern::Interned&lt;rustc_type_ir::ty_info::WithCachedTypeInfo&lt;rustc_type_ir::sty::TyKind&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.04%)</title><rect x="75.4742%" y="501" width="0.0441%" height="15" fill="rgb(241,56,14)" fg:x="1711" fg:w="1"/><text x="75.7242%" y="511.50"></text></g><g><title>&lt;rustc_data_structures::obligation_forest::ObligationForest&lt;rustc_trait_selection::traits::fulfill::PendingPredicateObligation&gt;&gt;::process_obligations::&lt;rustc_trait_selection::traits::fulfill::FulfillProcessor&gt; (2 samples, 0.09%)</title><rect x="75.5183%" y="501" width="0.0882%" height="15" fill="rgb(205,80,24)" fg:x="1712" fg:w="2"/><text x="75.7683%" y="511.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::short_write_process_buffer::&lt;8&gt; (2 samples, 0.09%)</title><rect x="75.6065%" y="501" width="0.0882%" height="15" fill="rgb(220,57,4)" fg:x="1714" fg:w="2"/><text x="75.8565%" y="511.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::slice_write_process_buffer (1 samples, 0.04%)</title><rect x="75.6948%" y="501" width="0.0441%" height="15" fill="rgb(226,193,50)" fg:x="1716" fg:w="1"/><text x="75.9448%" y="511.50"></text></g><g><title>&lt;rustc_data_structures::small_c_str::SmallCStr&gt;::new (1 samples, 0.04%)</title><rect x="75.7389%" y="501" width="0.0441%" height="15" fill="rgb(231,168,22)" fg:x="1717" fg:w="1"/><text x="75.9889%" y="511.50"></text></g><g><title>&lt;rustc_expand::mbe::macro_parser::TtParser&gt;::parse_tt::&lt;rustc_expand::mbe::macro_rules::NoopTracker&gt; (1 samples, 0.04%)</title><rect x="75.7830%" y="501" width="0.0441%" height="15" fill="rgb(254,215,14)" fg:x="1718" fg:w="1"/><text x="76.0330%" y="511.50"></text></g><g><title>&lt;rustc_expand::mbe::macro_rules::FirstSets&gt;::new::build_recur (1 samples, 0.04%)</title><rect x="75.8271%" y="501" width="0.0441%" height="15" fill="rgb(211,115,16)" fg:x="1719" fg:w="1"/><text x="76.0771%" y="511.50"></text></g><g><title>&lt;rustc_expand::placeholders::PlaceholderExpander as rustc_ast::mut_visit::MutVisitor&gt;::visit_ty (1 samples, 0.04%)</title><rect x="75.8712%" y="501" width="0.0441%" height="15" fill="rgb(236,210,16)" fg:x="1720" fg:w="1"/><text x="76.1212%" y="511.50"></text></g><g><title>&lt;rustc_hir_analysis::collect::lifetimes::LifetimeContext as rustc_hir::intravisit::Visitor&gt;::visit_pat (1 samples, 0.04%)</title><rect x="75.9153%" y="501" width="0.0441%" height="15" fill="rgb(221,94,12)" fg:x="1721" fg:w="1"/><text x="76.1653%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::coercion::Coerce&gt;::coerce (1 samples, 0.04%)</title><rect x="75.9594%" y="501" width="0.0441%" height="15" fill="rgb(235,218,49)" fg:x="1722" fg:w="1"/><text x="76.2094%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::coercion::Coerce&gt;::coerce_unsized (2 samples, 0.09%)</title><rect x="76.0035%" y="501" width="0.0882%" height="15" fill="rgb(217,114,14)" fg:x="1723" fg:w="2"/><text x="76.2535%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_argument_types (1 samples, 0.04%)</title><rect x="76.0918%" y="501" width="0.0441%" height="15" fill="rgb(216,145,22)" fg:x="1725" fg:w="1"/><text x="76.3418%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_call (1 samples, 0.04%)</title><rect x="76.1359%" y="501" width="0.0441%" height="15" fill="rgb(217,112,39)" fg:x="1726" fg:w="1"/><text x="76.3859%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::check_expr_path (2 samples, 0.09%)</title><rect x="76.1800%" y="501" width="0.0882%" height="15" fill="rgb(225,85,32)" fg:x="1727" fg:w="2"/><text x="76.4300%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::require_type_is_sized (1 samples, 0.04%)</title><rect x="76.2682%" y="501" width="0.0441%" height="15" fill="rgb(245,209,47)" fg:x="1729" fg:w="1"/><text x="76.5182%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::fn_ctxt::FnCtxt&gt;::resolve_lang_item_path (1 samples, 0.04%)</title><rect x="76.3123%" y="501" width="0.0441%" height="15" fill="rgb(218,220,15)" fg:x="1730" fg:w="1"/><text x="76.5623%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::method::probe::ProbeContext&gt;::assemble_inherent_impl_candidates_for_type (1 samples, 0.04%)</title><rect x="76.3564%" y="501" width="0.0441%" height="15" fill="rgb(222,202,31)" fg:x="1731" fg:w="1"/><text x="76.6064%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::writeback::WritebackCx as rustc_hir::intravisit::Visitor&gt;::visit_expr (2 samples, 0.09%)</title><rect x="76.4005%" y="501" width="0.0882%" height="15" fill="rgb(243,203,4)" fg:x="1732" fg:w="2"/><text x="76.6505%" y="511.50"></text></g><g><title>&lt;rustc_hir_typeck::writeback::WritebackCx as rustc_hir::intravisit::Visitor&gt;::visit_ty (1 samples, 0.04%)</title><rect x="76.4888%" y="501" width="0.0441%" height="15" fill="rgb(237,92,17)" fg:x="1734" fg:w="1"/><text x="76.7388%" y="511.50"></text></g><g><title>&lt;rustc_index::bit_set::ChunkedBitSet&lt;rustc_middle::mir::Local&gt;&gt;::remove (1 samples, 0.04%)</title><rect x="76.5329%" y="501" width="0.0441%" height="15" fill="rgb(231,119,7)" fg:x="1735" fg:w="1"/><text x="76.7829%" y="511.50"></text></g><g><title>&lt;rustc_index::bit_set::ChunkedBitSet&lt;rustc_mir_dataflow::move_paths::InitIndex&gt; as rustc_mir_dataflow::framework::lattice::JoinSemiLattice&gt;::join (1 samples, 0.04%)</title><rect x="76.5770%" y="501" width="0.0441%" height="15" fill="rgb(237,82,41)" fg:x="1736" fg:w="1"/><text x="76.8270%" y="511.50"></text></g><g><title>&lt;rustc_index::vec::IndexVec&lt;rustc_target::abi::VariantIdx, rustc_middle::ty::VariantDef&gt; as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (11 samples, 0.49%)</title><rect x="76.6211%" y="501" width="0.4852%" height="15" fill="rgb(226,81,48)" fg:x="1737" fg:w="11"/><text x="76.8711%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt&gt;::predicate_may_hold (1 samples, 0.04%)</title><rect x="77.1063%" y="501" width="0.0441%" height="15" fill="rgb(234,70,51)" fg:x="1748" fg:w="1"/><text x="77.3563%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt&gt;::predicate_must_hold_modulo_regions (1 samples, 0.04%)</title><rect x="77.1504%" y="501" width="0.0441%" height="15" fill="rgb(251,86,4)" fg:x="1749" fg:w="1"/><text x="77.4004%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::commit_if_ok::&lt;rustc_infer::infer::InferOk&lt;rustc_middle::ty::Ty&gt;, rustc_middle::ty::error::TypeError, &lt;rustc_hir_typeck::coercion::Coerce&gt;::unify::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="77.1945%" y="501" width="0.0441%" height="15" fill="rgb(244,144,28)" fg:x="1750" fg:w="1"/><text x="77.4445%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::freshen::&lt;rustc_middle::ty::sty::Binder&lt;rustc_middle::ty::TraitPredicate&gt;&gt; (1 samples, 0.04%)</title><rect x="77.2386%" y="501" width="0.0441%" height="15" fill="rgb(232,161,39)" fg:x="1751" fg:w="1"/><text x="77.4886%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::instantiate_nll_query_response_and_region_obligations::&lt;alloc::vec::Vec&lt;rustc_middle::traits::query::OutlivesBound&gt;&gt; (1 samples, 0.04%)</title><rect x="77.2828%" y="501" width="0.0441%" height="15" fill="rgb(247,34,51)" fg:x="1752" fg:w="1"/><text x="77.5328%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::make_canonicalized_query_response::&lt;rustc_middle::traits::query::NormalizationResult&gt; (2 samples, 0.09%)</title><rect x="77.3269%" y="501" width="0.0882%" height="15" fill="rgb(225,132,2)" fg:x="1753" fg:w="2"/><text x="77.5769%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::probe::&lt;(), &lt;rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates_from_impls::{closure#0}::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="77.4151%" y="501" width="0.0441%" height="15" fill="rgb(209,159,44)" fg:x="1755" fg:w="1"/><text x="77.6651%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::rollback_to (1 samples, 0.04%)</title><rect x="77.4592%" y="501" width="0.0441%" height="15" fill="rgb(251,214,1)" fg:x="1756" fg:w="1"/><text x="77.7092%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxt&gt;::var_for_def (1 samples, 0.04%)</title><rect x="77.5033%" y="501" width="0.0441%" height="15" fill="rgb(247,84,47)" fg:x="1757" fg:w="1"/><text x="77.7533%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxtBuilder as rustc_trait_selection::infer::InferCtxtBuilderExt&gt;::enter_canonical_trait_query::&lt;rustc_middle::ty::ParamEnvAnd&lt;rustc_middle::traits::query::type_op::ProvePredicate&gt;, (), rustc_traits::type_op::type_op_prove_predicate::{closure#0}&gt; (2 samples, 0.09%)</title><rect x="77.5474%" y="501" width="0.0882%" height="15" fill="rgb(240,111,43)" fg:x="1758" fg:w="2"/><text x="77.7974%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="77.5915%" y="485" width="0.0441%" height="15" fill="rgb(215,214,35)" fg:x="1759" fg:w="1"/><text x="77.8415%" y="495.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxtBuilder as rustc_trait_selection::infer::InferCtxtBuilderExt&gt;::enter_canonical_trait_query::&lt;rustc_middle::ty::ParamEnvAnd&lt;rustc_middle::ty::Ty&gt;, rustc_middle::traits::query::DropckOutlivesResult, rustc_traits::dropck_outlives::dropck_outlives::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="77.6356%" y="501" width="0.0441%" height="15" fill="rgb(248,207,23)" fg:x="1760" fg:w="1"/><text x="77.8856%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="77.6356%" y="485" width="0.0441%" height="15" fill="rgb(214,186,4)" fg:x="1760" fg:w="1"/><text x="77.8856%" y="495.50"></text></g><g><title>&lt;rustc_infer::infer::InferCtxtBuilder&gt;::build (1 samples, 0.04%)</title><rect x="77.6798%" y="501" width="0.0441%" height="15" fill="rgb(220,133,22)" fg:x="1761" fg:w="1"/><text x="77.9298%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::at::At as rustc_trait_selection::traits::project::NormalizeExt&gt;::normalize::&lt;rustc_middle::ty::sty::FnSig&gt; (1 samples, 0.04%)</title><rect x="77.7239%" y="501" width="0.0441%" height="15" fill="rgb(239,134,19)" fg:x="1762" fg:w="1"/><text x="77.9739%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::at::At&gt;::sup::&lt;rustc_middle::ty::sty::Binder&lt;rustc_middle::ty::sty::TraitRef&gt;&gt; (1 samples, 0.04%)</title><rect x="77.7680%" y="501" width="0.0441%" height="15" fill="rgb(250,140,9)" fg:x="1763" fg:w="1"/><text x="78.0180%" y="511.50"></text></g><g><title>&lt;rustc_infer::infer::equate::Equate as rustc_middle::ty::relate::TypeRelation&gt;::tys (2 samples, 0.09%)</title><rect x="77.8121%" y="501" width="0.0882%" height="15" fill="rgb(225,59,14)" fg:x="1764" fg:w="2"/><text x="78.0621%" y="511.50"></text></g><g><title>&lt;rustc_lint::unused::UnusedParens as rustc_lint::unused::UnusedDelimLint&gt;::check_expr (1 samples, 0.04%)</title><rect x="77.9003%" y="501" width="0.0441%" height="15" fill="rgb(214,152,51)" fg:x="1766" fg:w="1"/><text x="78.1503%" y="511.50"></text></g><g><title>&lt;rustc_metadata::creader::CStore as rustc_session::cstore::CrateStore&gt;::def_key (1 samples, 0.04%)</title><rect x="77.9444%" y="501" width="0.0441%" height="15" fill="rgb(251,227,43)" fg:x="1767" fg:w="1"/><text x="78.1944%" y="511.50"></text></g><g><title>&lt;rustc_metadata::creader::CrateMetadataRef&gt;::get_incoherent_impls (1 samples, 0.04%)</title><rect x="77.9885%" y="501" width="0.0441%" height="15" fill="rgb(241,96,17)" fg:x="1768" fg:w="1"/><text x="78.2385%" y="511.50"></text></g><g><title>&lt;rustc_metadata::locator::CrateLocator&gt;::find_library_crate (4 samples, 0.18%)</title><rect x="78.0326%" y="501" width="0.1764%" height="15" fill="rgb(234,198,43)" fg:x="1769" fg:w="4"/><text x="78.2826%" y="511.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="78.1209%" y="485" width="0.0882%" height="15" fill="rgb(220,108,29)" fg:x="1771" fg:w="2"/><text x="78.3709%" y="495.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, rustc_hir::def::DefKind&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef, 1&gt; (1 samples, 0.04%)</title><rect x="78.2091%" y="501" width="0.0441%" height="15" fill="rgb(226,163,33)" fg:x="1773" fg:w="1"/><text x="78.4591%" y="511.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, rustc_metadata::rmeta::LazyArray&lt;(rustc_middle::ty::Clause, rustc_span::span_encoding::Span)&gt;&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef, 8&gt; (1 samples, 0.04%)</title><rect x="78.2532%" y="501" width="0.0441%" height="15" fill="rgb(205,194,45)" fg:x="1774" fg:w="1"/><text x="78.5032%" y="511.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, rustc_metadata::rmeta::LazyValue&lt;rustc_hir::definitions::DefKey&gt;&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef, 4&gt; (8 samples, 0.35%)</title><rect x="78.2973%" y="501" width="0.3529%" height="15" fill="rgb(206,143,44)" fg:x="1775" fg:w="8"/><text x="78.5473%" y="511.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, rustc_metadata::rmeta::RawDefId&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef, 8&gt; (2 samples, 0.09%)</title><rect x="78.6502%" y="501" width="0.0882%" height="15" fill="rgb(236,136,36)" fg:x="1783" fg:w="2"/><text x="78.9002%" y="511.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, rustc_middle::ty::ImplPolarity&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef, 1&gt; (1 samples, 0.04%)</title><rect x="78.7384%" y="501" width="0.0441%" height="15" fill="rgb(249,172,42)" fg:x="1785" fg:w="1"/><text x="78.9884%" y="511.50"></text></g><g><title>&lt;rustc_metadata::rmeta::LazyTable&lt;rustc_span::def_id::DefIndex, rustc_span::def_id::DefPathHash&gt;&gt;::get::&lt;rustc_metadata::creader::CrateMetadataRef, 16&gt; (2 samples, 0.09%)</title><rect x="78.7825%" y="501" width="0.0882%" height="15" fill="rgb(216,139,23)" fg:x="1786" fg:w="2"/><text x="79.0325%" y="511.50"></text></g><g><title>&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;::read_lazy_array::&lt;rustc_span::def_id::DefIndex&gt; (2 samples, 0.09%)</title><rect x="78.8708%" y="501" width="0.0882%" height="15" fill="rgb(207,166,20)" fg:x="1788" fg:w="2"/><text x="79.1208%" y="511.50"></text></g><g><title>&lt;rustc_metadata::rmeta::def_path_hash_map::DefPathHashMapRef as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.04%)</title><rect x="78.9590%" y="501" width="0.0441%" height="15" fill="rgb(210,209,22)" fg:x="1790" fg:w="1"/><text x="79.2090%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="78.9590%" y="485" width="0.0441%" height="15" fill="rgb(232,118,20)" fg:x="1790" fg:w="1"/><text x="79.2090%" y="495.50"></text></g><g><title>&lt;rustc_middle::arena::Arena&gt;::alloc_from_iter::&lt;(rustc_span::def_id::DefId, core::option::Option&lt;rustc_middle::ty::fast_reject::SimplifiedType&gt;), rustc_arena::IsCopy, core::iter::adapters::map::Map&lt;rustc_metadata::rmeta::decoder::DecodeIterator&lt;(rustc_span::def_id::DefIndex, core::option::Option&lt;rustc_middle::ty::fast_reject::SimplifiedType&gt;)&gt;, &lt;rustc_metadata::creader::CrateMetadataRef&gt;::get_implementations_of_trait::{closure#0}&gt;&gt; (1 samples, 0.04%)</title><rect x="79.0031%" y="501" width="0.0441%" height="15" fill="rgb(238,113,42)" fg:x="1791" fg:w="1"/><text x="79.2531%" y="511.50"></text></g><g><title>&lt;rustc_middle::hir::map::ItemCollector as rustc_hir::intravisit::Visitor&gt;::visit_expr (1 samples, 0.04%)</title><rect x="79.0472%" y="501" width="0.0441%" height="15" fill="rgb(231,42,5)" fg:x="1792" fg:w="1"/><text x="79.2972%" y="511.50"></text></g><g><title>&lt;rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrs as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.04%)</title><rect x="79.0913%" y="501" width="0.0441%" height="15" fill="rgb(243,166,24)" fg:x="1793" fg:w="1"/><text x="79.3413%" y="511.50"></text></g><g><title>&lt;rustc_middle::mir::patch::MirPatch&gt;::apply (1 samples, 0.04%)</title><rect x="79.1354%" y="501" width="0.0441%" height="15" fill="rgb(237,226,12)" fg:x="1794" fg:w="1"/><text x="79.3854%" y="511.50"></text></g><g><title>&lt;rustc_middle::mir::syntax::TerminatorKind as rustc_middle::ty::fold::TypeFoldable&gt;::try_fold_with::&lt;rustc_middle::ty::subst::SubstFolder&gt; (1 samples, 0.04%)</title><rect x="79.1795%" y="501" width="0.0441%" height="15" fill="rgb(229,133,24)" fg:x="1795" fg:w="1"/><text x="79.4295%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::ParamEnvAnd&lt;rustc_middle::traits::query::type_op::ProvePredicate&gt; as rustc_trait_selection::traits::query::type_op::TypeOp&gt;::fully_perform (2 samples, 0.09%)</title><rect x="79.2236%" y="501" width="0.0882%" height="15" fill="rgb(238,33,43)" fg:x="1796" fg:w="2"/><text x="79.4736%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeFoldable&gt;::try_fold_with::&lt;rustc_middle::ty::subst::SubstFolder&gt; (3 samples, 0.13%)</title><rect x="79.3119%" y="501" width="0.1323%" height="15" fill="rgb(227,59,38)" fg:x="1798" fg:w="3"/><text x="79.5619%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeSuperFoldable&gt;::super_fold_with::&lt;rustc_infer::infer::resolve::OpportunisticVarResolver&gt; (1 samples, 0.04%)</title><rect x="79.4442%" y="501" width="0.0441%" height="15" fill="rgb(230,97,0)" fg:x="1801" fg:w="1"/><text x="79.6942%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeSuperFoldable&gt;::super_fold_with::&lt;rustc_middle::ty::fold::BoundVarReplacer&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::anonymize_bound_vars::Anonymize&gt;&gt; (1 samples, 0.04%)</title><rect x="79.4883%" y="501" width="0.0441%" height="15" fill="rgb(250,173,50)" fg:x="1802" fg:w="1"/><text x="79.7383%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeSuperFoldable&gt;::super_fold_with::&lt;rustc_middle::ty::fold::BoundVarReplacer&lt;rustc_middle::ty::fold::FnMutDelegate&gt;&gt; (1 samples, 0.04%)</title><rect x="79.5324%" y="501" width="0.0441%" height="15" fill="rgb(240,15,50)" fg:x="1803" fg:w="1"/><text x="79.7824%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeSuperFoldable&gt;::super_fold_with::&lt;rustc_middle::ty::subst::SubstFolder&gt; (4 samples, 0.18%)</title><rect x="79.5765%" y="501" width="0.1764%" height="15" fill="rgb(221,93,22)" fg:x="1804" fg:w="4"/><text x="79.8265%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (11 samples, 0.49%)</title><rect x="79.7530%" y="501" width="0.4852%" height="15" fill="rgb(245,180,53)" fg:x="1808" fg:w="11"/><text x="80.0030%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_target::abi::TyAbiInterface&lt;_&gt;&gt;::ty_and_layout_field::field_ty_or_layout::&lt;rustc_codegen_llvm::context::CodegenCx&gt; (2 samples, 0.09%)</title><rect x="80.2382%" y="501" width="0.0882%" height="15" fill="rgb(231,88,51)" fg:x="1819" fg:w="2"/><text x="80.4882%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_target::abi::TyAbiInterface&lt;rustc_codegen_llvm::context::CodegenCx&gt;&gt;::ty_and_layout_pointee_info_at (1 samples, 0.04%)</title><rect x="80.3264%" y="501" width="0.0441%" height="15" fill="rgb(240,58,21)" fg:x="1821" fg:w="1"/><text x="80.5764%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_target::abi::TyAbiInterface&lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt;&gt;&gt;::ty_and_layout_pointee_info_at (1 samples, 0.04%)</title><rect x="80.3705%" y="501" width="0.0441%" height="15" fill="rgb(237,21,10)" fg:x="1822" fg:w="1"/><text x="80.6205%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty&gt;::fn_sig (2 samples, 0.09%)</title><rect x="80.4146%" y="501" width="0.0882%" height="15" fill="rgb(218,43,11)" fg:x="1823" fg:w="2"/><text x="80.6646%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_predicate (5 samples, 0.22%)</title><rect x="80.5029%" y="501" width="0.2206%" height="15" fill="rgb(218,221,29)" fg:x="1825" fg:w="5"/><text x="80.7529%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::CtxtInterners&gt;::intern_ty (18 samples, 0.79%)</title><rect x="80.7234%" y="501" width="0.7940%" height="15" fill="rgb(214,118,42)" fg:x="1830" fg:w="18"/><text x="80.9734%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::for_each_relevant_impl::&lt;&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates_from_impls::{closure#0}&gt; (2 samples, 0.09%)</title><rect x="81.5174%" y="501" width="0.0882%" height="15" fill="rgb(251,200,26)" fg:x="1848" fg:w="2"/><text x="81.7674%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::intern_place_elems (1 samples, 0.04%)</title><rect x="81.6056%" y="501" width="0.0441%" height="15" fill="rgb(237,101,39)" fg:x="1850" fg:w="1"/><text x="81.8556%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::intern_poly_existential_predicates (1 samples, 0.04%)</title><rect x="81.6498%" y="501" width="0.0441%" height="15" fill="rgb(251,117,11)" fg:x="1851" fg:w="1"/><text x="81.8998%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::intern_substs (1 samples, 0.04%)</title><rect x="81.6939%" y="501" width="0.0441%" height="15" fill="rgb(216,223,23)" fg:x="1852" fg:w="1"/><text x="81.9439%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::layout_scalar_valid_range (2 samples, 0.09%)</title><rect x="81.7380%" y="501" width="0.0882%" height="15" fill="rgb(251,54,12)" fg:x="1853" fg:w="2"/><text x="81.9880%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::mk_region (1 samples, 0.04%)</title><rect x="81.8262%" y="501" width="0.0441%" height="15" fill="rgb(254,176,54)" fg:x="1855" fg:w="1"/><text x="82.0762%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::mk_substs::&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::subst::GenericArg&gt;&gt;, core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::subst::GenericArg&gt;&gt;&gt;, rustc_middle::ty::relate::relate_substs&lt;rustc_infer::infer::equate::Equate&gt;::{closure#0}&gt;&gt; (1 samples, 0.04%)</title><rect x="81.8703%" y="501" width="0.0441%" height="15" fill="rgb(210,32,8)" fg:x="1856" fg:w="1"/><text x="82.1203%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::opt_item_name (1 samples, 0.04%)</title><rect x="81.9144%" y="501" width="0.0441%" height="15" fill="rgb(235,52,38)" fg:x="1857" fg:w="1"/><text x="82.1644%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::trait_of_item (1 samples, 0.04%)</title><rect x="81.9585%" y="501" width="0.0441%" height="15" fill="rgb(231,4,44)" fg:x="1858" fg:w="1"/><text x="82.2085%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::context::TyCtxt&gt;::try_subst_and_normalize_erasing_regions::&lt;rustc_middle::mir::ConstantKind&gt; (1 samples, 0.04%)</title><rect x="82.0026%" y="501" width="0.0441%" height="15" fill="rgb(249,2,32)" fg:x="1859" fg:w="1"/><text x="82.2526%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::erase_regions::RegionEraserVisitor as rustc_middle::ty::fold::TypeFolder&gt;::fold_ty (1 samples, 0.04%)</title><rect x="82.0468%" y="501" width="0.0441%" height="15" fill="rgb(224,65,26)" fg:x="1860" fg:w="1"/><text x="82.2968%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::fast_reject::DeepRejectCtxt&gt;::types_may_unify (1 samples, 0.04%)</title><rect x="82.0909%" y="501" width="0.0441%" height="15" fill="rgb(250,73,40)" fg:x="1861" fg:w="1"/><text x="82.3409%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::flags::FlagComputation&gt;::for_kind (1 samples, 0.04%)</title><rect x="82.1350%" y="501" width="0.0441%" height="15" fill="rgb(253,177,16)" fg:x="1862" fg:w="1"/><text x="82.3850%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::fold::BoundVarReplacer&lt;&lt;rustc_middle::ty::context::TyCtxt&gt;::anonymize_bound_vars::Anonymize&gt; as rustc_middle::ty::fold::FallibleTypeFolder&gt;::try_fold_ty (1 samples, 0.04%)</title><rect x="82.1791%" y="501" width="0.0441%" height="15" fill="rgb(217,32,34)" fg:x="1863" fg:w="1"/><text x="82.4291%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::fold::RegionFolder as rustc_middle::ty::fold::FallibleTypeFolder&gt;::try_fold_ty (1 samples, 0.04%)</title><rect x="82.2232%" y="501" width="0.0441%" height="15" fill="rgb(212,7,10)" fg:x="1864" fg:w="1"/><text x="82.4732%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve (1 samples, 0.04%)</title><rect x="82.2673%" y="501" width="0.0441%" height="15" fill="rgb(245,89,8)" fg:x="1865" fg:w="1"/><text x="82.5173%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::instance::Instance&gt;::resolve_drop_in_place (2 samples, 0.09%)</title><rect x="82.3114%" y="501" width="0.0882%" height="15" fill="rgb(237,16,53)" fg:x="1866" fg:w="2"/><text x="82.5614%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::layout::LayoutCx&lt;rustc_middle::ty::context::TyCtxt&gt; as rustc_abi::layout::LayoutCalculator&gt;::univariant::&lt;rustc_target::abi::VariantIdx, rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;&gt; (1 samples, 0.04%)</title><rect x="82.3996%" y="501" width="0.0441%" height="15" fill="rgb(250,204,30)" fg:x="1868" fg:w="1"/><text x="82.6496%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::sty::AliasTy as rustc_infer::infer::at::ToTrace&gt;::to_trace (1 samples, 0.04%)</title><rect x="82.4438%" y="501" width="0.0441%" height="15" fill="rgb(208,77,27)" fg:x="1869" fg:w="1"/><text x="82.6938%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::sty::BoundVariableKind as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (1 samples, 0.04%)</title><rect x="82.4879%" y="501" width="0.0441%" height="15" fill="rgb(250,204,28)" fg:x="1870" fg:w="1"/><text x="82.7379%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::sty::ExistentialPredicate&gt;::stable_cmp (1 samples, 0.04%)</title><rect x="82.5320%" y="501" width="0.0441%" height="15" fill="rgb(244,63,21)" fg:x="1871" fg:w="1"/><text x="82.7820%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::FallibleTypeFolder&gt;::try_fold_ty (1 samples, 0.04%)</title><rect x="82.5761%" y="501" width="0.0441%" height="15" fill="rgb(236,85,44)" fg:x="1872" fg:w="1"/><text x="82.8261%" y="511.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::build_binary_op (1 samples, 0.04%)</title><rect x="82.6202%" y="501" width="0.0441%" height="15" fill="rgb(215,98,4)" fg:x="1873" fg:w="1"/><text x="82.8702%" y="511.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::build_exit_tree (1 samples, 0.04%)</title><rect x="82.6643%" y="501" width="0.0441%" height="15" fill="rgb(235,38,11)" fg:x="1874" fg:w="1"/><text x="82.9143%" y="511.50"></text></g><g><title>&lt;rustc_mir_build::build::Builder&gt;::schedule_drop_for_binding (1 samples, 0.04%)</title><rect x="82.7084%" y="501" width="0.0441%" height="15" fill="rgb(254,186,25)" fg:x="1875" fg:w="1"/><text x="82.9584%" y="511.50"></text></g><g><title>&lt;rustc_mir_build::thir::cx::Cx&gt;::mirror_expr_inner (1 samples, 0.04%)</title><rect x="82.7525%" y="501" width="0.0441%" height="15" fill="rgb(225,55,31)" fg:x="1876" fg:w="1"/><text x="83.0025%" y="511.50"></text></g><g><title>&lt;rustc_mir_build::thir::cx::Cx&gt;::overloaded_place (1 samples, 0.04%)</title><rect x="82.7966%" y="501" width="0.0441%" height="15" fill="rgb(211,15,21)" fg:x="1877" fg:w="1"/><text x="83.0466%" y="511.50"></text></g><g><title>&lt;rustc_mir_build::thir::pattern::PatCtxt&gt;::lower_pattern (1 samples, 0.04%)</title><rect x="82.8408%" y="501" width="0.0441%" height="15" fill="rgb(215,187,41)" fg:x="1878" fg:w="1"/><text x="83.0908%" y="511.50"></text></g><g><title>&lt;rustc_mir_dataflow::framework::engine::Engine&lt;rustc_mir_dataflow::impls::EverInitializedPlaces&gt;&gt;::iterate_to_fixpoint (1 samples, 0.04%)</title><rect x="82.8849%" y="501" width="0.0441%" height="15" fill="rgb(248,69,32)" fg:x="1879" fg:w="1"/><text x="83.1349%" y="511.50"></text></g><g><title>&lt;rustc_mir_dataflow::framework::engine::Engine&lt;rustc_mir_dataflow::impls::EverInitializedPlaces&gt;&gt;::new_gen_kill (1 samples, 0.04%)</title><rect x="82.9290%" y="501" width="0.0441%" height="15" fill="rgb(252,102,52)" fg:x="1880" fg:w="1"/><text x="83.1790%" y="511.50"></text></g><g><title>&lt;rustc_mir_dataflow::framework::engine::Engine&lt;rustc_mir_dataflow::impls::MaybeInitializedPlaces&gt;&gt;::iterate_to_fixpoint (1 samples, 0.04%)</title><rect x="82.9731%" y="501" width="0.0441%" height="15" fill="rgb(253,140,32)" fg:x="1881" fg:w="1"/><text x="83.2231%" y="511.50"></text></g><g><title>&lt;rustc_mir_dataflow::framework::engine::Engine&lt;rustc_mir_dataflow::impls::MaybeInitializedPlaces&gt;&gt;::new_gen_kill (1 samples, 0.04%)</title><rect x="83.0172%" y="501" width="0.0441%" height="15" fill="rgb(216,56,42)" fg:x="1882" fg:w="1"/><text x="83.2672%" y="511.50"></text></g><g><title>&lt;rustc_mir_dataflow::framework::engine::Engine&lt;rustc_mir_dataflow::impls::MaybeUninitializedPlaces&gt;&gt;::iterate_to_fixpoint (1 samples, 0.04%)</title><rect x="83.0613%" y="501" width="0.0441%" height="15" fill="rgb(216,184,14)" fg:x="1883" fg:w="1"/><text x="83.3113%" y="511.50"></text></g><g><title>&lt;rustc_mir_dataflow::framework::engine::Engine&lt;rustc_mir_dataflow::impls::storage_liveness::MaybeStorageLive&gt;&gt;::iterate_to_fixpoint (1 samples, 0.04%)</title><rect x="83.1054%" y="501" width="0.0441%" height="15" fill="rgb(237,187,27)" fg:x="1884" fg:w="1"/><text x="83.3554%" y="511.50"></text></g><g><title>&lt;rustc_mir_transform::const_prop::ConstPropagator as rustc_middle::mir::visit::MutVisitor&gt;::visit_body (1 samples, 0.04%)</title><rect x="83.1495%" y="501" width="0.0441%" height="15" fill="rgb(219,65,3)" fg:x="1885" fg:w="1"/><text x="83.3995%" y="511.50"></text></g><g><title>&lt;rustc_mir_transform::remove_noop_landing_pads::RemoveNoopLandingPads as rustc_middle::mir::MirPass&gt;::run_pass (1 samples, 0.04%)</title><rect x="83.1936%" y="501" width="0.0441%" height="15" fill="rgb(245,83,25)" fg:x="1886" fg:w="1"/><text x="83.4436%" y="511.50"></text></g><g><title>&lt;rustc_monomorphize::partitioning::default::DefaultPartitioning as rustc_monomorphize::partitioning::Partitioner&gt;::place_root_mono_items (1 samples, 0.04%)</title><rect x="83.2378%" y="501" width="0.0441%" height="15" fill="rgb(214,205,45)" fg:x="1887" fg:w="1"/><text x="83.4878%" y="511.50"></text></g><g><title>&lt;rustc_parse::lexer::StringReader&gt;::next_token (2 samples, 0.09%)</title><rect x="83.2819%" y="501" width="0.0882%" height="15" fill="rgb(241,20,18)" fg:x="1888" fg:w="2"/><text x="83.5319%" y="511.50"></text></g><g><title>&lt;rustc_parse::parser::Parser&gt;::parse_assoc_op_cast (1 samples, 0.04%)</title><rect x="83.3701%" y="501" width="0.0441%" height="15" fill="rgb(232,163,23)" fg:x="1890" fg:w="1"/><text x="83.6201%" y="511.50"></text></g><g><title>&lt;rustc_parse::parser::Parser&gt;::parse_path_start_expr (1 samples, 0.04%)</title><rect x="83.4142%" y="501" width="0.0441%" height="15" fill="rgb(214,5,46)" fg:x="1891" fg:w="1"/><text x="83.6642%" y="511.50"></text></g><g><title>&lt;rustc_passes::stability::Checker as rustc_hir::intravisit::Visitor&gt;::visit_path (1 samples, 0.04%)</title><rect x="83.4583%" y="501" width="0.0441%" height="15" fill="rgb(229,78,17)" fg:x="1892" fg:w="1"/><text x="83.7083%" y="511.50"></text></g><g><title>&lt;rustc_privacy::NamePrivacyVisitor as rustc_hir::intravisit::Visitor&gt;::visit_expr (1 samples, 0.04%)</title><rect x="83.5024%" y="501" width="0.0441%" height="15" fill="rgb(248,89,10)" fg:x="1893" fg:w="1"/><text x="83.7524%" y="511.50"></text></g><g><title>&lt;rustc_privacy::PrivateItemsInPublicInterfacesChecker&gt;::check_assoc_item (1 samples, 0.04%)</title><rect x="83.5465%" y="501" width="0.0441%" height="15" fill="rgb(248,54,15)" fg:x="1894" fg:w="1"/><text x="83.7965%" y="511.50"></text></g><g><title>&lt;rustc_privacy::TypePrivacyVisitor as rustc_hir::intravisit::Visitor&gt;::visit_expr (1 samples, 0.04%)</title><rect x="83.5906%" y="501" width="0.0441%" height="15" fill="rgb(223,116,6)" fg:x="1895" fg:w="1"/><text x="83.8406%" y="511.50"></text></g><g><title>&lt;rustc_query_system::dep_graph::dep_node::DepNode&lt;rustc_middle::dep_graph::dep_node::DepKind&gt;&gt;::construct::&lt;rustc_middle::ty::context::TyCtxt, rustc_span::symbol::Symbol&gt; (1 samples, 0.04%)</title><rect x="83.6348%" y="501" width="0.0441%" height="15" fill="rgb(205,125,38)" fg:x="1896" fg:w="1"/><text x="83.8848%" y="511.50"></text></g><g><title>&lt;rustc_resolve::Resolver&gt;::create_def (1 samples, 0.04%)</title><rect x="83.6789%" y="501" width="0.0441%" height="15" fill="rgb(251,78,38)" fg:x="1897" fg:w="1"/><text x="83.9289%" y="511.50"></text></g><g><title>&lt;rustc_resolve::def_collector::DefCollector as rustc_ast::visit::Visitor&gt;::visit_expr (1 samples, 0.04%)</title><rect x="83.7230%" y="501" width="0.0441%" height="15" fill="rgb(253,78,28)" fg:x="1898" fg:w="1"/><text x="83.9730%" y="511.50"></text></g><g><title>&lt;rustc_resolve::imports::ImportResolver&gt;::resolve_imports (1 samples, 0.04%)</title><rect x="83.7671%" y="501" width="0.0441%" height="15" fill="rgb(209,120,3)" fg:x="1899" fg:w="1"/><text x="84.0171%" y="511.50"></text></g><g><title>&lt;rustc_resolve::late::LateResolutionVisitor as rustc_ast::visit::Visitor&gt;::visit_ty (1 samples, 0.04%)</title><rect x="83.8112%" y="501" width="0.0441%" height="15" fill="rgb(238,229,9)" fg:x="1900" fg:w="1"/><text x="84.0612%" y="511.50"></text></g><g><title>&lt;rustc_span::caching_source_map_view::CachingSourceMapView&gt;::span_data_to_lines_and_cols (1 samples, 0.04%)</title><rect x="83.8553%" y="501" width="0.0441%" height="15" fill="rgb(253,159,18)" fg:x="1901" fg:w="1"/><text x="84.1053%" y="511.50"></text></g><g><title>&lt;rustc_span::source_map::FilePathMapping&gt;::to_embeddable_absolute_path (1 samples, 0.04%)</title><rect x="83.8994%" y="501" width="0.0441%" height="15" fill="rgb(244,42,34)" fg:x="1902" fg:w="1"/><text x="84.1494%" y="511.50"></text></g><g><title>&lt;rustc_span::source_map::SourceMap&gt;::lookup_char_pos (1 samples, 0.04%)</title><rect x="83.9435%" y="501" width="0.0441%" height="15" fill="rgb(224,8,7)" fg:x="1903" fg:w="1"/><text x="84.1935%" y="511.50"></text></g><g><title>&lt;rustc_span::source_map::SourceMap&gt;::new_imported_source_file (1 samples, 0.04%)</title><rect x="83.9876%" y="501" width="0.0441%" height="15" fill="rgb(210,201,45)" fg:x="1904" fg:w="1"/><text x="84.2376%" y="511.50"></text></g><g><title>&lt;rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (6 samples, 0.26%)</title><rect x="84.0318%" y="501" width="0.2647%" height="15" fill="rgb(252,185,21)" fg:x="1905" fg:w="6"/><text x="84.2818%" y="511.50"></text></g><g><title>&lt;rustc_span::span_encoding::Span&gt;::is_desugaring (1 samples, 0.04%)</title><rect x="84.2964%" y="501" width="0.0441%" height="15" fill="rgb(223,131,1)" fg:x="1911" fg:w="1"/><text x="84.5464%" y="511.50"></text></g><g><title>&lt;rustc_span::symbol::Symbol as rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt;&gt;::decode (5 samples, 0.22%)</title><rect x="84.3405%" y="501" width="0.2206%" height="15" fill="rgb(245,141,16)" fg:x="1912" fg:w="5"/><text x="84.5905%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="84.5170%" y="485" width="0.0441%" height="15" fill="rgb(229,55,45)" fg:x="1916" fg:w="1"/><text x="84.7670%" y="495.50"></text></g><g><title>&lt;rustc_span::symbol::Symbol&gt;::intern (1 samples, 0.04%)</title><rect x="84.5611%" y="501" width="0.0441%" height="15" fill="rgb(208,92,15)" fg:x="1917" fg:w="1"/><text x="84.8111%" y="511.50"></text></g><g><title>&lt;rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt; as rustc_codegen_llvm::type_of::LayoutLlvmExt&gt;::llvm_type (1 samples, 0.04%)</title><rect x="84.6052%" y="501" width="0.0441%" height="15" fill="rgb(234,185,47)" fg:x="1918" fg:w="1"/><text x="84.8552%" y="511.50"></text></g><g><title>&lt;rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt; as rustc_codegen_llvm::type_of::LayoutLlvmExt&gt;::scalar_pair_element_llvm_type (1 samples, 0.04%)</title><rect x="84.6493%" y="501" width="0.0441%" height="15" fill="rgb(253,104,50)" fg:x="1919" fg:w="1"/><text x="84.8993%" y="511.50"></text></g><g><title>&lt;rustc_target::abi::TyAndLayout&lt;rustc_middle::ty::Ty&gt;&gt;::for_variant::&lt;rustc_codegen_llvm::context::CodegenCx&gt; (1 samples, 0.04%)</title><rect x="84.6934%" y="501" width="0.0441%" height="15" fill="rgb(205,70,7)" fg:x="1920" fg:w="1"/><text x="84.9434%" y="511.50"></text></g><g><title>llvm::Attribute::get (3 samples, 0.13%)</title><rect x="84.7816%" y="485" width="0.1323%" height="15" fill="rgb(240,178,43)" fg:x="1922" fg:w="3"/><text x="85.0316%" y="495.50"></text></g><g><title>&lt;rustc_target::abi::call::FnAbi&lt;rustc_middle::ty::Ty&gt; as rustc_codegen_llvm::abi::FnAbiLlvmExt&gt;::apply_attrs_callsite (5 samples, 0.22%)</title><rect x="84.7375%" y="501" width="0.2206%" height="15" fill="rgb(214,112,2)" fg:x="1921" fg:w="5"/><text x="84.9875%" y="511.50"></text></g><g><title>llvm::Attribute::getWithDereferenceableBytes (1 samples, 0.04%)</title><rect x="84.9140%" y="485" width="0.0441%" height="15" fill="rgb(206,46,17)" fg:x="1925" fg:w="1"/><text x="85.1640%" y="495.50"></text></g><g><title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="84.9140%" y="469" width="0.0441%" height="15" fill="rgb(225,220,16)" fg:x="1925" fg:w="1"/><text x="85.1640%" y="479.50"></text></g><g><title>&lt;rustc_target::abi::call::FnAbi&lt;rustc_middle::ty::Ty&gt; as rustc_codegen_llvm::abi::FnAbiLlvmExt&gt;::apply_attrs_llfn (1 samples, 0.04%)</title><rect x="84.9581%" y="501" width="0.0441%" height="15" fill="rgb(238,65,40)" fg:x="1926" fg:w="1"/><text x="85.2081%" y="511.50"></text></g><g><title>llvm::Attribute::get (1 samples, 0.04%)</title><rect x="84.9581%" y="485" width="0.0441%" height="15" fill="rgb(230,151,21)" fg:x="1926" fg:w="1"/><text x="85.2081%" y="495.50"></text></g><g><title>&lt;rustc_trait_selection::traits::engine::ObligationCtxt&gt;::assumed_wf_types (1 samples, 0.04%)</title><rect x="85.0022%" y="501" width="0.0441%" height="15" fill="rgb(218,58,49)" fg:x="1927" fg:w="1"/><text x="85.2522%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::fulfill::FulfillProcessor as rustc_data_structures::obligation_forest::ObligationProcessor&gt;::process_obligation (2 samples, 0.09%)</title><rect x="85.0463%" y="501" width="0.0882%" height="15" fill="rgb(219,179,14)" fg:x="1928" fg:w="2"/><text x="85.2963%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine&gt;::select_where_possible (1 samples, 0.04%)</title><rect x="85.1345%" y="501" width="0.0441%" height="15" fill="rgb(223,72,1)" fg:x="1930" fg:w="1"/><text x="85.3845%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder&gt;::fold_ty (1 samples, 0.04%)</title><rect x="85.1787%" y="501" width="0.0441%" height="15" fill="rgb(238,126,10)" fg:x="1931" fg:w="1"/><text x="85.4287%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::query::normalize::QueryNormalizer as rustc_middle::ty::fold::FallibleTypeFolder&gt;::try_fold_ty (2 samples, 0.09%)</title><rect x="85.2228%" y="501" width="0.0882%" height="15" fill="rgb(224,206,38)" fg:x="1932" fg:w="2"/><text x="85.4728%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::confirm_candidate (4 samples, 0.18%)</title><rect x="85.3110%" y="501" width="0.1764%" height="15" fill="rgb(212,201,54)" fg:x="1934" fg:w="4"/><text x="85.5610%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::evaluate_predicate_recursively (3 samples, 0.13%)</title><rect x="85.4874%" y="501" width="0.1323%" height="15" fill="rgb(218,154,48)" fg:x="1938" fg:w="3"/><text x="85.7374%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::evaluate_predicates_recursively::&lt;alloc::vec::into_iter::IntoIter&lt;rustc_infer::traits::Obligation&lt;rustc_middle::ty::Predicate&gt;&gt;&gt; (2 samples, 0.09%)</title><rect x="85.6198%" y="501" width="0.0882%" height="15" fill="rgb(232,93,24)" fg:x="1941" fg:w="2"/><text x="85.8698%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::evaluate_stack (1 samples, 0.04%)</title><rect x="85.7080%" y="501" width="0.0441%" height="15" fill="rgb(245,30,21)" fg:x="1943" fg:w="1"/><text x="85.9580%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::impl_or_trait_obligations (1 samples, 0.04%)</title><rect x="85.7521%" y="501" width="0.0441%" height="15" fill="rgb(242,148,29)" fg:x="1944" fg:w="1"/><text x="86.0021%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::select (2 samples, 0.09%)</title><rect x="85.7962%" y="501" width="0.0882%" height="15" fill="rgb(244,153,54)" fg:x="1945" fg:w="2"/><text x="86.0462%" y="511.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;[rustc_ast::ast::Attribute: 8]&gt; as core::iter::traits::collect::Extend&lt;rustc_ast::ast::Attribute&gt;&gt;::extend::&lt;rustc_metadata::rmeta::decoder::DecodeIterator&lt;rustc_ast::ast::Attribute&gt;&gt; (4 samples, 0.18%)</title><rect x="85.8844%" y="501" width="0.1764%" height="15" fill="rgb(252,87,22)" fg:x="1947" fg:w="4"/><text x="86.1344%" y="511.50"></text></g><g><title>&lt;snap::decompress::Decoder&gt;::decompress (3 samples, 0.13%)</title><rect x="86.0609%" y="501" width="0.1323%" height="15" fill="rgb(210,51,29)" fg:x="1951" fg:w="3"/><text x="86.3109%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.1491%" y="485" width="0.0441%" height="15" fill="rgb(242,136,47)" fg:x="1953" fg:w="1"/><text x="86.3991%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.1491%" y="469" width="0.0441%" height="15" fill="rgb(238,68,4)" fg:x="1953" fg:w="1"/><text x="86.3991%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.1491%" y="453" width="0.0441%" height="15" fill="rgb(242,161,30)" fg:x="1953" fg:w="1"/><text x="86.3991%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.1491%" y="437" width="0.0441%" height="15" fill="rgb(218,58,44)" fg:x="1953" fg:w="1"/><text x="86.3991%" y="447.50"></text></g><g><title>&lt;snap::read::FrameDecoder&lt;&amp;[u8]&gt; as std::io::Read&gt;::read (1 samples, 0.04%)</title><rect x="86.1932%" y="501" width="0.0441%" height="15" fill="rgb(252,125,32)" fg:x="1954" fg:w="1"/><text x="86.4432%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.1932%" y="485" width="0.0441%" height="15" fill="rgb(219,178,0)" fg:x="1954" fg:w="1"/><text x="86.4432%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.1932%" y="469" width="0.0441%" height="15" fill="rgb(213,152,7)" fg:x="1954" fg:w="1"/><text x="86.4432%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="86.1932%" y="453" width="0.0441%" height="15" fill="rgb(249,109,34)" fg:x="1954" fg:w="1"/><text x="86.4432%" y="463.50"></text></g><g><title>&lt;std::path::PathBuf as core::hash::Hash&gt;::hash::&lt;rustc_hash::FxHasher&gt; (1 samples, 0.04%)</title><rect x="86.2373%" y="501" width="0.0441%" height="15" fill="rgb(232,96,21)" fg:x="1955" fg:w="1"/><text x="86.4873%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::FlatMap&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;rustc_middle::ty::subst::GenericArg&gt;&gt;, rustc_middle::ty::walk::TypeWalker, rustc_monomorphize::collector::check_type_length_limit::{closure#0}&gt;, &lt;core::iter::adapters::filter::Filter&lt;_, _&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize&lt;rustc_middle::ty::subst::GenericArg, rustc_monomorphize::collector::check_type_length_limit::{closure#1}&gt;::{closure#0}&gt;&gt; (1 samples, 0.04%)</title><rect x="86.2814%" y="501" width="0.0441%" height="15" fill="rgb(228,27,39)" fg:x="1956" fg:w="1"/><text x="86.5314%" y="511.50"></text></g><g><title>LLVMBuildAlloca (1 samples, 0.04%)</title><rect x="86.3255%" y="501" width="0.0441%" height="15" fill="rgb(211,182,52)" fg:x="1957" fg:w="1"/><text x="86.5755%" y="511.50"></text></g><g><title>llvm::Instruction::setMetadata (1 samples, 0.04%)</title><rect x="86.3255%" y="485" width="0.0441%" height="15" fill="rgb(234,178,38)" fg:x="1957" fg:w="1"/><text x="86.5755%" y="495.50"></text></g><g><title>LLVMRustAddCallSiteAttributes (6 samples, 0.26%)</title><rect x="86.3697%" y="501" width="0.2647%" height="15" fill="rgb(221,111,3)" fg:x="1958" fg:w="6"/><text x="86.6197%" y="511.50"></text></g><g><title>llvm::AttributeList::addAttributesAtIndex (6 samples, 0.26%)</title><rect x="86.3697%" y="485" width="0.2647%" height="15" fill="rgb(228,175,21)" fg:x="1958" fg:w="6"/><text x="86.6197%" y="495.50"></text></g><g><title>LLVMRustAddFunctionAttributes (3 samples, 0.13%)</title><rect x="86.6343%" y="501" width="0.1323%" height="15" fill="rgb(228,174,43)" fg:x="1964" fg:w="3"/><text x="86.8843%" y="511.50"></text></g><g><title>llvm::AttributeList::addAttributesAtIndex (3 samples, 0.13%)</title><rect x="86.6343%" y="485" width="0.1323%" height="15" fill="rgb(211,191,0)" fg:x="1964" fg:w="3"/><text x="86.8843%" y="495.50"></text></g><g><title>llvm::AttributeListImpl::AttributeListImpl (1 samples, 0.04%)</title><rect x="86.7225%" y="469" width="0.0441%" height="15" fill="rgb(253,117,3)" fg:x="1966" fg:w="1"/><text x="86.9725%" y="479.50"></text></g><g><title>llvm::Attribute::getWithAlignment (1 samples, 0.04%)</title><rect x="86.7667%" y="469" width="0.0441%" height="15" fill="rgb(241,127,19)" fg:x="1967" fg:w="1"/><text x="87.0167%" y="479.50"></text></g><g><title>llvm::AttributeList::addParamAttribute (1 samples, 0.04%)</title><rect x="86.8108%" y="469" width="0.0441%" height="15" fill="rgb(218,103,12)" fg:x="1968" fg:w="1"/><text x="87.0608%" y="479.50"></text></g><g><title>LLVMRustBuildMemCpy (3 samples, 0.13%)</title><rect x="86.7667%" y="501" width="0.1323%" height="15" fill="rgb(236,214,43)" fg:x="1967" fg:w="3"/><text x="87.0167%" y="511.50"></text></g><g><title>llvm::IRBuilderBase::CreateMemTransferInst (3 samples, 0.13%)</title><rect x="86.7667%" y="485" width="0.1323%" height="15" fill="rgb(244,144,19)" fg:x="1967" fg:w="3"/><text x="87.0167%" y="495.50"></text></g><g><title>llvm::Intrinsic::getDeclaration (1 samples, 0.04%)</title><rect x="86.8549%" y="469" width="0.0441%" height="15" fill="rgb(246,188,10)" fg:x="1969" fg:w="1"/><text x="87.1049%" y="479.50"></text></g><g><title>DecodeFixedType (1 samples, 0.04%)</title><rect x="86.8549%" y="453" width="0.0441%" height="15" fill="rgb(212,193,33)" fg:x="1969" fg:w="1"/><text x="87.1049%" y="463.50"></text></g><g><title>createX86MCRegisterInfo (2 samples, 0.09%)</title><rect x="86.8990%" y="453" width="0.0882%" height="15" fill="rgb(241,51,29)" fg:x="1970" fg:w="2"/><text x="87.1490%" y="463.50"></text></g><g><title>llvm::X86_MC::initLLVMToSEHAndCVRegMapping (2 samples, 0.09%)</title><rect x="86.8990%" y="437" width="0.0882%" height="15" fill="rgb(211,58,19)" fg:x="1970" fg:w="2"/><text x="87.1490%" y="447.50"></text></g><g><title>llvm::DenseMap&lt;llvm::MCRegister, int, llvm::DenseMapInfo&lt;llvm::MCRegister, void&gt;, llvm::detail::DenseMapPair&lt;llvm::MCRegister, int&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="86.9431%" y="421" width="0.0441%" height="15" fill="rgb(229,111,26)" fg:x="1971" fg:w="1"/><text x="87.1931%" y="431.50"></text></g><g><title>LLVMRustCreateTargetMachine (3 samples, 0.13%)</title><rect x="86.8990%" y="501" width="0.1323%" height="15" fill="rgb(213,115,40)" fg:x="1970" fg:w="3"/><text x="87.1490%" y="511.50"></text></g><g><title>llvm::RegisterTargetMachine&lt;llvm::X86TargetMachine&gt;::Allocator (3 samples, 0.13%)</title><rect x="86.8990%" y="485" width="0.1323%" height="15" fill="rgb(209,56,44)" fg:x="1970" fg:w="3"/><text x="87.1490%" y="495.50"></text></g><g><title>llvm::LLVMTargetMachine::initAsmInfo (3 samples, 0.13%)</title><rect x="86.8990%" y="469" width="0.1323%" height="15" fill="rgb(230,108,32)" fg:x="1970" fg:w="3"/><text x="87.1490%" y="479.50"></text></g><g><title>llvm::X86_MC::createX86MCSubtargetInfo (1 samples, 0.04%)</title><rect x="86.9872%" y="453" width="0.0441%" height="15" fill="rgb(216,165,31)" fg:x="1972" fg:w="1"/><text x="87.2372%" y="463.50"></text></g><g><title>llvm::MCSubtargetInfo::MCSubtargetInfo (1 samples, 0.04%)</title><rect x="86.9872%" y="437" width="0.0441%" height="15" fill="rgb(218,122,21)" fg:x="1972" fg:w="1"/><text x="87.2372%" y="447.50"></text></g><g><title>llvm::MCSubtargetInfo::InitMCProcessorInfo (1 samples, 0.04%)</title><rect x="86.9872%" y="421" width="0.0441%" height="15" fill="rgb(223,224,47)" fg:x="1972" fg:w="1"/><text x="87.2372%" y="431.50"></text></g><g><title>getFeatures (1 samples, 0.04%)</title><rect x="86.9872%" y="405" width="0.0441%" height="15" fill="rgb(238,102,44)" fg:x="1972" fg:w="1"/><text x="87.2372%" y="415.50"></text></g><g><title>SetImpliedBits (1 samples, 0.04%)</title><rect x="86.9872%" y="389" width="0.0441%" height="15" fill="rgb(236,46,40)" fg:x="1972" fg:w="1"/><text x="87.2372%" y="399.50"></text></g><g><title>SetImpliedBits (1 samples, 0.04%)</title><rect x="86.9872%" y="373" width="0.0441%" height="15" fill="rgb(247,202,50)" fg:x="1972" fg:w="1"/><text x="87.2372%" y="383.50"></text></g><g><title>llvm::BitstreamCursor::SkipBlock (1 samples, 0.04%)</title><rect x="87.0313%" y="453" width="0.0441%" height="15" fill="rgb(209,99,20)" fg:x="1973" fg:w="1"/><text x="87.2813%" y="463.50"></text></g><g><title>llvm::SimpleBitstreamCursor::JumpToBit (1 samples, 0.04%)</title><rect x="87.0313%" y="437" width="0.0441%" height="15" fill="rgb(252,27,34)" fg:x="1973" fg:w="1"/><text x="87.2813%" y="447.50"></text></g><g><title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="87.0754%" y="453" width="0.0441%" height="15" fill="rgb(215,206,23)" fg:x="1974" fg:w="1"/><text x="87.3254%" y="463.50"></text></g><g><title>llvm::GlobalValue::getGlobalIdentifier[abi:cxx11] (1 samples, 0.04%)</title><rect x="87.1195%" y="453" width="0.0441%" height="15" fill="rgb(212,135,36)" fg:x="1975" fg:w="1"/><text x="87.3695%" y="463.50"></text></g><g><title>LLVMRustCreateThinLTOData (4 samples, 0.18%)</title><rect x="87.0313%" y="501" width="0.1764%" height="15" fill="rgb(240,189,1)" fg:x="1973" fg:w="4"/><text x="87.2813%" y="511.50"></text></g><g><title>llvm::readModuleSummaryIndex (4 samples, 0.18%)</title><rect x="87.0313%" y="485" width="0.1764%" height="15" fill="rgb(242,56,20)" fg:x="1973" fg:w="4"/><text x="87.2813%" y="495.50"></text></g><g><title>llvm::BitcodeModule::readSummary (4 samples, 0.18%)</title><rect x="87.0313%" y="469" width="0.1764%" height="15" fill="rgb(247,132,33)" fg:x="1973" fg:w="4"/><text x="87.2813%" y="479.50"></text></g><g><title>llvm::MD5::final (1 samples, 0.04%)</title><rect x="87.1637%" y="453" width="0.0441%" height="15" fill="rgb(208,149,11)" fg:x="1976" fg:w="1"/><text x="87.4137%" y="463.50"></text></g><g><title>LLVMRustDIBuilderCreateDebugLocation (13 samples, 0.57%)</title><rect x="87.2078%" y="501" width="0.5734%" height="15" fill="rgb(211,33,11)" fg:x="1977" fg:w="13"/><text x="87.4578%" y="511.50"></text></g><g><title>llvm::DILocation::getImpl (12 samples, 0.53%)</title><rect x="87.2519%" y="485" width="0.5293%" height="15" fill="rgb(221,29,38)" fg:x="1978" fg:w="12"/><text x="87.5019%" y="495.50"></text></g><g><title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DILocation&gt;, llvm::detail::DenseSetPair&lt;llvm::DILocation*&gt; &gt;, llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo&lt;llvm::DILocation&gt;, llvm::detail::DenseSetPair&lt;llvm::DILocation*&gt; &gt;::moveFromOldBuckets (2 samples, 0.09%)</title><rect x="87.6930%" y="469" width="0.0882%" height="15" fill="rgb(206,182,49)" fg:x="1988" fg:w="2"/><text x="87.9430%" y="479.50"></text></g><g><title>LLVMRustDIBuilderCreateFile (2 samples, 0.09%)</title><rect x="87.7812%" y="501" width="0.0882%" height="15" fill="rgb(216,140,1)" fg:x="1990" fg:w="2"/><text x="88.0312%" y="511.50"></text></g><g><title>llvm::DIBuilder::createFile (2 samples, 0.09%)</title><rect x="87.7812%" y="485" width="0.0882%" height="15" fill="rgb(232,57,40)" fg:x="1990" fg:w="2"/><text x="88.0312%" y="495.50"></text></g><g><title>llvm::MDString::get (2 samples, 0.09%)</title><rect x="87.7812%" y="469" width="0.0882%" height="15" fill="rgb(224,186,18)" fg:x="1990" fg:w="2"/><text x="88.0312%" y="479.50"></text></g><g><title>LLVMRustDIBuilderCreateFunction (4 samples, 0.18%)</title><rect x="87.8694%" y="501" width="0.1764%" height="15" fill="rgb(215,121,11)" fg:x="1992" fg:w="4"/><text x="88.1194%" y="511.50"></text></g><g><title>llvm::DIBuilder::createFunction (4 samples, 0.18%)</title><rect x="87.8694%" y="485" width="0.1764%" height="15" fill="rgb(245,147,10)" fg:x="1992" fg:w="4"/><text x="88.1194%" y="495.50"></text></g><g><title>llvm::MDNode::MDNode (2 samples, 0.09%)</title><rect x="87.9577%" y="469" width="0.0882%" height="15" fill="rgb(238,153,13)" fg:x="1994" fg:w="2"/><text x="88.2077%" y="479.50"></text></g><g><title>LLVMRustDIBuilderCreateSubroutineType (1 samples, 0.04%)</title><rect x="88.0459%" y="501" width="0.0441%" height="15" fill="rgb(233,108,0)" fg:x="1996" fg:w="1"/><text x="88.2959%" y="511.50"></text></g><g><title>LLVMRustGetOrInsertFunction (4 samples, 0.18%)</title><rect x="88.0900%" y="501" width="0.1764%" height="15" fill="rgb(212,157,17)" fg:x="1997" fg:w="4"/><text x="88.3400%" y="511.50"></text></g><g><title>llvm::Module::getOrInsertFunction (3 samples, 0.13%)</title><rect x="88.1341%" y="485" width="0.1323%" height="15" fill="rgb(225,213,38)" fg:x="1998" fg:w="3"/><text x="88.3841%" y="495.50"></text></g><g><title>llvm::Intrinsic::getAttributes (1 samples, 0.04%)</title><rect x="88.2223%" y="469" width="0.0441%" height="15" fill="rgb(248,16,11)" fg:x="2000" fg:w="1"/><text x="88.4723%" y="479.50"></text></g><g><title>llvm::AttributeList::get (1 samples, 0.04%)</title><rect x="88.2223%" y="453" width="0.0441%" height="15" fill="rgb(241,33,4)" fg:x="2000" fg:w="1"/><text x="88.4723%" y="463.50"></text></g><g><title>llvm::AttributeList::get (1 samples, 0.04%)</title><rect x="88.2223%" y="437" width="0.0441%" height="15" fill="rgb(222,26,43)" fg:x="2000" fg:w="1"/><text x="88.4723%" y="447.50"></text></g><g><title>llvm::FoldingSetBase::GrowBucketCount (1 samples, 0.04%)</title><rect x="88.2223%" y="421" width="0.0441%" height="15" fill="rgb(243,29,36)" fg:x="2000" fg:w="1"/><text x="88.4723%" y="431.50"></text></g><g><title>llvm::FoldingSet&lt;llvm::AttributeListImpl&gt;::ComputeNodeHash (1 samples, 0.04%)</title><rect x="88.2223%" y="405" width="0.0441%" height="15" fill="rgb(241,9,27)" fg:x="2000" fg:w="1"/><text x="88.4723%" y="415.50"></text></g><g><title>LLVMRustHasFeature (1 samples, 0.04%)</title><rect x="88.2664%" y="501" width="0.0441%" height="15" fill="rgb(205,117,26)" fg:x="2001" fg:w="1"/><text x="88.5164%" y="511.50"></text></g><g><title>llvm::MCSubtargetInfo::checkFeatures (1 samples, 0.04%)</title><rect x="88.2664%" y="485" width="0.0441%" height="15" fill="rgb(209,80,39)" fg:x="2001" fg:w="1"/><text x="88.5164%" y="495.50"></text></g><g><title>SetImpliedBits (1 samples, 0.04%)</title><rect x="88.2664%" y="469" width="0.0441%" height="15" fill="rgb(239,155,6)" fg:x="2001" fg:w="1"/><text x="88.5164%" y="479.50"></text></g><g><title>SetImpliedBits (1 samples, 0.04%)</title><rect x="88.2664%" y="453" width="0.0441%" height="15" fill="rgb(212,104,12)" fg:x="2001" fg:w="1"/><text x="88.5164%" y="463.50"></text></g><g><title>LLVMRustMetadataAsValue (2 samples, 0.09%)</title><rect x="88.3105%" y="501" width="0.0882%" height="15" fill="rgb(234,204,3)" fg:x="2002" fg:w="2"/><text x="88.5605%" y="511.50"></text></g><g><title>LLVMRustPositionBuilderAtStart (1 samples, 0.04%)</title><rect x="88.3988%" y="501" width="0.0441%" height="15" fill="rgb(251,218,7)" fg:x="2004" fg:w="1"/><text x="88.6488%" y="511.50"></text></g><g><title>&lt;rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeSuperFoldable&gt;::super_fold_with::&lt;rustc_middle::ty::subst::SubstFolder&gt; (1 samples, 0.04%)</title><rect x="88.4429%" y="485" width="0.0441%" height="15" fill="rgb(221,81,32)" fg:x="2005" fg:w="1"/><text x="88.6929%" y="495.50"></text></g><g><title>[anon] (2 samples, 0.09%)</title><rect x="88.4429%" y="501" width="0.0882%" height="15" fill="rgb(214,152,26)" fg:x="2005" fg:w="2"/><text x="88.6929%" y="511.50"></text></g><g><title>&lt;rustc_trait_selection::traits::select::SelectionContext&gt;::evaluate_stack (1 samples, 0.04%)</title><rect x="88.4870%" y="485" width="0.0441%" height="15" fill="rgb(223,22,3)" fg:x="2006" fg:w="1"/><text x="88.7370%" y="495.50"></text></g><g><title>[ld-2.31.so] (4 samples, 0.18%)</title><rect x="88.5311%" y="453" width="0.1764%" height="15" fill="rgb(207,174,7)" fg:x="2007" fg:w="4"/><text x="88.7811%" y="463.50"></text></g><g><title>[ld-2.31.so] (4 samples, 0.18%)</title><rect x="88.5311%" y="437" width="0.1764%" height="15" fill="rgb(224,19,52)" fg:x="2007" fg:w="4"/><text x="88.7811%" y="447.50"></text></g><g><title>[ld-2.31.so] (3 samples, 0.13%)</title><rect x="88.5752%" y="421" width="0.1323%" height="15" fill="rgb(228,24,14)" fg:x="2008" fg:w="3"/><text x="88.8252%" y="431.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.04%)</title><rect x="88.6634%" y="405" width="0.0441%" height="15" fill="rgb(230,153,43)" fg:x="2010" fg:w="1"/><text x="88.9134%" y="415.50"></text></g><g><title>[ld-2.31.so] (5 samples, 0.22%)</title><rect x="88.5311%" y="501" width="0.2206%" height="15" fill="rgb(231,106,12)" fg:x="2007" fg:w="5"/><text x="88.7811%" y="511.50"></text></g><g><title>[ld-2.31.so] (5 samples, 0.22%)</title><rect x="88.5311%" y="485" width="0.2206%" height="15" fill="rgb(215,92,2)" fg:x="2007" fg:w="5"/><text x="88.7811%" y="495.50"></text></g><g><title>[ld-2.31.so] (5 samples, 0.22%)</title><rect x="88.5311%" y="469" width="0.2206%" height="15" fill="rgb(249,143,25)" fg:x="2007" fg:w="5"/><text x="88.7811%" y="479.50"></text></g><g><title>_GLOBAL__sub_I_RegAllocGreedy.cpp (1 samples, 0.04%)</title><rect x="88.7075%" y="453" width="0.0441%" height="15" fill="rgb(252,7,35)" fg:x="2011" fg:w="1"/><text x="88.9575%" y="463.50"></text></g><g><title>&lt;rustc_codegen_ssa::mir::FunctionCx&lt;rustc_codegen_llvm::builder::Builder&gt;&gt;::codegen_block (3 samples, 0.13%)</title><rect x="88.7517%" y="485" width="0.1323%" height="15" fill="rgb(216,69,40)" fg:x="2012" fg:w="3"/><text x="89.0017%" y="495.50"></text></g><g><title>&lt;rustc_data_structures::sip128::SipHasher128&gt;::short_write_process_buffer::&lt;4&gt; (1 samples, 0.04%)</title><rect x="88.8840%" y="485" width="0.0441%" height="15" fill="rgb(240,36,33)" fg:x="2015" fg:w="1"/><text x="89.1340%" y="495.50"></text></g><g><title>&lt;rustc_lint::levels::TopDown as rustc_lint::levels::LintLevelsProvider&gt;::get_lint_level (1 samples, 0.04%)</title><rect x="88.9281%" y="485" width="0.0441%" height="15" fill="rgb(231,128,14)" fg:x="2016" fg:w="1"/><text x="89.1781%" y="495.50"></text></g><g><title>&lt;rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::FallibleTypeFolder&gt;::try_fold_ty (1 samples, 0.04%)</title><rect x="88.9722%" y="485" width="0.0441%" height="15" fill="rgb(245,143,14)" fg:x="2017" fg:w="1"/><text x="89.2222%" y="495.50"></text></g><g><title>LLVMRustCreateThinLTOData (1 samples, 0.04%)</title><rect x="89.0163%" y="485" width="0.0441%" height="15" fill="rgb(222,130,28)" fg:x="2018" fg:w="1"/><text x="89.2663%" y="495.50"></text></g><g><title>llvm::thinLTOInternalizeAndPromoteInIndex (1 samples, 0.04%)</title><rect x="89.0163%" y="469" width="0.0441%" height="15" fill="rgb(212,10,48)" fg:x="2018" fg:w="1"/><text x="89.2663%" y="479.50"></text></g><g><title>[librustc_driver-93862cade34bf92c.so] (1 samples, 0.04%)</title><rect x="89.0604%" y="485" width="0.0441%" height="15" fill="rgb(254,118,45)" fg:x="2019" fg:w="1"/><text x="89.3104%" y="495.50"></text></g><g><title>&lt;rustc_hir::definitions::DefPathData as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="89.0604%" y="469" width="0.0441%" height="15" fill="rgb(228,6,45)" fg:x="2019" fg:w="1"/><text x="89.3104%" y="479.50"></text></g><g><title>[libstd-bc6b80525d6b1f3b.so] (1 samples, 0.04%)</title><rect x="89.1045%" y="485" width="0.0441%" height="15" fill="rgb(241,18,35)" fg:x="2020" fg:w="1"/><text x="89.3545%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="89.1045%" y="469" width="0.0441%" height="15" fill="rgb(227,214,53)" fg:x="2020" fg:w="1"/><text x="89.3545%" y="479.50"></text></g><g><title>_RNvNtCs5UlywwtGzbf_12rustc_traits15dropck_outlives21adt_dtorck_constraint.llvm.14297373773787407539 (1 samples, 0.04%)</title><rect x="89.1487%" y="485" width="0.0441%" height="15" fill="rgb(224,107,51)" fg:x="2021" fg:w="1"/><text x="89.3987%" y="495.50"></text></g><g><title>_RNvXNvNtCsl4LYmJU5QX3_9rustc_hir3hir71__DERIVE_rustc_data_structures_stable_hasher_HashStable_CTX_FOR_ExprKindNtB4_8ExprKindINtNtCs7nTTcLzP3pf_21rustc_data_structures13stable_hasher10HashStableNtNtNtCs7GpLXE8jhE3_18rustc_query_system3ich3hcx20StableHashingContextE11hash_stableCsiakDpDMER0M_18rustc_ast_lowering.llvm.11472140711495262151 (1 samples, 0.04%)</title><rect x="89.1928%" y="485" width="0.0441%" height="15" fill="rgb(248,60,28)" fg:x="2022" fg:w="1"/><text x="89.4428%" y="495.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.04%)</title><rect x="89.2369%" y="485" width="0.0441%" height="15" fill="rgb(249,101,23)" fg:x="2023" fg:w="1"/><text x="89.4869%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.04%)</title><rect x="89.2810%" y="485" width="0.0441%" height="15" fill="rgb(228,51,19)" fg:x="2024" fg:w="1"/><text x="89.5310%" y="495.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.04%)</title><rect x="89.3251%" y="485" width="0.0441%" height="15" fill="rgb(213,20,6)" fg:x="2025" fg:w="1"/><text x="89.5751%" y="495.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.04%)</title><rect x="89.3251%" y="469" width="0.0441%" height="15" fill="rgb(212,124,10)" fg:x="2025" fg:w="1"/><text x="89.5751%" y="479.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.04%)</title><rect x="89.3251%" y="453" width="0.0441%" height="15" fill="rgb(248,3,40)" fg:x="2025" fg:w="1"/><text x="89.5751%" y="463.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.04%)</title><rect x="89.3251%" y="437" width="0.0441%" height="15" fill="rgb(223,178,23)" fg:x="2025" fg:w="1"/><text x="89.5751%" y="447.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.04%)</title><rect x="89.3251%" y="421" width="0.0441%" height="15" fill="rgb(240,132,45)" fg:x="2025" fg:w="1"/><text x="89.5751%" y="431.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.04%)</title><rect x="89.3251%" y="405" width="0.0441%" height="15" fill="rgb(245,164,36)" fg:x="2025" fg:w="1"/><text x="89.5751%" y="415.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.04%)</title><rect x="89.3251%" y="389" width="0.0441%" height="15" fill="rgb(231,188,53)" fg:x="2025" fg:w="1"/><text x="89.5751%" y="399.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (1 samples, 0.04%)</title><rect x="89.3692%" y="485" width="0.0441%" height="15" fill="rgb(237,198,39)" fg:x="2026" fg:w="1"/><text x="89.6192%" y="495.50"></text></g><g><title>rustup::cli::proxy_mode::main (1 samples, 0.04%)</title><rect x="89.4133%" y="485" width="0.0441%" height="15" fill="rgb(223,120,35)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="495.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (1 samples, 0.04%)</title><rect x="89.4133%" y="469" width="0.0441%" height="15" fill="rgb(253,107,49)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="479.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (1 samples, 0.04%)</title><rect x="89.4133%" y="453" width="0.0441%" height="15" fill="rgb(216,44,31)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="463.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (1 samples, 0.04%)</title><rect x="89.4133%" y="437" width="0.0441%" height="15" fill="rgb(253,87,21)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="447.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (1 samples, 0.04%)</title><rect x="89.4133%" y="421" width="0.0441%" height="15" fill="rgb(226,18,2)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="431.50"></text></g><g><title>toml::de::from_str (1 samples, 0.04%)</title><rect x="89.4133%" y="405" width="0.0441%" height="15" fill="rgb(216,8,46)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="415.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="89.4133%" y="389" width="0.0441%" height="15" fill="rgb(226,140,39)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="399.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="89.4133%" y="373" width="0.0441%" height="15" fill="rgb(221,194,54)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="383.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="89.4133%" y="357" width="0.0441%" height="15" fill="rgb(213,92,11)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="367.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="89.4133%" y="341" width="0.0441%" height="15" fill="rgb(229,162,46)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="351.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="89.4133%" y="325" width="0.0441%" height="15" fill="rgb(214,111,36)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="335.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="89.4133%" y="309" width="0.0441%" height="15" fill="rgb(207,6,21)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="319.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="89.4133%" y="293" width="0.0441%" height="15" fill="rgb(213,127,38)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="303.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.04%)</title><rect x="89.4133%" y="277" width="0.0441%" height="15" fill="rgb(238,118,32)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="287.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.04%)</title><rect x="89.4133%" y="261" width="0.0441%" height="15" fill="rgb(240,139,39)" fg:x="2027" fg:w="1"/><text x="89.6633%" y="271.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.09%)</title><rect x="89.5015%" y="245" width="0.0882%" height="15" fill="rgb(235,10,37)" fg:x="2029" fg:w="2"/><text x="89.7515%" y="255.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.18%)</title><rect x="89.4574%" y="261" width="0.1764%" height="15" fill="rgb(249,171,38)" fg:x="2028" fg:w="4"/><text x="89.7074%" y="271.50"></text></g><g><title>toml::map::Map&lt;alloc::string::String,toml::value::Value&gt;::entry (1 samples, 0.04%)</title><rect x="89.5898%" y="245" width="0.0441%" height="15" fill="rgb(242,144,32)" fg:x="2031" fg:w="1"/><text x="89.8398%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="89.5898%" y="229" width="0.0441%" height="15" fill="rgb(217,117,21)" fg:x="2031" fg:w="1"/><text x="89.8398%" y="239.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="89.5898%" y="213" width="0.0441%" height="15" fill="rgb(249,87,1)" fg:x="2031" fg:w="1"/><text x="89.8398%" y="223.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="89.5898%" y="197" width="0.0441%" height="15" fill="rgb(248,196,48)" fg:x="2031" fg:w="1"/><text x="89.8398%" y="207.50"></text></g><g><title>[unknown] (21 samples, 0.93%)</title><rect x="88.7517%" y="501" width="0.9263%" height="15" fill="rgb(251,206,33)" fg:x="2012" fg:w="21"/><text x="89.0017%" y="511.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (5 samples, 0.22%)</title><rect x="89.4574%" y="485" width="0.2206%" height="15" fill="rgb(232,141,28)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="495.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (5 samples, 0.22%)</title><rect x="89.4574%" y="469" width="0.2206%" height="15" fill="rgb(209,167,14)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="479.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (5 samples, 0.22%)</title><rect x="89.4574%" y="453" width="0.2206%" height="15" fill="rgb(225,11,50)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="463.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (5 samples, 0.22%)</title><rect x="89.4574%" y="437" width="0.2206%" height="15" fill="rgb(209,50,20)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="447.50"></text></g><g><title>toml::de::from_str (5 samples, 0.22%)</title><rect x="89.4574%" y="421" width="0.2206%" height="15" fill="rgb(212,17,46)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="431.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.22%)</title><rect x="89.4574%" y="405" width="0.2206%" height="15" fill="rgb(216,101,39)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="415.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.22%)</title><rect x="89.4574%" y="389" width="0.2206%" height="15" fill="rgb(212,228,48)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="399.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.22%)</title><rect x="89.4574%" y="373" width="0.2206%" height="15" fill="rgb(250,6,50)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="383.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.22%)</title><rect x="89.4574%" y="357" width="0.2206%" height="15" fill="rgb(250,160,48)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="367.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.22%)</title><rect x="89.4574%" y="341" width="0.2206%" height="15" fill="rgb(244,216,33)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="351.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.22%)</title><rect x="89.4574%" y="325" width="0.2206%" height="15" fill="rgb(207,157,5)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="335.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.22%)</title><rect x="89.4574%" y="309" width="0.2206%" height="15" fill="rgb(228,199,8)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="319.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.22%)</title><rect x="89.4574%" y="293" width="0.2206%" height="15" fill="rgb(227,80,20)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="303.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.22%)</title><rect x="89.4574%" y="277" width="0.2206%" height="15" fill="rgb(222,9,33)" fg:x="2028" fg:w="5"/><text x="89.7074%" y="287.50"></text></g><g><title>&lt;toml::de::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.04%)</title><rect x="89.6339%" y="261" width="0.0441%" height="15" fill="rgb(239,44,28)" fg:x="2032" fg:w="1"/><text x="89.8839%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="89.6339%" y="245" width="0.0441%" height="15" fill="rgb(249,187,43)" fg:x="2032" fg:w="1"/><text x="89.8839%" y="255.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="89.6339%" y="229" width="0.0441%" height="15" fill="rgb(216,141,28)" fg:x="2032" fg:w="1"/><text x="89.8839%" y="239.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="89.6339%" y="213" width="0.0441%" height="15" fill="rgb(230,154,53)" fg:x="2032" fg:w="1"/><text x="89.8839%" y="223.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTINtNtCs9rsFEtxBPbJ_12rustc_middle2ty11ParamEnvAndTNtNtBS_8instance8InstanceRINtNtBS_4list4ListNtBS_2TyEEETINtNtCs2vLgkrgA7q7_4core6result6ResultRINtNtNtCsf82OTT3SGii_12rustc_target3abi4call5FnAbiB2l_ENtNtBS_6layout10FnAbiErrorENtNtNtCs7GpLXE8jhE3_18rustc_query_system9dep_graph5graph12DepNodeIndexEEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_B2w_INtNtB2C_4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0ECsb56uSFFGNO4_16rustc_query_impl.llvm.15184974607855199036 (1 samples, 0.04%)</title><rect x="89.6780%" y="501" width="0.0441%" height="15" fill="rgb(227,82,4)" fg:x="2033" fg:w="1"/><text x="89.9280%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTINtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty7context13InternedInSetINtNtBU_4list4ListNtNtBU_5subst10GenericArgEEuEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_uINtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0EBW_.llvm.11246279724385790247 (3 samples, 0.13%)</title><rect x="89.7221%" y="501" width="0.1323%" height="15" fill="rgb(220,107,16)" fg:x="2034" fg:w="3"/><text x="89.9721%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTINtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty7context13InternedInSetINtNtCsdhVkmujAPnC_13rustc_type_ir3sty10RegionKindNtBS_6TyCtxtEEuEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_uINtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0EBW_.llvm.11246279724385790247 (1 samples, 0.04%)</title><rect x="89.8544%" y="501" width="0.0441%" height="15" fill="rgb(207,187,2)" fg:x="2037" fg:w="1"/><text x="90.1044%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTINtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty7context13InternedInSetINtNtCsdhVkmujAPnC_13rustc_type_ir7ty_info18WithCachedTypeInfoINtNtB1T_3sty6TyKindNtBS_6TyCtxtEEEuEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_uINtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0EBW_.llvm.11246279724385790247 (3 samples, 0.13%)</title><rect x="89.8985%" y="501" width="0.1323%" height="15" fill="rgb(210,162,52)" fg:x="2038" fg:w="3"/><text x="90.1485%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTINtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty7context13InternedInSetINtNtCsdhVkmujAPnC_13rustc_type_ir7ty_info18WithCachedTypeInfoINtNtBU_3sty6BinderNtBU_13PredicateKindEEEuEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_uINtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0EBW_.llvm.11246279724385790247 (1 samples, 0.04%)</title><rect x="90.0309%" y="501" width="0.0441%" height="15" fill="rgb(217,216,49)" fg:x="2041" fg:w="1"/><text x="90.2809%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTINtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty7context13InternedInSetNtNtBU_3adt10AdtDefDataEuEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_uINtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0EBW_.llvm.11246279724385790247 (1 samples, 0.04%)</title><rect x="90.0750%" y="501" width="0.0441%" height="15" fill="rgb(218,146,49)" fg:x="2042" fg:w="1"/><text x="90.3250%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTNtNtCsaENqAJ3fgdn_10rustc_span6def_id5DefIdTNtNtBT_7hygiene6ExpnIdNtNtNtCs7GpLXE8jhE3_18rustc_query_system9dep_graph5graph12DepNodeIndexEEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_B1w_INtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0ECsb56uSFFGNO4_16rustc_query_impl.llvm.15184974607855199036 (1 samples, 0.04%)</title><rect x="90.1191%" y="501" width="0.0441%" height="15" fill="rgb(216,55,40)" fg:x="2043" fg:w="1"/><text x="90.3691%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTNtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty8instance8InstanceTNtBT_10SymbolNameNtNtNtCs7GpLXE8jhE3_18rustc_query_system9dep_graph5graph12DepNodeIndexEEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_B1I_INtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0ECsb56uSFFGNO4_16rustc_query_impl.llvm.15184974607855199036 (1 samples, 0.04%)</title><rect x="90.1632%" y="501" width="0.0441%" height="15" fill="rgb(208,196,21)" fg:x="2044" fg:w="1"/><text x="90.4132%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTReNtNtCsaENqAJ3fgdn_10rustc_span6symbol6SymbolEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_BR_INtNtCs2vLgkrgA7q7_4core4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0EBV_.llvm.17409575341925765272 (2 samples, 0.09%)</title><rect x="90.2073%" y="501" width="0.0882%" height="15" fill="rgb(242,117,42)" fg:x="2045" fg:w="2"/><text x="90.4573%" y="511.50"></text></g><g><title>_RINvMs5_NtCsyZrbknts8H_9hashbrown3rawINtB6_8RawTableTTNtNtCsaENqAJ3fgdn_10rustc_span6def_id8CrateNumNtBS_5DefIdETRSTB1A_INtNtCs2vLgkrgA7q7_4core6option6OptionNtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty11fast_reject14SimplifiedTypeEENtNtNtCs7GpLXE8jhE3_18rustc_query_system9dep_graph5graph12DepNodeIndexEEE14reserve_rehashNCINvNtB8_3map11make_hasherBP_BP_B1M_INtNtB1Z_4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEE0ECsb56uSFFGNO4_16rustc_query_impl.llvm.15184974607855199036 (1 samples, 0.04%)</title><rect x="90.2955%" y="501" width="0.0441%" height="15" fill="rgb(210,11,23)" fg:x="2047" fg:w="1"/><text x="90.5455%" y="511.50"></text></g><g><title>_RINvMs_NtNtNtCsllUNDkh4f6a_3std6thread5local4fastINtB5_3KeyINtNtCs2vLgkrgA7q7_4core4cell4CellINtNtB10_6option6OptionNtNtNtNtBb_4sync4mpmc7context7ContextEEE14try_initializeNCNvNvNvMB1S_B1Q_4with7CONTEXT7___getit0ECsiLuQpGCmbs0_18rustc_codegen_llvm.llvm.14611509332835389399 (1 samples, 0.04%)</title><rect x="90.3397%" y="501" width="0.0441%" height="15" fill="rgb(217,110,2)" fg:x="2048" fg:w="1"/><text x="90.5897%" y="511.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.04%)</title><rect x="90.3397%" y="485" width="0.0441%" height="15" fill="rgb(229,77,54)" fg:x="2048" fg:w="1"/><text x="90.5897%" y="495.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.04%)</title><rect x="90.3397%" y="469" width="0.0441%" height="15" fill="rgb(218,53,16)" fg:x="2048" fg:w="1"/><text x="90.5897%" y="479.50"></text></g><g><title>_RINvNtCs2vLgkrgA7q7_4core3ptr13drop_in_placeNtNtCs7nTTcLzP3pf_21rustc_data_structures9profiling11TimingGuardECscg1HTmD0G3V_14rustc_metadata.llvm.4922987133892962683 (2 samples, 0.09%)</title><rect x="90.3838%" y="501" width="0.0882%" height="15" fill="rgb(215,38,13)" fg:x="2049" fg:w="2"/><text x="90.6338%" y="511.50"></text></g><g><title>_RINvNtNtCs2vLgkrgA7q7_4core5slice4sort7recurseNtNtCsaENqAJ3fgdn_10rustc_span6def_id5DefIdNCINvMB4_SBI_20sort_unstable_by_keyTxjENCNvNtNtCsi9VNHwDYSNJ_21rustc_trait_selection6traits10specialize29specialization_graph_provider0E0EB2a_.llvm.6254546355883343202 (3 samples, 0.13%)</title><rect x="90.4720%" y="501" width="0.1323%" height="15" fill="rgb(235,42,18)" fg:x="2051" fg:w="3"/><text x="90.7220%" y="511.50"></text></g><g><title>_RINvNtNtCs7GpLXE8jhE3_18rustc_query_system5query8plumbing17try_execute_queryNtNtCsb56uSFFGNO4_16rustc_query_impl7queries14trait_impls_ofNtNtB1g_8plumbing9QueryCtxtEB1g_.llvm.4561683987915078696 (1 samples, 0.04%)</title><rect x="90.6043%" y="501" width="0.0441%" height="15" fill="rgb(219,66,54)" fg:x="2054" fg:w="1"/><text x="90.8543%" y="511.50"></text></g><g><title>_RINvNtNtCs7GpLXE8jhE3_18rustc_query_system5query8plumbing17try_execute_queryNtNtCsb56uSFFGNO4_16rustc_query_impl7queries16codegen_fn_attrsNtNtB1g_8plumbing9QueryCtxtEB1g_.llvm.4561683987915078696 (1 samples, 0.04%)</title><rect x="90.6484%" y="501" width="0.0441%" height="15" fill="rgb(222,205,4)" fg:x="2055" fg:w="1"/><text x="90.8984%" y="511.50"></text></g><g><title>_RINvNtNtCs7GpLXE8jhE3_18rustc_query_system5query8plumbing17try_execute_queryNtNtCsb56uSFFGNO4_16rustc_query_impl7queries26instance_def_size_estimateNtNtB1g_8plumbing9QueryCtxtEB1g_.llvm.4561683987915078696 (1 samples, 0.04%)</title><rect x="90.6925%" y="501" width="0.0441%" height="15" fill="rgb(227,213,46)" fg:x="2056" fg:w="1"/><text x="90.9425%" y="511.50"></text></g><g><title>_RINvNtNtCs7GpLXE8jhE3_18rustc_query_system5query8plumbing17try_execute_queryNtNtCsb56uSFFGNO4_16rustc_query_impl7queries47try_normalize_generic_arg_after_erasing_regionsNtNtB1g_8plumbing9QueryCtxtEB1g_.llvm.4561683987915078696 (2 samples, 0.09%)</title><rect x="90.7367%" y="501" width="0.0882%" height="15" fill="rgb(250,145,42)" fg:x="2057" fg:w="2"/><text x="90.9867%" y="511.50"></text></g><g><title>_RINvNtNtCs7GpLXE8jhE3_18rustc_query_system5query8plumbing17try_execute_queryNtNtCsb56uSFFGNO4_16rustc_query_impl7queries9mir_shimsNtNtB1g_8plumbing9QueryCtxtEB1g_.llvm.4561683987915078696 (1 samples, 0.04%)</title><rect x="90.8249%" y="501" width="0.0441%" height="15" fill="rgb(219,15,2)" fg:x="2059" fg:w="1"/><text x="91.0749%" y="511.50"></text></g><g><title>_RINvNtNtCs7GpLXE8jhE3_18rustc_query_system5query8plumbing17try_execute_queryNtNtCsb56uSFFGNO4_16rustc_query_impl7queries9thir_bodyNtNtB1g_8plumbing9QueryCtxtEB1g_.llvm.4561683987915078696 (1 samples, 0.04%)</title><rect x="90.8690%" y="501" width="0.0441%" height="15" fill="rgb(231,181,52)" fg:x="2060" fg:w="1"/><text x="91.1190%" y="511.50"></text></g><g><title>_RINvNvNtCs9Imu06dqs9Y_18rustc_mir_dataflow17drop_flag_effects20on_all_children_bits20on_all_children_bitsNCNCINvXsc_NtB6_5implsNtB1Q_24MaybeUninitializedPlacesNtNtB6_9framework15GenKillAnalysis18call_return_effectINtNtCs74rjqJ6KQl4_11rustc_index7bit_set13ChunkedBitSetNtNtB6_10move_paths13MovePathIndexEE00ECseBPwXt2M3tL_14rustc_borrowck.llvm.11637987509027532593 (1 samples, 0.04%)</title><rect x="90.9131%" y="501" width="0.0441%" height="15" fill="rgb(235,1,42)" fg:x="2061" fg:w="1"/><text x="91.1631%" y="511.50"></text></g><g><title>_RNvMNtCs93Sp0ta32Hg_16rustc_hir_typeck4exprNtNtB4_7fn_ctxt6FnCtxt36check_expr_with_expectation_and_args.llvm.15622861615518941668 (1 samples, 0.04%)</title><rect x="90.9572%" y="501" width="0.0441%" height="15" fill="rgb(249,88,27)" fg:x="2062" fg:w="1"/><text x="91.2072%" y="511.50"></text></g><g><title>_RNvMNtNtCsi9VNHwDYSNJ_21rustc_trait_selection6traits2wfNtB2_12WfPredicates25nominal_obligations_inner.llvm.9063726539713417628 (1 samples, 0.04%)</title><rect x="91.0013%" y="501" width="0.0441%" height="15" fill="rgb(235,145,16)" fg:x="2063" fg:w="1"/><text x="91.2513%" y="511.50"></text></g><g><title>_RNvMNtNtNtCslAjV4ojoPMw_15rustc_mir_build5build4expr4intoNtB6_7Builder14expr_into_dest.llvm.2343975943507722918 (1 samples, 0.04%)</title><rect x="91.0454%" y="501" width="0.0441%" height="15" fill="rgb(237,114,19)" fg:x="2064" fg:w="1"/><text x="91.2954%" y="511.50"></text></g><g><title>_RNvMs0_NtCs6uBuuXZ4nTw_10rustc_lint17nonstandard_styleNtB5_12NonSnakeCase13to_snake_case.llvm.79907213281091785 (1 samples, 0.04%)</title><rect x="91.0895%" y="501" width="0.0441%" height="15" fill="rgb(238,51,50)" fg:x="2065" fg:w="1"/><text x="91.3395%" y="511.50"></text></g><g><title>_RNvMs1_NtNtCs9rsFEtxBPbJ_12rustc_middle2ty8genericsNtB5_17GenericPredicates16instantiate_into.llvm.17757918161162386811 (2 samples, 0.09%)</title><rect x="91.1337%" y="501" width="0.0882%" height="15" fill="rgb(205,194,25)" fg:x="2066" fg:w="2"/><text x="91.3837%" y="511.50"></text></g><g><title>_RNvMs2_NtCscg1HTmD0G3V_14rustc_metadata7creaderNtB5_11CrateLoader19maybe_resolve_crate.llvm.10275868227293289261 (3 samples, 0.13%)</title><rect x="91.2219%" y="501" width="0.1323%" height="15" fill="rgb(215,203,17)" fg:x="2068" fg:w="3"/><text x="91.4719%" y="511.50"></text></g><g><title>_RNvMs7_NtCs3oU4haeQ1Uq_13rustc_resolve4lateNtB5_21LateResolutionVisitor20visit_generic_params.llvm.12792169585830292270 (1 samples, 0.04%)</title><rect x="91.3542%" y="501" width="0.0441%" height="15" fill="rgb(233,112,49)" fg:x="2071" fg:w="1"/><text x="91.6042%" y="511.50"></text></g><g><title>_RNvMsc_Cs3oU4haeQ1Uq_13rustc_resolveNtB5_14ResolverArenas10new_module.llvm.18181027460923768842 (1 samples, 0.04%)</title><rect x="91.3983%" y="501" width="0.0441%" height="15" fill="rgb(241,130,26)" fg:x="2072" fg:w="1"/><text x="91.6483%" y="511.50"></text></g><g><title>_RNvNtCs5UlywwtGzbf_12rustc_traits15dropck_outlives21adt_dtorck_constraint.llvm.14297373773787407539 (1 samples, 0.04%)</title><rect x="91.4424%" y="501" width="0.0441%" height="15" fill="rgb(252,223,19)" fg:x="2073" fg:w="1"/><text x="91.6924%" y="511.50"></text></g><g><title>_RNvNtCsc8kX8by0pYj_14rustc_ty_utils2ty9param_env.llvm.10707328874214205897 (2 samples, 0.09%)</title><rect x="91.4865%" y="501" width="0.0882%" height="15" fill="rgb(211,95,25)" fg:x="2074" fg:w="2"/><text x="91.7365%" y="511.50"></text></g><g><title>_RINvMs_NtNtNtCsllUNDkh4f6a_3std6thread5local4fastINtB5_3KeyINtNtCs2vLgkrgA7q7_4core4cell7RefCellINtNtNtNtBb_11collections4hash3map7HashMapTjjNtNtCs7nTTcLzP3pf_21rustc_data_structures13stable_hasher15HashingControlsENtNtB2j_11fingerprint11FingerprintINtNtB10_4hash18BuildHasherDefaultNtCs4aqz3Zwdd3Y_10rustc_hash8FxHasherEEEE14try_initializeNCNvNvNvXNtNtCs9rsFEtxBPbJ_12rustc_middle2ty8impls_tyRINtNtB5D_4list4ListpEINtB2h_10HashStableNtNtNtCs7GpLXE8jhE3_18rustc_query_system3ich3hcx20StableHashingContextE11hash_stable5CACHE7___getit0EB5F_.llvm.2283684661909183849 (1 samples, 0.04%)</title><rect x="91.5307%" y="485" width="0.0441%" height="15" fill="rgb(251,182,27)" fg:x="2075" fg:w="1"/><text x="91.7807%" y="495.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.04%)</title><rect x="91.5307%" y="469" width="0.0441%" height="15" fill="rgb(238,24,4)" fg:x="2075" fg:w="1"/><text x="91.7807%" y="479.50"></text></g><g><title>_RNvNtCsc8kX8by0pYj_14rustc_ty_utils3abi18fn_abi_of_instance.llvm.6906788794945733187 (1 samples, 0.04%)</title><rect x="91.5748%" y="501" width="0.0441%" height="15" fill="rgb(224,220,25)" fg:x="2076" fg:w="1"/><text x="91.8248%" y="511.50"></text></g><g><title>_RNvNtCsc8kX8by0pYj_14rustc_ty_utils3abi19fn_abi_new_uncached.llvm.6906788794945733187 (5 samples, 0.22%)</title><rect x="91.6189%" y="501" width="0.2206%" height="15" fill="rgb(239,133,26)" fg:x="2077" fg:w="5"/><text x="91.8689%" y="511.50"></text></g><g><title>_RNvNtCsc8kX8by0pYj_14rustc_ty_utils6layout9layout_of.llvm.13631598358076700203 (1 samples, 0.04%)</title><rect x="91.8394%" y="501" width="0.0441%" height="15" fill="rgb(211,94,48)" fg:x="2082" fg:w="1"/><text x="92.0894%" y="511.50"></text></g><g><title>_RNvNtCsi9VNHwDYSNJ_21rustc_trait_selection6traits23do_normalize_predicates.llvm.1519857449847931502 (1 samples, 0.04%)</title><rect x="91.8835%" y="501" width="0.0441%" height="15" fill="rgb(239,87,6)" fg:x="2083" fg:w="1"/><text x="92.1335%" y="511.50"></text></g><g><title>_RNvNtNtCs4A7bs0IQsdG_17rustc_codegen_ssa9debuginfo10type_names24push_debuginfo_type_name.llvm.5932644919748359319 (1 samples, 0.04%)</title><rect x="91.9277%" y="501" width="0.0441%" height="15" fill="rgb(227,62,0)" fg:x="2084" fg:w="1"/><text x="92.1777%" y="511.50"></text></g><g><title>_RNvNtNtCsiLuQpGCmbs0_18rustc_codegen_llvm9debuginfo16create_scope_map14make_mir_scope.llvm.14611509332835389399 (7 samples, 0.31%)</title><rect x="91.9718%" y="501" width="0.3088%" height="15" fill="rgb(211,226,4)" fg:x="2085" fg:w="7"/><text x="92.2218%" y="511.50"></text></g><g><title>llvm::DILexicalBlockFile::getImpl (1 samples, 0.04%)</title><rect x="92.2364%" y="485" width="0.0441%" height="15" fill="rgb(253,38,52)" fg:x="2091" fg:w="1"/><text x="92.4864%" y="495.50"></text></g><g><title>llvm::MDNode::MDNode (1 samples, 0.04%)</title><rect x="92.2364%" y="469" width="0.0441%" height="15" fill="rgb(229,126,40)" fg:x="2091" fg:w="1"/><text x="92.4864%" y="479.50"></text></g><g><title>_RNvNvNtNtNtCscg1HTmD0G3V_14rustc_metadata5rmeta7decoder11cstore_impl14provide_extern15associated_item.llvm.4922987133892962683 (1 samples, 0.04%)</title><rect x="92.2805%" y="501" width="0.0441%" height="15" fill="rgb(229,165,44)" fg:x="2092" fg:w="1"/><text x="92.5305%" y="511.50"></text></g><g><title>_RNvXs4C_Csb56uSFFGNO4_16rustc_query_implNtB6_7QueriesNtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty5query11QueryEngine23associated_item_def_ids.llvm.2468192502188944882 (1 samples, 0.04%)</title><rect x="92.3247%" y="501" width="0.0441%" height="15" fill="rgb(247,95,47)" fg:x="2093" fg:w="1"/><text x="92.5747%" y="511.50"></text></g><g><title>_RNvXs4C_Csb56uSFFGNO4_16rustc_query_implNtB6_7QueriesNtNtNtCs9rsFEtxBPbJ_12rustc_middle2ty5query11QueryEngine24is_reachable_non_generic.llvm.2468192502188944882 (1 samples, 0.04%)</title><rect x="92.3688%" y="501" width="0.0441%" height="15" fill="rgb(216,140,30)" fg:x="2094" fg:w="1"/><text x="92.6188%" y="511.50"></text></g><g><title>__libc_free (4 samples, 0.18%)</title><rect x="92.4129%" y="501" width="0.1764%" height="15" fill="rgb(246,214,8)" fg:x="2095" fg:w="4"/><text x="92.6629%" y="511.50"></text></g><g><title>__libc_malloc (10 samples, 0.44%)</title><rect x="92.5893%" y="501" width="0.4411%" height="15" fill="rgb(227,224,15)" fg:x="2099" fg:w="10"/><text x="92.8393%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="93.0304%" y="501" width="0.0441%" height="15" fill="rgb(233,175,4)" fg:x="2109" fg:w="1"/><text x="93.2804%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="93.0304%" y="485" width="0.0441%" height="15" fill="rgb(221,66,45)" fg:x="2109" fg:w="1"/><text x="93.2804%" y="495.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="93.0745%" y="501" width="0.0441%" height="15" fill="rgb(221,178,18)" fg:x="2110" fg:w="1"/><text x="93.3245%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="93.0745%" y="485" width="0.0441%" height="15" fill="rgb(213,81,29)" fg:x="2110" fg:w="1"/><text x="93.3245%" y="495.50"></text></g><g><title>__rust_alloc (2 samples, 0.09%)</title><rect x="93.1187%" y="501" width="0.0882%" height="15" fill="rgb(220,89,49)" fg:x="2111" fg:w="2"/><text x="93.3687%" y="511.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="93.2069%" y="501" width="0.0441%" height="15" fill="rgb(227,60,33)" fg:x="2113" fg:w="1"/><text x="93.4569%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (2 samples, 0.09%)</title><rect x="93.2510%" y="501" width="0.0882%" height="15" fill="rgb(205,113,12)" fg:x="2114" fg:w="2"/><text x="93.5010%" y="511.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.04%)</title><rect x="93.3392%" y="501" width="0.0441%" height="15" fill="rgb(211,32,1)" fg:x="2116" fg:w="1"/><text x="93.5892%" y="511.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1 samples, 0.04%)</title><rect x="93.3833%" y="501" width="0.0441%" height="15" fill="rgb(246,2,12)" fg:x="2117" fg:w="1"/><text x="93.6333%" y="511.50"></text></g><g><title>_rjem_je_arena_ralloc (6 samples, 0.26%)</title><rect x="93.4274%" y="501" width="0.2647%" height="15" fill="rgb(243,37,27)" fg:x="2118" fg:w="6"/><text x="93.6774%" y="511.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="93.6039%" y="485" width="0.0882%" height="15" fill="rgb(248,211,31)" fg:x="2122" fg:w="2"/><text x="93.8539%" y="495.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.09%)</title><rect x="93.6921%" y="501" width="0.0882%" height="15" fill="rgb(242,146,47)" fg:x="2124" fg:w="2"/><text x="93.9421%" y="511.50"></text></g><g><title>_rjem_je_bitmap_init (1 samples, 0.04%)</title><rect x="93.7803%" y="501" width="0.0441%" height="15" fill="rgb(206,70,20)" fg:x="2126" fg:w="1"/><text x="94.0303%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="93.7803%" y="485" width="0.0441%" height="15" fill="rgb(215,10,51)" fg:x="2126" fg:w="1"/><text x="94.0303%" y="495.50"></text></g><g><title>_rjem_je_edata_heap_first (1 samples, 0.04%)</title><rect x="93.8244%" y="501" width="0.0441%" height="15" fill="rgb(243,178,53)" fg:x="2127" fg:w="1"/><text x="94.0744%" y="511.50"></text></g><g><title>_rjem_je_emap_remap (1 samples, 0.04%)</title><rect x="93.8685%" y="501" width="0.0441%" height="15" fill="rgb(233,221,20)" fg:x="2128" fg:w="1"/><text x="94.1185%" y="511.50"></text></g><g><title>_rjem_je_eset_fit (1 samples, 0.04%)</title><rect x="93.9127%" y="501" width="0.0441%" height="15" fill="rgb(218,95,35)" fg:x="2129" fg:w="1"/><text x="94.1627%" y="511.50"></text></g><g><title>_rjem_je_free_default (1 samples, 0.04%)</title><rect x="93.9568%" y="501" width="0.0441%" height="15" fill="rgb(229,13,5)" fg:x="2130" fg:w="1"/><text x="94.2068%" y="511.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.04%)</title><rect x="93.9568%" y="485" width="0.0441%" height="15" fill="rgb(252,164,30)" fg:x="2130" fg:w="1"/><text x="94.2068%" y="495.50"></text></g><g><title>_rjem_je_hook_invoke_dalloc (1 samples, 0.04%)</title><rect x="94.0009%" y="501" width="0.0441%" height="15" fill="rgb(232,68,36)" fg:x="2131" fg:w="1"/><text x="94.2509%" y="511.50"></text></g><g><title>_rjem_je_large_palloc (1 samples, 0.04%)</title><rect x="94.0450%" y="501" width="0.0441%" height="15" fill="rgb(219,59,54)" fg:x="2132" fg:w="1"/><text x="94.2950%" y="511.50"></text></g><g><title>_rjem_je_pa_alloc (2 samples, 0.09%)</title><rect x="94.0891%" y="501" width="0.0882%" height="15" fill="rgb(250,92,33)" fg:x="2133" fg:w="2"/><text x="94.3391%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.18%)</title><rect x="94.1773%" y="501" width="0.1764%" height="15" fill="rgb(229,162,54)" fg:x="2135" fg:w="4"/><text x="94.4273%" y="511.50"></text></g><g><title>_rjem_je_te_event_trigger (1 samples, 0.04%)</title><rect x="94.3538%" y="501" width="0.0441%" height="15" fill="rgb(244,114,52)" fg:x="2139" fg:w="1"/><text x="94.6038%" y="511.50"></text></g><g><title>__libc_csu_init (1 samples, 0.04%)</title><rect x="94.3979%" y="469" width="0.0441%" height="15" fill="rgb(212,211,43)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="479.50"></text></g><g><title>curl::INIT_CTOR::init_ctor (1 samples, 0.04%)</title><rect x="94.3979%" y="453" width="0.0441%" height="15" fill="rgb(226,147,8)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="463.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 0.04%)</title><rect x="94.3979%" y="437" width="0.0441%" height="15" fill="rgb(226,23,13)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="447.50"></text></g><g><title>curl_global_init (1 samples, 0.04%)</title><rect x="94.3979%" y="421" width="0.0441%" height="15" fill="rgb(240,63,4)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="431.50"></text></g><g><title>ossl_init (1 samples, 0.04%)</title><rect x="94.3979%" y="405" width="0.0441%" height="15" fill="rgb(221,1,32)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="415.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.04%)</title><rect x="94.3979%" y="389" width="0.0441%" height="15" fill="rgb(242,117,10)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="399.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="94.3979%" y="373" width="0.0441%" height="15" fill="rgb(249,172,44)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="383.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="94.3979%" y="357" width="0.0441%" height="15" fill="rgb(244,46,45)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="367.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="94.3979%" y="341" width="0.0441%" height="15" fill="rgb(206,43,17)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="351.50"></text></g><g><title>ossl_init_config_ossl_ (1 samples, 0.04%)</title><rect x="94.3979%" y="325" width="0.0441%" height="15" fill="rgb(239,218,39)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="335.50"></text></g><g><title>openssl_config_int (1 samples, 0.04%)</title><rect x="94.3979%" y="309" width="0.0441%" height="15" fill="rgb(208,169,54)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="319.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="94.3979%" y="293" width="0.0441%" height="15" fill="rgb(247,25,42)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="303.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="94.3979%" y="277" width="0.0441%" height="15" fill="rgb(226,23,31)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="287.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="94.3979%" y="261" width="0.0441%" height="15" fill="rgb(247,16,28)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="271.50"></text></g><g><title>ossl_init_engine_rdrand_ossl_ (1 samples, 0.04%)</title><rect x="94.3979%" y="245" width="0.0441%" height="15" fill="rgb(231,147,38)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="255.50"></text></g><g><title>ERR_clear_error (1 samples, 0.04%)</title><rect x="94.3979%" y="229" width="0.0441%" height="15" fill="rgb(253,81,48)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="239.50"></text></g><g><title>ERR_get_state (1 samples, 0.04%)</title><rect x="94.3979%" y="213" width="0.0441%" height="15" fill="rgb(249,222,43)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="223.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="94.3979%" y="197" width="0.0441%" height="15" fill="rgb(221,3,27)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="207.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="94.3979%" y="181" width="0.0441%" height="15" fill="rgb(228,180,5)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="191.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="94.3979%" y="165" width="0.0441%" height="15" fill="rgb(227,131,42)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="175.50"></text></g><g><title>ossl_init_load_crypto_strings_ossl_ (1 samples, 0.04%)</title><rect x="94.3979%" y="149" width="0.0441%" height="15" fill="rgb(212,3,39)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="159.50"></text></g><g><title>err_load_crypto_strings_int (1 samples, 0.04%)</title><rect x="94.3979%" y="133" width="0.0441%" height="15" fill="rgb(226,45,5)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="143.50"></text></g><g><title>ERR_load_EC_strings (1 samples, 0.04%)</title><rect x="94.3979%" y="117" width="0.0441%" height="15" fill="rgb(215,167,45)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="127.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.04%)</title><rect x="94.3979%" y="101" width="0.0441%" height="15" fill="rgb(250,218,53)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="111.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.04%)</title><rect x="94.3979%" y="85" width="0.0441%" height="15" fill="rgb(207,140,0)" fg:x="2140" fg:w="1"/><text x="94.6479%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustup::toolchain::ToolchainDescWithManifest&gt; (1 samples, 0.04%)</title><rect x="94.4420%" y="389" width="0.0441%" height="15" fill="rgb(238,133,51)" fg:x="2141" fg:w="1"/><text x="94.6920%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,rustup::dist::manifest::Package)&gt;&gt; (1 samples, 0.04%)</title><rect x="94.4420%" y="373" width="0.0441%" height="15" fill="rgb(218,203,53)" fg:x="2141" fg:w="1"/><text x="94.6920%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(rustup::dist::dist::TargetTriple,rustup::dist::manifest::TargetedPackage)&gt;&gt; (1 samples, 0.04%)</title><rect x="94.4420%" y="357" width="0.0441%" height="15" fill="rgb(226,184,25)" fg:x="2141" fg:w="1"/><text x="94.6920%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustup::dist::manifest::TargetedPackage&gt; (1 samples, 0.04%)</title><rect x="94.4420%" y="341" width="0.0441%" height="15" fill="rgb(231,121,21)" fg:x="2141" fg:w="1"/><text x="94.6920%" y="351.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="94.4420%" y="325" width="0.0441%" height="15" fill="rgb(251,14,34)" fg:x="2141" fg:w="1"/><text x="94.6920%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.04%)</title><rect x="94.4861%" y="325" width="0.0441%" height="15" fill="rgb(249,193,11)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="335.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="94.4861%" y="309" width="0.0441%" height="15" fill="rgb(220,172,37)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="94.4861%" y="293" width="0.0441%" height="15" fill="rgb(231,229,43)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="94.4861%" y="277" width="0.0441%" height="15" fill="rgb(250,161,5)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="94.4861%" y="261" width="0.0441%" height="15" fill="rgb(218,225,18)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="94.4861%" y="245" width="0.0441%" height="15" fill="rgb(245,45,42)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="94.4861%" y="229" width="0.0441%" height="15" fill="rgb(211,115,1)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="94.4861%" y="213" width="0.0441%" height="15" fill="rgb(248,133,52)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="94.4861%" y="197" width="0.0441%" height="15" fill="rgb(238,100,21)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="94.4861%" y="181" width="0.0441%" height="15" fill="rgb(247,144,11)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="94.4861%" y="165" width="0.0441%" height="15" fill="rgb(206,164,16)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="94.4861%" y="149" width="0.0441%" height="15" fill="rgb(222,34,3)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="94.4861%" y="133" width="0.0441%" height="15" fill="rgb(248,82,4)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="94.4861%" y="117" width="0.0441%" height="15" fill="rgb(228,81,46)" fg:x="2142" fg:w="1"/><text x="94.7361%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.04%)</title><rect x="94.5302%" y="309" width="0.0441%" height="15" fill="rgb(227,67,47)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="319.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="94.5302%" y="293" width="0.0441%" height="15" fill="rgb(215,93,53)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="94.5302%" y="277" width="0.0441%" height="15" fill="rgb(248,194,39)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="94.5302%" y="261" width="0.0441%" height="15" fill="rgb(215,5,19)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="94.5302%" y="245" width="0.0441%" height="15" fill="rgb(226,215,51)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="94.5302%" y="229" width="0.0441%" height="15" fill="rgb(225,56,26)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="94.5302%" y="213" width="0.0441%" height="15" fill="rgb(222,75,29)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="94.5302%" y="197" width="0.0441%" height="15" fill="rgb(236,139,6)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="94.5302%" y="181" width="0.0441%" height="15" fill="rgb(223,137,36)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="94.5302%" y="165" width="0.0441%" height="15" fill="rgb(226,99,2)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="175.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="94.5302%" y="149" width="0.0441%" height="15" fill="rgb(206,133,23)" fg:x="2143" fg:w="1"/><text x="94.7802%" y="159.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::toml_to_components (2 samples, 0.09%)</title><rect x="94.5302%" y="325" width="0.0882%" height="15" fill="rgb(243,173,15)" fg:x="2143" fg:w="2"/><text x="94.7802%" y="335.50"></text></g><g><title>rustup::dist::manifest::Component::from_toml (1 samples, 0.04%)</title><rect x="94.5743%" y="309" width="0.0441%" height="15" fill="rgb(228,69,28)" fg:x="2144" fg:w="1"/><text x="94.8243%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="94.5743%" y="293" width="0.0441%" height="15" fill="rgb(212,51,22)" fg:x="2144" fg:w="1"/><text x="94.8243%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.04%)</title><rect x="94.5743%" y="277" width="0.0441%" height="15" fill="rgb(227,113,0)" fg:x="2144" fg:w="1"/><text x="94.8243%" y="287.50"></text></g><g><title>rustup::dist::manifest::TargetedPackage::from_toml (4 samples, 0.18%)</title><rect x="94.4861%" y="341" width="0.1764%" height="15" fill="rgb(252,84,27)" fg:x="2142" fg:w="4"/><text x="94.7361%" y="351.50"></text></g><g><title>rustup::utils::toml_utils::get_value (1 samples, 0.04%)</title><rect x="94.6184%" y="325" width="0.0441%" height="15" fill="rgb(223,145,39)" fg:x="2145" fg:w="1"/><text x="94.8684%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.04%)</title><rect x="94.6184%" y="309" width="0.0441%" height="15" fill="rgb(239,219,30)" fg:x="2145" fg:w="1"/><text x="94.8684%" y="319.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.04%)</title><rect x="94.6184%" y="293" width="0.0441%" height="15" fill="rgb(224,196,39)" fg:x="2145" fg:w="1"/><text x="94.8684%" y="303.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="94.6184%" y="277" width="0.0441%" height="15" fill="rgb(205,35,43)" fg:x="2145" fg:w="1"/><text x="94.8684%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;toml::de::Table&gt;&gt; (1 samples, 0.04%)</title><rect x="94.6625%" y="325" width="0.0441%" height="15" fill="rgb(228,201,21)" fg:x="2146" fg:w="1"/><text x="94.9125%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="94.6625%" y="309" width="0.0441%" height="15" fill="rgb(237,118,16)" fg:x="2146" fg:w="1"/><text x="94.9125%" y="319.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="94.6625%" y="293" width="0.0441%" height="15" fill="rgb(241,17,19)" fg:x="2146" fg:w="1"/><text x="94.9125%" y="303.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="94.7067%" y="309" width="0.0882%" height="15" fill="rgb(214,10,25)" fg:x="2147" fg:w="2"/><text x="94.9567%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="94.7949%" y="309" width="0.0441%" height="15" fill="rgb(238,37,29)" fg:x="2149" fg:w="1"/><text x="95.0449%" y="319.50"></text></g><g><title>toml::de::Deserializer::add_dotted_key (1 samples, 0.04%)</title><rect x="94.8390%" y="309" width="0.0441%" height="15" fill="rgb(253,83,25)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="94.8390%" y="293" width="0.0441%" height="15" fill="rgb(234,192,12)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="94.8390%" y="277" width="0.0441%" height="15" fill="rgb(241,216,45)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="94.8390%" y="261" width="0.0441%" height="15" fill="rgb(242,22,33)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="271.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="94.8390%" y="245" width="0.0441%" height="15" fill="rgb(231,105,49)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.8390%" y="229" width="0.0441%" height="15" fill="rgb(218,204,15)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.8390%" y="213" width="0.0441%" height="15" fill="rgb(235,138,41)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="94.8390%" y="197" width="0.0441%" height="15" fill="rgb(246,0,9)" fg:x="2150" fg:w="1"/><text x="95.0890%" y="207.50"></text></g><g><title>toml::de::Deserializer::dotted_key (2 samples, 0.09%)</title><rect x="94.8831%" y="309" width="0.0882%" height="15" fill="rgb(210,74,4)" fg:x="2151" fg:w="2"/><text x="95.1331%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (2 samples, 0.09%)</title><rect x="94.8831%" y="293" width="0.0882%" height="15" fill="rgb(250,60,41)" fg:x="2151" fg:w="2"/><text x="95.1331%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::next (2 samples, 0.09%)</title><rect x="94.8831%" y="277" width="0.0882%" height="15" fill="rgb(220,115,12)" fg:x="2151" fg:w="2"/><text x="95.1331%" y="287.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="94.8831%" y="261" width="0.0882%" height="15" fill="rgb(237,100,13)" fg:x="2151" fg:w="2"/><text x="95.1331%" y="271.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="95.0596%" y="261" width="0.0882%" height="15" fill="rgb(213,55,26)" fg:x="2155" fg:w="2"/><text x="95.3096%" y="271.50"></text></g><g><title>toml::de::Deserializer::value (5 samples, 0.22%)</title><rect x="94.9713%" y="309" width="0.2206%" height="15" fill="rgb(216,17,4)" fg:x="2153" fg:w="5"/><text x="95.2213%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (5 samples, 0.22%)</title><rect x="94.9713%" y="293" width="0.2206%" height="15" fill="rgb(220,153,47)" fg:x="2153" fg:w="5"/><text x="95.2213%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::read_string (5 samples, 0.22%)</title><rect x="94.9713%" y="277" width="0.2206%" height="15" fill="rgb(215,131,9)" fg:x="2153" fg:w="5"/><text x="95.2213%" y="287.50"></text></g><g><title>toml::tokens::Tokenizer::basic_string::{{closure}} (1 samples, 0.04%)</title><rect x="95.1478%" y="261" width="0.0441%" height="15" fill="rgb(233,46,42)" fg:x="2157" fg:w="1"/><text x="95.3978%" y="271.50"></text></g><g><title>toml::tokens::Tokenizer::eat_spanned (2 samples, 0.09%)</title><rect x="95.1919%" y="309" width="0.0882%" height="15" fill="rgb(226,86,7)" fg:x="2158" fg:w="2"/><text x="95.4419%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.04%)</title><rect x="95.2360%" y="293" width="0.0441%" height="15" fill="rgb(239,226,21)" fg:x="2159" fg:w="1"/><text x="95.4860%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::eat_whitespace (1 samples, 0.04%)</title><rect x="95.2801%" y="309" width="0.0441%" height="15" fill="rgb(244,137,22)" fg:x="2160" fg:w="1"/><text x="95.5301%" y="319.50"></text></g><g><title>&lt;toml::tokens::CrlfFold as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="95.2801%" y="293" width="0.0441%" height="15" fill="rgb(211,139,35)" fg:x="2160" fg:w="1"/><text x="95.5301%" y="303.50"></text></g><g><title>toml::tokens::Tokenizer::expect_spanned (2 samples, 0.09%)</title><rect x="95.3242%" y="309" width="0.0882%" height="15" fill="rgb(214,62,50)" fg:x="2161" fg:w="2"/><text x="95.5742%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.04%)</title><rect x="95.3683%" y="293" width="0.0441%" height="15" fill="rgb(212,113,44)" fg:x="2162" fg:w="1"/><text x="95.6183%" y="303.50"></text></g><g><title>toml::de::Deserializer::tables (17 samples, 0.75%)</title><rect x="94.7067%" y="325" width="0.7499%" height="15" fill="rgb(226,150,43)" fg:x="2147" fg:w="17"/><text x="94.9567%" y="335.50"></text></g><g><title>toml::tokens::Tokenizer::table_key (1 samples, 0.04%)</title><rect x="95.4124%" y="309" width="0.0441%" height="15" fill="rgb(250,71,37)" fg:x="2163" fg:w="1"/><text x="95.6624%" y="319.50"></text></g><g><title>toml::tokens::Tokenizer::next (1 samples, 0.04%)</title><rect x="95.4124%" y="293" width="0.0441%" height="15" fill="rgb(219,76,19)" fg:x="2163" fg:w="1"/><text x="95.6624%" y="303.50"></text></g><g><title>toml::de::build_table_indices (2 samples, 0.09%)</title><rect x="95.4566%" y="325" width="0.0882%" height="15" fill="rgb(250,39,11)" fg:x="2164" fg:w="2"/><text x="95.7066%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="95.5007%" y="309" width="0.0441%" height="15" fill="rgb(230,64,31)" fg:x="2165" fg:w="1"/><text x="95.7507%" y="319.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="95.5448%" y="309" width="0.0882%" height="15" fill="rgb(208,222,23)" fg:x="2166" fg:w="2"/><text x="95.7948%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.04%)</title><rect x="95.6330%" y="309" width="0.0441%" height="15" fill="rgb(227,125,18)" fg:x="2168" fg:w="1"/><text x="95.8830%" y="319.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="95.6330%" y="293" width="0.0441%" height="15" fill="rgb(234,210,9)" fg:x="2168" fg:w="1"/><text x="95.8830%" y="303.50"></text></g><g><title>_start (30 samples, 1.32%)</title><rect x="94.3979%" y="501" width="1.3233%" height="15" fill="rgb(217,127,24)" fg:x="2140" fg:w="30"/><text x="94.6479%" y="511.50"></text></g><g><title>__libc_start_main (30 samples, 1.32%)</title><rect x="94.3979%" y="485" width="1.3233%" height="15" fill="rgb(239,141,48)" fg:x="2140" fg:w="30"/><text x="94.6479%" y="495.50"></text></g><g><title>main (29 samples, 1.28%)</title><rect x="94.4420%" y="469" width="1.2792%" height="15" fill="rgb(227,109,8)" fg:x="2141" fg:w="29"/><text x="94.6920%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 1.28%)</title><rect x="94.4420%" y="453" width="1.2792%" height="15" fill="rgb(235,184,23)" fg:x="2141" fg:w="29"/><text x="94.6920%" y="463.50"></text></g><g><title>rustup_init::main (29 samples, 1.28%)</title><rect x="94.4420%" y="437" width="1.2792%" height="15" fill="rgb(227,226,48)" fg:x="2141" fg:w="29"/><text x="94.6920%" y="447.50"></text></g><g><title>rustup::cli::proxy_mode::main (29 samples, 1.28%)</title><rect x="94.4420%" y="421" width="1.2792%" height="15" fill="rgb(206,150,11)" fg:x="2141" fg:w="29"/><text x="94.6920%" y="431.50"></text></g><g><title>rustup::config::Cfg::find_or_install_override_toolchain_or_default (29 samples, 1.28%)</title><rect x="94.4420%" y="405" width="1.2792%" height="15" fill="rgb(254,2,33)" fg:x="2141" fg:w="29"/><text x="94.6920%" y="415.50"></text></g><g><title>rustup::toolchain::DistributableToolchain::get_toolchain_desc_with_manifest (28 samples, 1.24%)</title><rect x="94.4861%" y="389" width="1.2351%" height="15" fill="rgb(243,160,20)" fg:x="2142" fg:w="28"/><text x="94.7361%" y="399.50"></text></g><g><title>rustup::dist::manifestation::Manifestation::load_manifest (28 samples, 1.24%)</title><rect x="94.4861%" y="373" width="1.2351%" height="15" fill="rgb(218,208,30)" fg:x="2142" fg:w="28"/><text x="94.7361%" y="383.50"></text></g><g><title>rustup::dist::manifest::Manifest::parse (28 samples, 1.24%)</title><rect x="94.4861%" y="357" width="1.2351%" height="15" fill="rgb(224,120,49)" fg:x="2142" fg:w="28"/><text x="94.7361%" y="367.50"></text></g><g><title>toml::de::from_str (24 samples, 1.06%)</title><rect x="94.6625%" y="341" width="1.0587%" height="15" fill="rgb(246,12,2)" fg:x="2146" fg:w="24"/><text x="94.9125%" y="351.50"></text></g><g><title>toml::de::build_table_pindices (4 samples, 0.18%)</title><rect x="95.5448%" y="325" width="0.1764%" height="15" fill="rgb(236,117,3)" fg:x="2166" fg:w="4"/><text x="95.7948%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="95.6771%" y="309" width="0.0441%" height="15" fill="rgb(216,128,52)" fg:x="2169" fg:w="1"/><text x="95.9271%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="95.6771%" y="293" width="0.0441%" height="15" fill="rgb(246,145,19)" fg:x="2169" fg:w="1"/><text x="95.9271%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow::&lt;alloc::alloc::Global&gt; (1 samples, 0.04%)</title><rect x="95.7212%" y="501" width="0.0441%" height="15" fill="rgb(222,11,46)" fg:x="2170" fg:w="1"/><text x="95.9712%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.04%)</title><rect x="95.7653%" y="501" width="0.0441%" height="15" fill="rgb(245,82,36)" fg:x="2171" fg:w="1"/><text x="96.0153%" y="511.50"></text></g><g><title>core::ptr::drop_in_place::&lt;rustc_middle::mir::Body&gt; (1 samples, 0.04%)</title><rect x="95.8094%" y="501" width="0.0441%" height="15" fill="rgb(250,73,51)" fg:x="2172" fg:w="1"/><text x="96.0594%" y="511.50"></text></g><g><title>core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="95.8536%" y="501" width="0.0441%" height="15" fill="rgb(221,189,23)" fg:x="2173" fg:w="1"/><text x="96.1036%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to (1 samples, 0.04%)</title><rect x="95.8536%" y="485" width="0.0441%" height="15" fill="rgb(210,33,7)" fg:x="2173" fg:w="1"/><text x="96.1036%" y="495.50"></text></g><g><title>core::ptr::align_offset (1 samples, 0.04%)</title><rect x="95.8536%" y="469" width="0.0441%" height="15" fill="rgb(210,107,22)" fg:x="2173" fg:w="1"/><text x="96.1036%" y="479.50"></text></g><g><title>core::slice::sort::merge_sort::&lt;u32, &lt;[u32]&gt;::sort_by_key&lt;&amp;rustc_span::symbol::Symbol, &lt;rustc_data_structures::sorted_map::index_map::SortedIndexMultiMap&lt;u32, rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem&gt; as core::iter::traits::collect::FromIterator&lt;(rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem)&gt;&gt;::from_iter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}, alloc::slice::stable_sort&lt;u32, &lt;[u32]&gt;::sort_by_key&lt;&amp;rustc_span::symbol::Symbol, &lt;rustc_data_structures::sorted_map::index_map::SortedIndexMultiMap&lt;u32, rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem&gt; as core::iter::traits::collect::FromIterator&lt;(rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem)&gt;&gt;::from_iter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt;::{closure#0}, alloc::slice::stable_sort&lt;u32, &lt;[u32]&gt;::sort_by_key&lt;&amp;rustc_span::symbol::Symbol, &lt;rustc_data_structures::sorted_map::index_map::SortedIndexMultiMap&lt;u32, rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem&gt; as core::iter::traits::collect::FromIterator&lt;(rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem)&gt;&gt;::from_iter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt;::{closure#1}, alloc::slice::stable_sort&lt;u32, &lt;[u32]&gt;::sort_by_key&lt;&amp;rustc_span::symbol::Symbol, &lt;rustc_data_structures::sorted_map::index_map::SortedIndexMultiMap&lt;u32, rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem&gt; as core::iter::traits::collect::FromIterator&lt;(rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem)&gt;&gt;::from_iter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt;::{closure#2}, alloc::slice::stable_sort&lt;u32, &lt;[u32]&gt;::sort_by_key&lt;&amp;rustc_span::symbol::Symbol, &lt;rustc_data_structures::sorted_map::index_map::SortedIndexMultiMap&lt;u32, rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem&gt; as core::iter::traits::collect::FromIterator&lt;(rustc_span::symbol::Symbol, &amp;rustc_middle::ty::assoc::AssocItem)&gt;&gt;::from_iter&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;, &lt;rustc_middle::ty::assoc::AssocItems&gt;::new&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustc_span::def_id::DefId&gt;, rustc_ty_utils::assoc::associated_items::{closure#0}&gt;&gt;::{closure#0}&gt;&gt;::{closure#0}&gt;::{closure#0}&gt;::{closure#3}&gt; (1 samples, 0.04%)</title><rect x="95.8977%" y="501" width="0.0441%" height="15" fill="rgb(222,116,37)" fg:x="2174" fg:w="1"/><text x="96.1477%" y="511.50"></text></g><g><title>do_rallocx (2 samples, 0.09%)</title><rect x="95.9418%" y="501" width="0.0882%" height="15" fill="rgb(254,17,48)" fg:x="2175" fg:w="2"/><text x="96.1918%" y="511.50"></text></g><g><title>llvm::CallInst::Create (1 samples, 0.04%)</title><rect x="96.0300%" y="501" width="0.0441%" height="15" fill="rgb(224,36,32)" fg:x="2177" fg:w="1"/><text x="96.2800%" y="511.50"></text></g><g><title>llvm::CallInst::init (1 samples, 0.04%)</title><rect x="96.0300%" y="485" width="0.0441%" height="15" fill="rgb(232,90,46)" fg:x="2177" fg:w="1"/><text x="96.2800%" y="495.50"></text></g><g><title>llvm::IRBuilderBase::CreateCall (1 samples, 0.04%)</title><rect x="96.0741%" y="501" width="0.0441%" height="15" fill="rgb(241,66,40)" fg:x="2178" fg:w="1"/><text x="96.3241%" y="511.50"></text></g><g><title>llvm::Instruction::setMetadata (1 samples, 0.04%)</title><rect x="96.0741%" y="485" width="0.0441%" height="15" fill="rgb(249,184,29)" fg:x="2178" fg:w="1"/><text x="96.3241%" y="495.50"></text></g><g><title>llvm::StringMapEntry&lt;std::unique_ptr&lt;llvm::ConstantDataSequential, std::default_delete&lt;llvm::ConstantDataSequential&gt; &gt; &gt;::Destroy&lt;llvm::MallocAllocator&gt; (3 samples, 0.13%)</title><rect x="96.1182%" y="501" width="0.1323%" height="15" fill="rgb(231,181,1)" fg:x="2179" fg:w="3"/><text x="96.3682%" y="511.50"></text></g><g><title>memchr::memchr::x86::avx::memchr (1 samples, 0.04%)</title><rect x="96.2506%" y="501" width="0.0441%" height="15" fill="rgb(224,94,2)" fg:x="2182" fg:w="1"/><text x="96.5006%" y="511.50"></text></g><g><title>prof_stats_bins_i_index (1 samples, 0.04%)</title><rect x="96.2947%" y="501" width="0.0441%" height="15" fill="rgb(229,170,15)" fg:x="2183" fg:w="1"/><text x="96.5447%" y="511.50"></text></g><g><title>rustc_ast::visit::walk_local::&lt;rustc_resolve::check_unused::UnusedImportCheckVisitor&gt; (1 samples, 0.04%)</title><rect x="96.3388%" y="501" width="0.0441%" height="15" fill="rgb(240,127,35)" fg:x="2184" fg:w="1"/><text x="96.5888%" y="511.50"></text></g><g><title>rustc_codegen_llvm::attributes::from_fn_attrs (1 samples, 0.04%)</title><rect x="96.3829%" y="501" width="0.0441%" height="15" fill="rgb(248,196,34)" fg:x="2185" fg:w="1"/><text x="96.6329%" y="511.50"></text></g><g><title>rustc_codegen_llvm::back::lto::run_thin (1 samples, 0.04%)</title><rect x="96.4270%" y="501" width="0.0441%" height="15" fill="rgb(236,137,7)" fg:x="2186" fg:w="1"/><text x="96.6770%" y="511.50"></text></g><g><title>rustc_codegen_llvm::callee::get_fn (2 samples, 0.09%)</title><rect x="96.4711%" y="501" width="0.0882%" height="15" fill="rgb(235,127,16)" fg:x="2187" fg:w="2"/><text x="96.7211%" y="511.50"></text></g><g><title>llvm::Attribute::get (1 samples, 0.04%)</title><rect x="96.5152%" y="485" width="0.0441%" height="15" fill="rgb(250,192,54)" fg:x="2188" fg:w="1"/><text x="96.7652%" y="495.50"></text></g><g><title>rustc_codegen_llvm::consts::const_alloc_to_llvm (1 samples, 0.04%)</title><rect x="96.5593%" y="501" width="0.0441%" height="15" fill="rgb(218,98,20)" fg:x="2189" fg:w="1"/><text x="96.8093%" y="511.50"></text></g><g><title>LLVMConstStructInContext (1 samples, 0.04%)</title><rect x="96.5593%" y="485" width="0.0441%" height="15" fill="rgb(230,176,47)" fg:x="2189" fg:w="1"/><text x="96.8093%" y="495.50"></text></g><g><title>llvm::StructType::get (1 samples, 0.04%)</title><rect x="96.5593%" y="469" width="0.0441%" height="15" fill="rgb(244,2,33)" fg:x="2189" fg:w="1"/><text x="96.8093%" y="479.50"></text></g><g><title>llvm::AnonStructTypeKeyInfo::getHashValue (1 samples, 0.04%)</title><rect x="96.5593%" y="453" width="0.0441%" height="15" fill="rgb(231,100,17)" fg:x="2189" fg:w="1"/><text x="96.8093%" y="463.50"></text></g><g><title>rustc_codegen_llvm::context::create_module (1 samples, 0.04%)</title><rect x="96.6034%" y="501" width="0.0441%" height="15" fill="rgb(245,23,12)" fg:x="2190" fg:w="1"/><text x="96.8534%" y="511.50"></text></g><g><title>llvm::X86TargetMachine::~X86TargetMachine (1 samples, 0.04%)</title><rect x="96.6034%" y="485" width="0.0441%" height="15" fill="rgb(249,55,22)" fg:x="2190" fg:w="1"/><text x="96.8534%" y="495.50"></text></g><g><title>llvm::TargetMachine::~TargetMachine (1 samples, 0.04%)</title><rect x="96.6034%" y="469" width="0.0441%" height="15" fill="rgb(207,134,9)" fg:x="2190" fg:w="1"/><text x="96.8534%" y="479.50"></text></g><g><title>llvm::X86ELFMCAsmInfo::~X86ELFMCAsmInfo (1 samples, 0.04%)</title><rect x="96.6034%" y="453" width="0.0441%" height="15" fill="rgb(218,134,0)" fg:x="2190" fg:w="1"/><text x="96.8534%" y="463.50"></text></g><g><title>llvm::DIBuilder::finalizeSubprogram (1 samples, 0.04%)</title><rect x="96.6476%" y="469" width="0.0441%" height="15" fill="rgb(213,212,33)" fg:x="2191" fg:w="1"/><text x="96.8976%" y="479.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::finalize (2 samples, 0.09%)</title><rect x="96.6476%" y="501" width="0.0882%" height="15" fill="rgb(252,106,18)" fg:x="2191" fg:w="2"/><text x="96.8976%" y="511.50"></text></g><g><title>llvm::DIBuilder::finalize (2 samples, 0.09%)</title><rect x="96.6476%" y="485" width="0.0882%" height="15" fill="rgb(208,126,42)" fg:x="2191" fg:w="2"/><text x="96.8976%" y="495.50"></text></g><g><title>llvm::MDTuple::getImpl (1 samples, 0.04%)</title><rect x="96.6917%" y="469" width="0.0441%" height="15" fill="rgb(246,175,29)" fg:x="2192" fg:w="1"/><text x="96.9417%" y="479.50"></text></g><g><title>rustc_codegen_llvm::debuginfo::namespace::item_namespace (1 samples, 0.04%)</title><rect x="96.7358%" y="501" width="0.0441%" height="15" fill="rgb(215,13,50)" fg:x="2193" fg:w="1"/><text x="96.9858%" y="511.50"></text></g><g><title>llvm::DIBuilder::createNameSpace (1 samples, 0.04%)</title><rect x="96.7358%" y="485" width="0.0441%" height="15" fill="rgb(216,172,15)" fg:x="2193" fg:w="1"/><text x="96.9858%" y="495.50"></text></g><g><title>llvm::MDString::get (1 samples, 0.04%)</title><rect x="96.7358%" y="469" width="0.0441%" height="15" fill="rgb(212,103,13)" fg:x="2193" fg:w="1"/><text x="96.9858%" y="479.50"></text></g><g><title>rustc_codegen_llvm::type_of::uncached_llvm_type (1 samples, 0.04%)</title><rect x="96.7799%" y="501" width="0.0441%" height="15" fill="rgb(231,171,36)" fg:x="2194" fg:w="1"/><text x="97.0299%" y="511.50"></text></g><g><title>llvm::StructType::get (1 samples, 0.04%)</title><rect x="96.7799%" y="485" width="0.0441%" height="15" fill="rgb(250,123,20)" fg:x="2194" fg:w="1"/><text x="97.0299%" y="495.50"></text></g><g><title>llvm::AnonStructTypeKeyInfo::getHashValue (1 samples, 0.04%)</title><rect x="96.7799%" y="469" width="0.0441%" height="15" fill="rgb(212,53,50)" fg:x="2194" fg:w="1"/><text x="97.0299%" y="479.50"></text></g><g><title>rustc_codegen_ssa::debuginfo::type_names::push_item_name (8 samples, 0.35%)</title><rect x="96.8240%" y="501" width="0.3529%" height="15" fill="rgb(243,54,12)" fg:x="2195" fg:w="8"/><text x="97.0740%" y="511.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.09%)</title><rect x="97.0887%" y="485" width="0.0882%" height="15" fill="rgb(234,101,34)" fg:x="2201" fg:w="2"/><text x="97.3387%" y="495.50"></text></g><g><title>rustc_codegen_ssa::mir::analyze::non_ssa_locals::&lt;rustc_codegen_llvm::builder::Builder&gt; (2 samples, 0.09%)</title><rect x="97.1769%" y="501" width="0.0882%" height="15" fill="rgb(254,67,22)" fg:x="2203" fg:w="2"/><text x="97.4269%" y="511.50"></text></g><g><title>rustc_hir_analysis::check::wfcheck::check_where_clauses (1 samples, 0.04%)</title><rect x="97.2651%" y="501" width="0.0441%" height="15" fill="rgb(250,35,47)" fg:x="2205" fg:w="1"/><text x="97.5151%" y="511.50"></text></g><g><title>rustc_middle::ty::relate::super_relate_tys::&lt;rustc_infer::infer::combine::Generalizer&gt; (1 samples, 0.04%)</title><rect x="97.3092%" y="501" width="0.0441%" height="15" fill="rgb(226,126,38)" fg:x="2206" fg:w="1"/><text x="97.5592%" y="511.50"></text></g><g><title>rustc_middle::ty::relate::super_relate_tys::&lt;rustc_infer::infer::sub::Sub&gt; (1 samples, 0.04%)</title><rect x="97.3533%" y="501" width="0.0441%" height="15" fill="rgb(216,138,53)" fg:x="2207" fg:w="1"/><text x="97.6033%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="97.3533%" y="485" width="0.0441%" height="15" fill="rgb(246,199,43)" fg:x="2207" fg:w="1"/><text x="97.6033%" y="495.50"></text></g><g><title>rustc_middle::ty::trait_def::trait_impls_of_provider (1 samples, 0.04%)</title><rect x="97.3974%" y="501" width="0.0441%" height="15" fill="rgb(232,125,11)" fg:x="2208" fg:w="1"/><text x="97.6474%" y="511.50"></text></g><g><title>rustc_middle::util::common::record_time::&lt;(), rustc_symbol_mangling::legacy::get_symbol_hash::{closure#0}::{closure#0}&gt; (1 samples, 0.04%)</title><rect x="97.4416%" y="501" width="0.0441%" height="15" fill="rgb(218,219,45)" fg:x="2209" fg:w="1"/><text x="97.6916%" y="511.50"></text></g><g><title>rustc_mir_build::thir::pattern::usefulness::is_useful (1 samples, 0.04%)</title><rect x="97.4857%" y="501" width="0.0441%" height="15" fill="rgb(216,102,54)" fg:x="2210" fg:w="1"/><text x="97.7357%" y="511.50"></text></g><g><title>rustc_mir_dataflow::move_paths::builder::gather_moves (1 samples, 0.04%)</title><rect x="97.5298%" y="501" width="0.0441%" height="15" fill="rgb(250,228,7)" fg:x="2211" fg:w="1"/><text x="97.7798%" y="511.50"></text></g><g><title>rustc_mir_transform::inline::cycle::mir_inliner_callees (1 samples, 0.04%)</title><rect x="97.5739%" y="501" width="0.0441%" height="15" fill="rgb(226,125,25)" fg:x="2212" fg:w="1"/><text x="97.8239%" y="511.50"></text></g><g><title>rustc_mir_transform::pass_manager::run_passes (1 samples, 0.04%)</title><rect x="97.6180%" y="501" width="0.0441%" height="15" fill="rgb(224,165,27)" fg:x="2213" fg:w="1"/><text x="97.8680%" y="511.50"></text></g><g><title>rustc_mir_transform::simplify::simplify_cfg (3 samples, 0.13%)</title><rect x="97.6621%" y="501" width="0.1323%" height="15" fill="rgb(233,86,3)" fg:x="2214" fg:w="3"/><text x="97.9121%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="97.7503%" y="485" width="0.0441%" height="15" fill="rgb(228,116,20)" fg:x="2216" fg:w="1"/><text x="98.0003%" y="495.50"></text></g><g><title>rustc_mir_transform::simplify::simplify_locals (1 samples, 0.04%)</title><rect x="97.7944%" y="501" width="0.0441%" height="15" fill="rgb(209,192,17)" fg:x="2217" fg:w="1"/><text x="98.0444%" y="511.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.04%)</title><rect x="97.8386%" y="501" width="0.0441%" height="15" fill="rgb(224,88,34)" fg:x="2218" fg:w="1"/><text x="98.0886%" y="511.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (5 samples, 0.22%)</title><rect x="97.8827%" y="501" width="0.2206%" height="15" fill="rgb(233,38,6)" fg:x="2219" fg:w="5"/><text x="98.1327%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::evaluate_obligation, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (2 samples, 0.09%)</title><rect x="98.1032%" y="501" width="0.0882%" height="15" fill="rgb(212,59,30)" fg:x="2224" fg:w="2"/><text x="98.3532%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::generics_of, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (1 samples, 0.04%)</title><rect x="98.1914%" y="501" width="0.0441%" height="15" fill="rgb(213,80,3)" fg:x="2226" fg:w="1"/><text x="98.4414%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::impl_trait_ref, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (16 samples, 0.71%)</title><rect x="98.2356%" y="501" width="0.7058%" height="15" fill="rgb(251,178,7)" fg:x="2227" fg:w="16"/><text x="98.4856%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::implementations_of_trait, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (5 samples, 0.22%)</title><rect x="98.9413%" y="501" width="0.2206%" height="15" fill="rgb(213,154,26)" fg:x="2243" fg:w="5"/><text x="99.1913%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::predicates_of, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (2 samples, 0.09%)</title><rect x="99.1619%" y="501" width="0.0882%" height="15" fill="rgb(238,165,49)" fg:x="2248" fg:w="2"/><text x="99.4119%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (1 samples, 0.04%)</title><rect x="99.2501%" y="501" width="0.0441%" height="15" fill="rgb(248,91,46)" fg:x="2250" fg:w="1"/><text x="99.5001%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query::&lt;rustc_query_impl::queries::symbol_name, rustc_query_impl::plumbing::QueryCtxt, rustc_middle::dep_graph::dep_node::DepKind&gt; (2 samples, 0.09%)</title><rect x="99.2942%" y="501" width="0.0882%" height="15" fill="rgb(244,21,52)" fg:x="2251" fg:w="2"/><text x="99.5442%" y="511.50"></text></g><g><title>rustc_symbol_mangling::legacy::mangle (1 samples, 0.04%)</title><rect x="99.3824%" y="501" width="0.0441%" height="15" fill="rgb(247,122,20)" fg:x="2253" fg:w="1"/><text x="99.6324%" y="511.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph::assoc_def (1 samples, 0.04%)</title><rect x="99.4266%" y="501" width="0.0441%" height="15" fill="rgb(218,27,9)" fg:x="2254" fg:w="1"/><text x="99.6766%" y="511.50"></text></g><g><title>rustc_trait_selection::traits::specialize::specialization_graph_provider (6 samples, 0.26%)</title><rect x="99.4707%" y="501" width="0.2647%" height="15" fill="rgb(246,7,6)" fg:x="2255" fg:w="6"/><text x="99.7207%" y="511.50"></text></g><g><title>rustc_trait_selection::traits::type_known_to_meet_bound_modulo_regions (1 samples, 0.04%)</title><rect x="99.7353%" y="501" width="0.0441%" height="15" fill="rgb(227,135,54)" fg:x="2261" fg:w="1"/><text x="99.9853%" y="511.50"></text></g><g><title>rustc_traits::dropck_outlives::dtorck_constraint_for_ty (1 samples, 0.04%)</title><rect x="99.7794%" y="501" width="0.0441%" height="15" fill="rgb(247,14,11)" fg:x="2262" fg:w="1"/><text x="100.0294%" y="511.50"></text></g><g><title>std::path::Components::include_cur_dir (1 samples, 0.04%)</title><rect x="99.8236%" y="501" width="0.0441%" height="15" fill="rgb(206,149,34)" fg:x="2263" fg:w="1"/><text x="100.0736%" y="511.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.04%)</title><rect x="99.8677%" y="501" width="0.0441%" height="15" fill="rgb(227,228,4)" fg:x="2264" fg:w="1"/><text x="100.1177%" y="511.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.04%)</title><rect x="99.8677%" y="485" width="0.0441%" height="15" fill="rgb(238,218,28)" fg:x="2264" fg:w="1"/><text x="100.1177%" y="495.50"></text></g><g><title>statx (1 samples, 0.04%)</title><rect x="99.8677%" y="469" width="0.0441%" height="15" fill="rgb(252,86,40)" fg:x="2264" fg:w="1"/><text x="100.1177%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="99.8677%" y="453" width="0.0441%" height="15" fill="rgb(251,225,11)" fg:x="2264" fg:w="1"/><text x="100.1177%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="99.8677%" y="437" width="0.0441%" height="15" fill="rgb(206,46,49)" fg:x="2264" fg:w="1"/><text x="100.1177%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="99.8677%" y="421" width="0.0441%" height="15" fill="rgb(245,128,24)" fg:x="2264" fg:w="1"/><text x="100.1177%" y="431.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.04%)</title><rect x="99.9118%" y="501" width="0.0441%" height="15" fill="rgb(219,177,34)" fg:x="2265" fg:w="1"/><text x="100.1618%" y="511.50"></text></g><g><title>std::sys::unix::thread::min_stack_size (1 samples, 0.04%)</title><rect x="99.9118%" y="485" width="0.0441%" height="15" fill="rgb(218,60,48)" fg:x="2265" fg:w="1"/><text x="100.1618%" y="495.50"></text></g><g><title>__pthread_get_minstack (1 samples, 0.04%)</title><rect x="99.9118%" y="469" width="0.0441%" height="15" fill="rgb(221,11,5)" fg:x="2265" fg:w="1"/><text x="100.1618%" y="479.50"></text></g><g><title>all (2,267 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(220,148,13)" fg:x="0" fg:w="2267"/><text x="0.2500%" y="543.50"></text></g><g><title>rustc (665 samples, 29.33%)</title><rect x="70.6661%" y="517" width="29.3339%" height="15" fill="rgb(210,16,3)" fg:x="1602" fg:w="665"/><text x="70.9161%" y="527.50">rustc</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.04%)</title><rect x="99.9559%" y="501" width="0.0441%" height="15" fill="rgb(236,80,2)" fg:x="2266" fg:w="1"/><text x="100.2059%" y="511.50"></text></g><g><title>__clock_gettime (1 samples, 0.04%)</title><rect x="99.9559%" y="485" width="0.0441%" height="15" fill="rgb(239,129,19)" fg:x="2266" fg:w="1"/><text x="100.2059%" y="495.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="99.9559%" y="469" width="0.0441%" height="15" fill="rgb(220,106,35)" fg:x="2266" fg:w="1"/><text x="100.2059%" y="479.50"></text></g></svg></svg>